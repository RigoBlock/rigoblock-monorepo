version: 2.0

references:
  workspace_root: &workspace_root
    ~/rigoblock-monorepo

  timezone: &timezone
    "/usr/share/zoneinfo/Europe/Rome"

  node_image: &node_image
    circleci/node:8.10.0-stretch

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  setup:
    working_directory: *workspace_root
    environment:
      TZ: *timezone
    docker:
      - image: *node_image
    steps:
      - checkout
      - restore_cache:
          key: monorepo-{{ checksum "yarn.lock" }}
      - run:
          name: Install lerna and monorepo dependencies
          command: yarn
      - run:
          name: Installing all dependencies
          command: yarn bootstrap
      - save_cache:
          key: monorepo-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - ~/.cache/yarn

  build-dapp:
    working_directory: *workspace_root
    environment:
      TZ: *timezone
    docker:
      - image: *node_image
    steps:
      - restore_cache:
          key: monorepo-{{ checksum "yarn.lock" }}
      - run:
          name: Building dist
          command: npx lerna run --scope @rigoblock/dapp build --stream
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - packages/dapp/dist

  test-unit-dapp:
    working_directory: *workspace_root
    environment:
      TZ: *timezone
    docker:
      - image: circleci/node:8.10-stretch
    steps:
      - restore_cache:
          key: monorepo-{{ checksum "yarn.lock" }}
      - run:
          name: JS unit tests
          command: npx lerna run --scope @rigoblock/dapp test:unit --stream

  test-feature-dapp:
    working_directory: *workspace_root
    environment:
      TZ: *timezone
    docker:
      - image: circleci/node:8.10-stretch-browsers
    steps:
      - *attach_workspace
      - restore_cache:
          key: monorepo-{{ checksum "yarn.lock" }}
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Starting HTTP server
          command: npx lerna run --scope @rigoblock/dapp start --stream
          background: true
      - run:
          name: Starting ganache cli
          command: npx lerna run --scope @rigoblock/dapp ganache --stream
          background: true
      - run:
          name: Wait for HTTP server and ganache cli
          command: dockerize -wait tcp://localhost:8545 -wait tcp://localhost:8080 -timeout 1m
      - run:
          name: Compiling smart contracts for ganache
          command: npx lerna run --scope @rigoblock/protocol compile --stream
      - run:
          name: Bootstrapping smart contracts to ganache cli
          command: npx lerna run --scope @rigoblock/dapp ganache:bootstrap --stream
      - run:
          name: Seeding ganache cli
          command: npx lerna run --scope @rigoblock/dapp ganache:seed --stream
      - run:
          name: JS feature tests
          command: npx lerna run --scope @rigoblock/dapp test:feature --stream

  deploy-staging:
    working_directory: *workspace_root
    environment:
      TZ: *timezone
    machine: true
    steps:
      - checkout
      - *attach_workspace
      - restore_cache:
          key: monorepo-{{ checksum "yarn.lock" }}
      - run:
          name: Install Flynn CLI
          command: 'L=~/flynn && curl -sSL -A "`uname -sp`" https://dl.flynn.io/cli | zcat >$L && chmod +x $L'
      - run:
          name: Add Flynn cluster
          command: "~/flynn cluster add -p hSeBWhP7I5Q/C0nAXQ5L30fW1B956NurbxbQ/TQSXPI= staging dev-02.endpoint.network c6e549fcc2f7f2145db34a96c7baaab5"
      - run:
          name: Flynn ping
          command: "~/flynn apps"
      - run:
          name: Download flynn cert
          command: "curl https://s3-eu-west-1.amazonaws.com/rigoblock/ca-cert.cer -o ca.crt"
      - run:
          name: Cert folder
          command: "sudo mkdir -p /etc/docker/certs.d/docker.dev-02.endpoint.network/"
      - run:
          name: Move cert
          command: "sudo mv ca.crt /etc/docker/certs.d/docker.dev-02.endpoint.network/"
      - run:
          name: Restart docker
          command: "sudo service docker restart"
      - run:
          name: Flynn set docker
          command: "~/flynn docker set-push-url && ~/flynn docker login"
      - run:
          name: Building docker image
          command: "docker build -t staging --build-arg NPM_KEY={{ .Environment.NPM_KEY }} -f ./packages/dapp/Dockerfile ."
      - run:
          name: Flynn push
          command: "~/flynn -a dapp-staging docker push staging:latest"
      - run:
          name: Flynn push
          command: "~/flynn -a dapp-staging scale app=1"

workflows:
  version: 2
  rigoblock:
    jobs:
      - setup
      - test-unit-dapp:
          requires:
            - setup
      - build-dapp:
          requires:
            - test-unit-dapp
      - test-feature-dapp:
          requires:
            - build-dapp
      - deploy-staging:
          requires:
            - test-unit-dapp
            - build-dapp
            - test-feature-dapp
          filters:
            branches:
              only: master
