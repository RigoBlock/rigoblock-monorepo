{
	"schemaVersion": "2.0.0",
	"contractName": "ProofOfPerformance",
	"compilerOutput": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_stakingProxyAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_rigoblockDao",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_dragoRegistry",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_authorityAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "addressFromId",
				"outputs": [
					{
						"internalType": "address",
						"name": "pool",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "group",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "authorityAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "calcPoolValue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "aum",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "creditPopRewardToStakingProxy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "dragoRegistryAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "getHwm",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "getPoolData",
				"outputs": [
					{
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					},
					{
						"internalType": "address",
						"name": "poolAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "poolGroup",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "poolPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "poolSupply",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "poolValue",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "epochReward",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "ratio",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pop",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "getPoolPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "poolPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalTokens",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "getRewardParameters",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "epochReward",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "epochTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "ratio",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "groupByAddress",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "epochReward",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rewardRatio",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "isActive",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "proofOfPerformance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "popReward",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "performanceReward",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rigoblockDaoAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newAuthorityAddress",
						"type": "address"
					}
				],
				"name": "setAuthority",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "groupAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "ratio",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "inflationFactor",
						"type": "uint256"
					}
				],
				"name": "setGroupParams",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newDragoRegistryAddress",
						"type": "address"
					}
				],
				"name": "setRegistry",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newRigoblockDaoAddress",
						"type": "address"
					}
				],
				"name": "setRigoblockDao",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Gabriele Rigo - <gab@rigoblock.com>",
			"kind": "dev",
			"methods": {
				"addressFromId(uint256)": {
					"details": "Returns the address and the group of a pool from its id.",
					"params": {
						"poolId": "Id of the pool."
					},
					"returns": {
						"group": "Address of the pool's group.",
						"pool": "Address of the target pool."
					}
				},
				"calcPoolValue(uint256)": {
					"details": "Returns the value of a pool from its id.",
					"params": {
						"poolId": "Id of the pool."
					},
					"returns": {
						"aum": "Total value of the pool in ETH."
					}
				},
				"creditPopRewardToStakingProxy(uint256)": {
					"details": "Credits the pop reward to the Staking Proxy contract.",
					"params": {
						"poolId": "Number of the pool Id in registry."
					}
				},
				"getHwm(uint256)": {
					"details": "Returns the highwatermark of a pool.",
					"params": {
						"poolId": "Id of the pool."
					},
					"returns": {
						"_0": "Value of the all-time-high pool nav."
					}
				},
				"getPoolData(uint256)": {
					"details": "Gets data of a pool.",
					"params": {
						"poolId": "Id of the pool."
					},
					"returns": {
						"active": "Bool the pool is active.",
						"epochReward": "value of the reward factor or said pool.",
						"poolAddress": "address of the pool.",
						"poolGroup": "address of the pool factory.",
						"poolPrice": "price of the pool in wei.",
						"poolSupply": "total supply of the pool in units.",
						"poolValue": "total value of the pool in wei.",
						"pop": "value of the pop reward to be claimed in GRGs.",
						"ratio": "of assets/performance reward (from 0 to 10000)."
					}
				},
				"getPoolPrice(uint256)": {
					"details": "Returns the price a pool from its id.",
					"params": {
						"poolId": "Id of the pool."
					},
					"returns": {
						"poolPrice": "Price of the pool in wei.",
						"totalTokens": "Number of tokens of a pool (totalSupply)."
					}
				},
				"getRewardParameters(uint256)": {
					"details": "Returns the split ratio of asset and performance reward.",
					"params": {
						"poolId": "Id of the pool."
					},
					"returns": {
						"epochReward": "Value of the reward factor.",
						"epochTime": "Value of epoch time.",
						"ratio": "Value of the ratio from 1 to 100."
					}
				},
				"isActive(uint256)": {
					"details": "Checks whether a pool is registered and active.",
					"params": {
						"poolId": "Id of the pool."
					},
					"returns": {
						"_0": "Bool the pool is active."
					}
				},
				"proofOfPerformance(uint256)": {
					"details": "Returns the proof of performance reward for a pool.",
					"params": {
						"poolId": "Id of the pool."
					},
					"returns": {
						"performanceReward": "Split of the performance reward in Rigo tokens.",
						"popReward": "Value of the pop reward in Rigo tokens."
					}
				},
				"setAuthority(address)": {
					"details": "Allows rigoblock dao to update the authority.",
					"params": {
						"newAuthorityAddress": "Address of the authority."
					}
				},
				"setGroupParams(address,uint256,uint256)": {
					"details": "Allows RigoBlock Dao to set the parameters for a group.",
					"params": {
						"groupAddress": "Address of the pool's group.",
						"inflationFactor": "Value of the reward factor for a group.",
						"ratio": "Value of the ratio between assets and performance reward for a group."
					}
				},
				"setRegistry(address)": {
					"details": "Allows RigoBlock Dao to update the pools registry.",
					"params": {
						"newDragoRegistryAddress": "Address of new registry."
					}
				},
				"setRigoblockDao(address)": {
					"details": "Allows RigoBlock Dao to update its address.",
					"params": {
						"newRigoblockDaoAddress": "Address of new dao."
					}
				}
			},
			"title": "Proof of Performance - Controls parameters of inflation.",
			"version": 1
		},
		"evm": {
			"bytecode": {
				"generatedSources": [],
				"linkReferences": {},
				"object": "0x60c0604052620f424060a05234801561001757600080fd5b506040516117c33803806117c38339818101604052608081101561003a57600080fd5b508051602082015160408301516060938401519383901b6001600160601b031916608052600180546001600160a01b03199081166001600160a01b0394851617909155600080548216928416929092178255600280549091169483169490941790935560a0519116916116f9906100ca903980610d4e5280610df652508061074552806108de52506116f96000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80637d0107cf116100a25780639af94f30116100715780639af94f30146102e0578063a91ee0dc146102fd578063b516e6e114610323578063c1acd1a714610349578063d21c87ad146103845761010b565b80637d0107cf146102585780637f8be8591461027557806382afd23b1461027d57806383bd6189146102ae5761010b565b80633c695d4e116100de5780633c695d4e146101ee578063427fdc0c146101f65780634d749e43146102135780637a9e5e4b146102305761010b565b806302579677146101105780630298347014610134578063249d912314610173578063360dafa0146101a2575b600080fd5b6101186103f6565b604080516001600160a01b039092168252519081900360200190f35b61015a6004803603602081101561014a57600080fd5b50356001600160a01b0316610405565b6040805192835260208301919091528051918290030190f35b6101906004803603602081101561018957600080fd5b503561041e565b60408051918252519081900360200190f35b6101bf600480360360208110156101b857600080fd5b5035610431565b60405180836001600160a01b03168152602001826001600160a01b031681526020019250505060405180910390f35b610118610446565b6101906004803603602081101561020c57600080fd5b5035610455565b61015a6004803603602081101561022957600080fd5b5035610468565b6102566004803603602081101561024657600080fd5b50356001600160a01b0316610474565b005b6102566004803603602081101561026e57600080fd5b503561049e565b6101186107d9565b61029a6004803603602081101561029357600080fd5b50356107e8565b604080519115158252519081900360200190f35b610256600480360360608110156102c457600080fd5b506001600160a01b0381351690602081013590604001356107f3565b61015a600480360360208110156102f657600080fd5b5035610834565b6102566004803603602081101561031357600080fd5b50356001600160a01b031661084b565b6102566004803603602081101561033957600080fd5b50356001600160a01b0316610875565b6103666004803603602081101561035f57600080fd5b503561089f565b60408051938452602084019290925282820152519081900360600190f35b6103a16004803603602081101561039a57600080fd5b5035610988565b604080519915158a526001600160a01b0398891660208b015296909716888701526060880194909452608087019290925260a086015260c085015260e084015261010083019190915251908190036101200190f35b6000546001600160a01b031681565b6003602052600090815260409020805460019091015482565b6000610429826109e9565b90505b919050565b60008061043d83610a20565b91509150915091565b6002546001600160a01b031681565b600061046082610c17565b949350505050565b60008061043d83610d8a565b61047c610ee0565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040805163309dfc6b60e21b81526004810185905290516001600160a01b039092169163c277f1ac916024808201928692909190829003018186803b1580156104ea57600080fd5b505afa1580156104fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260c081101561052757600080fd5b815160208301805160405192949293830192919084600160201b82111561054d57600080fd5b90830190602082018581111561056257600080fd5b8251600160201b81118282018810171561057b57600080fd5b82525081516020918201929091019080838360005b838110156105a8578181015183820152602001610590565b50505050905090810190601f1680156105d55780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084600160201b8211156105f757600080fd5b90830190602082018581111561060c57600080fd5b8251600160201b81118282018810171561062557600080fd5b82525081516020918201929091019080838360005b8381101561065257818101518382015260200161063a565b50505050905090810190601f16801561067f5780820380516001836020036101000a031916815260200191505b50604052509394505050506001600160a01b038216151590506106a257506107d6565b6000816001600160a01b0316639489fa846040518163ffffffff1660e01b815260040160206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d602081101561070757600080fd5b5051905061071433610f41565b156107225761072282610f47565b61072b83610f8e565b600061073684610d8a565b5090506107438285610fbc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ecc128f284836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156107ba57600080fd5b505af11580156107ce573d6000803e3d6000fd5b505050505050505b50565b6001546001600160a01b031681565b600061042982610fe8565b6107fb610ee0565b82610805816111f9565b61080f83836112c3565b506001600160a01b039092166000908152600360205260409020600181019190915555565b60008061084083610c17565b509094909350915050565b610853610ee0565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b61087d610ee0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000806108ae85610a20565b91505060036000826001600160a01b03166001600160a01b031681526020019081526020016000206000015493507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635e615a6b6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093557600080fd5b505afa158015610949573d6000803e3d6000fd5b505050506040513d60a081101561095f57600080fd5b50516001600160a01b039091166000908152600360205260409020600101549395909450915050565b600080600080600080600080600061099f8a610fe8565b98506109aa8a610a20565b90985096506109b88a610c17565b919750955093506109c88a61089f565b9194509092506109d990508a610d8a565b5090509193959799909294969850565b600081815260046020526040812054610a0b5750670de0b6b3a764000061042c565b5060008181526004602052604090205461042c565b600080546040805163309dfc6b60e21b815260048101859052905183926001600160a01b03169163c277f1ac9160248083019286929190829003018186803b158015610a6b57600080fd5b505afa158015610a7f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260c0811015610aa857600080fd5b815160208301805160405192949293830192919084600160201b821115610ace57600080fd5b908301906020820185811115610ae357600080fd5b8251600160201b811182820188101715610afc57600080fd5b82525081516020918201929091019080838360005b83811015610b29578181015183820152602001610b11565b50505050905090810190601f168015610b565780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084600160201b821115610b7857600080fd5b908301906020820185811115610b8d57600080fd5b8251600160201b811182820188101715610ba657600080fd5b82525081516020918201929091019080838360005b83811015610bd3578181015183820152602001610bbb565b50505050905090810190601f168015610c005780820380516001836020036101000a031916815260200191505b506040526060015194965093945050505050915091565b600080600080610c2685610a20565b5090506000819050806001600160a01b0316639489fa846040518163ffffffff1660e01b815260040160206040518083038186803b158015610c6757600080fd5b505afa158015610c7b573d6000803e3d6000fd5b505050506040513d6020811015610c9157600080fd5b5051604080516318160ddd60e01b815290519196506001600160a01b038316916318160ddd91600480820192602092909190829003018186803b158015610cd757600080fd5b505afa158015610ceb573d6000803e3d6000fd5b505050506040513d6020811015610d0157600080fd5b50519350841580610d10575083155b15610d4c5760405162461bcd60e51b81526004018080602001828103825260258152602001806116786025913960400191505060405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000610d77868661137d565b81610d7e57fe5b04925050509193909250565b6000806000806000610d9b86610c17565b9250925092506000610dac87610a20565b5090506000806000610dbd8a61089f565b92509250925060006201518083610dd4888761137d565b0281610ddc57fe5b0490506000610dea8c6109e9565b891115610e4057610e377f0000000000000000000000000000000000000000000000000000000000000000610e29610e218f6109e9565b8c038b61137d565b81610e3057fe5b048661137d565b61016d02610e43565b60005b90506000610e5187896113a6565b90506000670de0b6b3a76400008269021e19e0c9bab2400000610e7f87610e7a6127108b611564565b61137d565b81610e8657fe5b040281610e8f57fe5b049050670de0b6b3a764000082610eb9610ea9868961137d565b69021e19e0c9bab2400000611576565b0281610ec157fe5b049b50610ece8c826115a5565b9c505050505050505050505050915091565b6001546001600160a01b03163314610f3f576040805162461bcd60e51b815260206004820152601e60248201527f43414c4c45525f4e4f545f5249474f424c4f434b5f44414f5f4552524f520000604482015290519081900360640190fd5b565b3b151590565b336001600160a01b038216146107d65760405162461bcd60e51b815260040180806020018281038252602781526020018061169d6027913960400191505060405180910390fd5b6000818152600460205260409020546107d6576000908152600460205260409020670de0b6b3a76400009055565b600081815260046020526040902054821115610fe45760008181526004602052604090208290555b5050565b600080546040805163309dfc6b60e21b815260048101859052905183926001600160a01b03169163c277f1ac9160248083019286929190829003018186803b15801561103357600080fd5b505afa158015611047573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260c081101561107057600080fd5b815160208301805160405192949293830192919084600160201b82111561109657600080fd5b9083019060208201858111156110ab57600080fd5b8251600160201b8111828201881017156110c457600080fd5b82525081516020918201929091019080838360005b838110156110f15781810151838201526020016110d9565b50505050905090810190601f16801561111e5780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084600160201b82111561114057600080fd5b90830190602082018581111561115557600080fd5b8251600160201b81118282018810171561116e57600080fd5b82525081516020918201929091019080838360005b8381101561119b578181015183820152602001611183565b50505050905090810190601f1680156111c85780820380516001836020036101000a031916815260200191505b506040525093945050506001600160a01b0383161591506111ef905057600191505061042c565b600091505061042c565b600254604080516306e5bd1f60e51b81526001600160a01b0384811660048301529151919092169163dcb7a3e0916024808301926020929190829003018186803b15801561124657600080fd5b505afa15801561125a573d6000803e3d6000fd5b505050506040513d602081101561127057600080fd5b50516107d6576040805162461bcd60e51b815260206004820152601c60248201527f4e4f545f415050524f5645445f415554484f524954595f4552524f5200000000604482015290519081900360640190fd5b612710821115611310576040805162461bcd60e51b81526020600482015260136024820152722a27a7afa124a3afa920aa24a7afa2a92927a960691b604482015290519081900360640190fd5b64e8d4a5100081108061132b5750683635c9adc5dea0000081115b15610fe4576040805162461bcd60e51b815260206004820152601e60248201527f494e56414c49445f494e464c4154494f4e5f464143544f525f4552524f520000604482015290519081900360640190fd5b600082820283158061139757508284828161139457fe5b04145b61139d57fe5b90505b92915050565b60006001600160a01b038316316113bd81846115bf565b8261032002816103e802106113dd57670de0b6b3a76400009150506113a0565b8261025802816103e802106113fd57670d163580f73180009150506113a0565b826101f402816103e8021061141d57670c39f0d50f1e80009150506113a0565b8261019002816103e8021061143d57670aac096cf84680009150506113a0565b8261012c02816103e8021061145d5767085013538c7580009150506113a0565b8260c802816103e8021061147c57670590a3601aee80009150506113a0565b82606402816103e8021061149b57670334ad46af1d80009150506113a0565b82604b02816103e802106114ba576702bf6ff3718700009150506113a0565b82603202816103e802106114d957670254db1c224400009150506113a0565b82602602816103e802106114f857670226abadc42f80009150506113a0565b82601902816103e80210611517576701f87c3f661b00009150506113a0565b6040805162461bcd60e51b815260206004820152601f60248201527f4554485f42454c4f575f322e355f50455243454e545f41554d5f4552524f5200604482015290519081900360640190fd5b60008282111561157057fe5b50900390565b600080821161158157fe5b600082848161158c57fe5b04905082848161159857fe5b0681840201841461139d57fe5b600082820183811080159061139757508281101561139d57fe5b8082111561160a576040805162461bcd60e51b815260206004820152601360248201527222aa242fa0a127ab22afa0aaa6afa2a92927a960691b604482015290519081900360640190fd5b66038d7ea4c680008210806116255750662386f26fc1000081105b15610fe4576040805162461bcd60e51b815260206004820152601a60248201527f504f4f4c5f4f525f42414c414e43455f445553545f4552524f52000000000000604482015290519081900360640190fdfe504f4f4c5f50524943455f4f525f544f54414c5f535550504c595f4e554c4c5f4552524f52534d4152545f434f4e54524143545f43414c4c45525f49535f4e4f545f504f4f4c5f4552524f52a2646970667358221220e66fb61e762fb23c9ef4d35e34c9601d5e8a32076e415b98f1d390ecc9c6139364736f6c63430007040033",
				"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH3 0xF4240 PUSH1 0xA0 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x17C3 CODESIZE SUB DUP1 PUSH2 0x17C3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP4 DUP5 ADD MLOAD SWAP4 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD DUP3 AND SWAP3 DUP5 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND SWAP5 DUP4 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xA0 MLOAD SWAP2 AND SWAP2 PUSH2 0x16F9 SWAP1 PUSH2 0xCA SWAP1 CODECOPY DUP1 PUSH2 0xD4E MSTORE DUP1 PUSH2 0xDF6 MSTORE POP DUP1 PUSH2 0x745 MSTORE DUP1 PUSH2 0x8DE MSTORE POP PUSH2 0x16F9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D0107CF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x9AF94F30 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9AF94F30 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xA91EE0DC EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xB516E6E1 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xC1ACD1A7 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xD21C87AD EQ PUSH2 0x384 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x7D0107CF EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x7F8BE859 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x83BD6189 EQ PUSH2 0x2AE JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x3C695D4E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x3C695D4E EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x427FDC0C EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x4D749E43 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x230 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x2579677 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x2983470 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x249D9123 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x360DAFA0 EQ PUSH2 0x1A2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x446 JUMP JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x455 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x474 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x49E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x834 JUMP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84B JUMP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x875 JUMP JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x89F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 ISZERO ISZERO DUP11 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND PUSH1 0x20 DUP12 ADD MSTORE SWAP7 SWAP1 SWAP8 AND DUP9 DUP8 ADD MSTORE PUSH1 0x60 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x120 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x429 DUP3 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x43D DUP4 PUSH2 0xA20 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x460 DUP3 PUSH2 0xC17 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x43D DUP4 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0x47C PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x309DFC6B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xC277F1AC SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 DUP7 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5A8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x590 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5D5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x652 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x63A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x67F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP SWAP4 SWAP5 POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO SWAP1 POP PUSH2 0x6A2 JUMPI POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9489FA84 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x714 CALLER PUSH2 0xF41 JUMP JUMPDEST ISZERO PUSH2 0x722 JUMPI PUSH2 0x722 DUP3 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x72B DUP4 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP5 PUSH2 0xD8A JUMP JUMPDEST POP SWAP1 POP PUSH2 0x743 DUP3 DUP6 PUSH2 0xFBC JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xECC128F2 DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x429 DUP3 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x7FB PUSH2 0xEE0 JUMP JUMPDEST DUP3 PUSH2 0x805 DUP2 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x80F DUP4 DUP4 PUSH2 0x12C3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x840 DUP4 PUSH2 0xC17 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH2 0x853 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x87D PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x8AE DUP6 PUSH2 0xA20 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x3 PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP4 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5E615A6B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x935 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x949 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x95F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP4 SWAP6 SWAP1 SWAP5 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x99F DUP11 PUSH2 0xFE8 JUMP JUMPDEST SWAP9 POP PUSH2 0x9AA DUP11 PUSH2 0xA20 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH2 0x9B8 DUP11 PUSH2 0xC17 JUMP JUMPDEST SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP PUSH2 0x9C8 DUP11 PUSH2 0x89F JUMP JUMPDEST SWAP2 SWAP5 POP SWAP1 SWAP3 POP PUSH2 0x9D9 SWAP1 POP DUP11 PUSH2 0xD8A JUMP JUMPDEST POP SWAP1 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP10 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xA0B JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x42C JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x309DFC6B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xC277F1AC SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0xACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0xAFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB29 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB11 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xB56 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0xB78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0xB8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBD3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBBB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC00 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x60 ADD MLOAD SWAP5 SWAP7 POP SWAP4 SWAP5 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xC26 DUP6 PUSH2 0xA20 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9489FA84 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP DUP5 ISZERO DUP1 PUSH2 0xD10 JUMPI POP DUP4 ISZERO JUMPDEST ISZERO PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1678 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH2 0xD77 DUP7 DUP7 PUSH2 0x137D JUMP JUMPDEST DUP2 PUSH2 0xD7E JUMPI INVALID JUMPDEST DIV SWAP3 POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xD9B DUP7 PUSH2 0xC17 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0xDAC DUP8 PUSH2 0xA20 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xDBD DUP11 PUSH2 0x89F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH3 0x15180 DUP4 PUSH2 0xDD4 DUP9 DUP8 PUSH2 0x137D JUMP JUMPDEST MUL DUP2 PUSH2 0xDDC JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0xDEA DUP13 PUSH2 0x9E9 JUMP JUMPDEST DUP10 GT ISZERO PUSH2 0xE40 JUMPI PUSH2 0xE37 PUSH32 0x0 PUSH2 0xE29 PUSH2 0xE21 DUP16 PUSH2 0x9E9 JUMP JUMPDEST DUP13 SUB DUP12 PUSH2 0x137D JUMP JUMPDEST DUP2 PUSH2 0xE30 JUMPI INVALID JUMPDEST DIV DUP7 PUSH2 0x137D JUMP JUMPDEST PUSH2 0x16D MUL PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE51 DUP8 DUP10 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH10 0x21E19E0C9BAB2400000 PUSH2 0xE7F DUP8 PUSH2 0xE7A PUSH2 0x2710 DUP12 PUSH2 0x1564 JUMP JUMPDEST PUSH2 0x137D JUMP JUMPDEST DUP2 PUSH2 0xE86 JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0xE8F JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xEB9 PUSH2 0xEA9 DUP7 DUP10 PUSH2 0x137D JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x1576 JUMP JUMPDEST MUL DUP2 PUSH2 0xEC1 JUMPI INVALID JUMPDEST DIV SWAP12 POP PUSH2 0xECE DUP13 DUP3 PUSH2 0x15A5 JUMP JUMPDEST SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF3F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43414C4C45525F4E4F545F5249474F424C4F434B5F44414F5F4552524F520000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x169D PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7D6 JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH8 0xDE0B6B3A7640000 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xFE4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x309DFC6B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xC277F1AC SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1033 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1047 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x1070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x1096 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x10AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x10C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10F1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10D9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x111E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x1140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x116E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x119B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1183 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11C8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP SWAP4 SWAP5 POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO SWAP2 POP PUSH2 0x11EF SWAP1 POP JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x42C JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x42C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6E5BD1F PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xDCB7A3E0 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x125A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x7D6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F415050524F5645445F415554484F524954595F4552524F5200000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP3 GT ISZERO PUSH2 0x1310 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A27A7AFA124A3AFA920AA24A7AFA2A92927A9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH5 0xE8D4A51000 DUP2 LT DUP1 PUSH2 0x132B JUMPI POP PUSH9 0x3635C9ADC5DEA00000 DUP2 GT JUMPDEST ISZERO PUSH2 0xFE4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F494E464C4154494F4E5F464143544F525F4552524F520000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x1397 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1394 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x139D JUMPI INVALID JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND BALANCE PUSH2 0x13BD DUP2 DUP5 PUSH2 0x15BF JUMP JUMPDEST DUP3 PUSH2 0x320 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x13DD JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH2 0x258 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x13FD JUMPI PUSH8 0xD163580F7318000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH2 0x1F4 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x141D JUMPI PUSH8 0xC39F0D50F1E8000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH2 0x190 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x143D JUMPI PUSH8 0xAAC096CF8468000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH2 0x12C MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x145D JUMPI PUSH8 0x85013538C758000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH1 0xC8 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x147C JUMPI PUSH8 0x590A3601AEE8000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH1 0x64 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x149B JUMPI PUSH8 0x334AD46AF1D8000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH1 0x4B MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x14BA JUMPI PUSH8 0x2BF6FF371870000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH1 0x32 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x14D9 JUMPI PUSH8 0x254DB1C22440000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH1 0x26 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x14F8 JUMPI PUSH8 0x226ABADC42F8000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH1 0x19 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x1517 JUMPI PUSH8 0x1F87C3F661B0000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4554485F42454C4F575F322E355F50455243454E545F41554D5F4552524F5200 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1570 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1581 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x158C JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP3 DUP5 DUP2 PUSH2 0x1598 JUMPI INVALID JUMPDEST MOD DUP2 DUP5 MUL ADD DUP5 EQ PUSH2 0x139D JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT DUP1 ISZERO SWAP1 PUSH2 0x1397 JUMPI POP DUP3 DUP2 LT ISZERO PUSH2 0x139D JUMPI INVALID JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x160A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x22AA242FA0A127AB22AFA0AAA6AFA2A92927A9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH7 0x38D7EA4C68000 DUP3 LT DUP1 PUSH2 0x1625 JUMPI POP PUSH7 0x2386F26FC10000 DUP2 LT JUMPDEST ISZERO PUSH2 0xFE4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x504F4F4C5F4F525F42414C414E43455F445553545F4552524F52000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID POP 0x4F 0x4F 0x4C 0x5F POP MSTORE 0x49 NUMBER GASLIMIT 0x5F 0x4F MSTORE 0x5F SLOAD 0x4F SLOAD COINBASE 0x4C 0x5F MSTORE8 SSTORE POP POP 0x4C MSIZE 0x5F 0x4E SSTORE 0x4C 0x4C 0x5F GASLIMIT MSTORE MSTORE 0x4F MSTORE MSTORE8 0x4D COINBASE MSTORE SLOAD 0x5F NUMBER 0x4F 0x4E SLOAD MSTORE COINBASE NUMBER SLOAD 0x5F NUMBER COINBASE 0x4C 0x4C GASLIMIT MSTORE 0x5F 0x49 MSTORE8 0x5F 0x4E 0x4F SLOAD 0x5F POP 0x4F 0x4F 0x4C 0x5F GASLIMIT MSTORE MSTORE 0x4F MSTORE LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 PUSH16 0xB61E762FB23C9EF4D35E34C9601D5E8A ORIGIN SMOD PUSH15 0x415B98F1D390ECC9C6139364736F6C PUSH4 0x43000704 STOP CALLER ",
				"sourceMap": "1274:18598:4:-:0;;;1589:3;1551:41;;1999:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1999:353:4;;;;;;;;;;;;;;;2163:44;;;;-1:-1:-1;;;;;;2163:44:4;1999:353;2163:44;2217:19;:35;;-1:-1:-1;;;;;;2217:35:4;;;-1:-1:-1;;;;;2217:35:4;;;;;;;-1:-1:-1;2262:37:4;;;;;;;;;;;;;2309:16;:36;;;;;;;;;;;;;;;1274:18598;;;;;;;;;;;;;;"
			},
			"deployedBytecode": {
				"generatedSources": [],
				"immutableReferences": {
					"661": [
						{
							"length": 32,
							"start": 1861
						},
						{
							"length": 32,
							"start": 2270
						}
					],
					"664": [
						{
							"length": 32,
							"start": 3406
						},
						{
							"length": 32,
							"start": 3574
						}
					]
				},
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80637d0107cf116100a25780639af94f30116100715780639af94f30146102e0578063a91ee0dc146102fd578063b516e6e114610323578063c1acd1a714610349578063d21c87ad146103845761010b565b80637d0107cf146102585780637f8be8591461027557806382afd23b1461027d57806383bd6189146102ae5761010b565b80633c695d4e116100de5780633c695d4e146101ee578063427fdc0c146101f65780634d749e43146102135780637a9e5e4b146102305761010b565b806302579677146101105780630298347014610134578063249d912314610173578063360dafa0146101a2575b600080fd5b6101186103f6565b604080516001600160a01b039092168252519081900360200190f35b61015a6004803603602081101561014a57600080fd5b50356001600160a01b0316610405565b6040805192835260208301919091528051918290030190f35b6101906004803603602081101561018957600080fd5b503561041e565b60408051918252519081900360200190f35b6101bf600480360360208110156101b857600080fd5b5035610431565b60405180836001600160a01b03168152602001826001600160a01b031681526020019250505060405180910390f35b610118610446565b6101906004803603602081101561020c57600080fd5b5035610455565b61015a6004803603602081101561022957600080fd5b5035610468565b6102566004803603602081101561024657600080fd5b50356001600160a01b0316610474565b005b6102566004803603602081101561026e57600080fd5b503561049e565b6101186107d9565b61029a6004803603602081101561029357600080fd5b50356107e8565b604080519115158252519081900360200190f35b610256600480360360608110156102c457600080fd5b506001600160a01b0381351690602081013590604001356107f3565b61015a600480360360208110156102f657600080fd5b5035610834565b6102566004803603602081101561031357600080fd5b50356001600160a01b031661084b565b6102566004803603602081101561033957600080fd5b50356001600160a01b0316610875565b6103666004803603602081101561035f57600080fd5b503561089f565b60408051938452602084019290925282820152519081900360600190f35b6103a16004803603602081101561039a57600080fd5b5035610988565b604080519915158a526001600160a01b0398891660208b015296909716888701526060880194909452608087019290925260a086015260c085015260e084015261010083019190915251908190036101200190f35b6000546001600160a01b031681565b6003602052600090815260409020805460019091015482565b6000610429826109e9565b90505b919050565b60008061043d83610a20565b91509150915091565b6002546001600160a01b031681565b600061046082610c17565b949350505050565b60008061043d83610d8a565b61047c610ee0565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040805163309dfc6b60e21b81526004810185905290516001600160a01b039092169163c277f1ac916024808201928692909190829003018186803b1580156104ea57600080fd5b505afa1580156104fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260c081101561052757600080fd5b815160208301805160405192949293830192919084600160201b82111561054d57600080fd5b90830190602082018581111561056257600080fd5b8251600160201b81118282018810171561057b57600080fd5b82525081516020918201929091019080838360005b838110156105a8578181015183820152602001610590565b50505050905090810190601f1680156105d55780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084600160201b8211156105f757600080fd5b90830190602082018581111561060c57600080fd5b8251600160201b81118282018810171561062557600080fd5b82525081516020918201929091019080838360005b8381101561065257818101518382015260200161063a565b50505050905090810190601f16801561067f5780820380516001836020036101000a031916815260200191505b50604052509394505050506001600160a01b038216151590506106a257506107d6565b6000816001600160a01b0316639489fa846040518163ffffffff1660e01b815260040160206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d602081101561070757600080fd5b5051905061071433610f41565b156107225761072282610f47565b61072b83610f8e565b600061073684610d8a565b5090506107438285610fbc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ecc128f284836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156107ba57600080fd5b505af11580156107ce573d6000803e3d6000fd5b505050505050505b50565b6001546001600160a01b031681565b600061042982610fe8565b6107fb610ee0565b82610805816111f9565b61080f83836112c3565b506001600160a01b039092166000908152600360205260409020600181019190915555565b60008061084083610c17565b509094909350915050565b610853610ee0565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b61087d610ee0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000806108ae85610a20565b91505060036000826001600160a01b03166001600160a01b031681526020019081526020016000206000015493507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635e615a6b6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093557600080fd5b505afa158015610949573d6000803e3d6000fd5b505050506040513d60a081101561095f57600080fd5b50516001600160a01b039091166000908152600360205260409020600101549395909450915050565b600080600080600080600080600061099f8a610fe8565b98506109aa8a610a20565b90985096506109b88a610c17565b919750955093506109c88a61089f565b9194509092506109d990508a610d8a565b5090509193959799909294969850565b600081815260046020526040812054610a0b5750670de0b6b3a764000061042c565b5060008181526004602052604090205461042c565b600080546040805163309dfc6b60e21b815260048101859052905183926001600160a01b03169163c277f1ac9160248083019286929190829003018186803b158015610a6b57600080fd5b505afa158015610a7f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260c0811015610aa857600080fd5b815160208301805160405192949293830192919084600160201b821115610ace57600080fd5b908301906020820185811115610ae357600080fd5b8251600160201b811182820188101715610afc57600080fd5b82525081516020918201929091019080838360005b83811015610b29578181015183820152602001610b11565b50505050905090810190601f168015610b565780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084600160201b821115610b7857600080fd5b908301906020820185811115610b8d57600080fd5b8251600160201b811182820188101715610ba657600080fd5b82525081516020918201929091019080838360005b83811015610bd3578181015183820152602001610bbb565b50505050905090810190601f168015610c005780820380516001836020036101000a031916815260200191505b506040526060015194965093945050505050915091565b600080600080610c2685610a20565b5090506000819050806001600160a01b0316639489fa846040518163ffffffff1660e01b815260040160206040518083038186803b158015610c6757600080fd5b505afa158015610c7b573d6000803e3d6000fd5b505050506040513d6020811015610c9157600080fd5b5051604080516318160ddd60e01b815290519196506001600160a01b038316916318160ddd91600480820192602092909190829003018186803b158015610cd757600080fd5b505afa158015610ceb573d6000803e3d6000fd5b505050506040513d6020811015610d0157600080fd5b50519350841580610d10575083155b15610d4c5760405162461bcd60e51b81526004018080602001828103825260258152602001806116786025913960400191505060405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000610d77868661137d565b81610d7e57fe5b04925050509193909250565b6000806000806000610d9b86610c17565b9250925092506000610dac87610a20565b5090506000806000610dbd8a61089f565b92509250925060006201518083610dd4888761137d565b0281610ddc57fe5b0490506000610dea8c6109e9565b891115610e4057610e377f0000000000000000000000000000000000000000000000000000000000000000610e29610e218f6109e9565b8c038b61137d565b81610e3057fe5b048661137d565b61016d02610e43565b60005b90506000610e5187896113a6565b90506000670de0b6b3a76400008269021e19e0c9bab2400000610e7f87610e7a6127108b611564565b61137d565b81610e8657fe5b040281610e8f57fe5b049050670de0b6b3a764000082610eb9610ea9868961137d565b69021e19e0c9bab2400000611576565b0281610ec157fe5b049b50610ece8c826115a5565b9c505050505050505050505050915091565b6001546001600160a01b03163314610f3f576040805162461bcd60e51b815260206004820152601e60248201527f43414c4c45525f4e4f545f5249474f424c4f434b5f44414f5f4552524f520000604482015290519081900360640190fd5b565b3b151590565b336001600160a01b038216146107d65760405162461bcd60e51b815260040180806020018281038252602781526020018061169d6027913960400191505060405180910390fd5b6000818152600460205260409020546107d6576000908152600460205260409020670de0b6b3a76400009055565b600081815260046020526040902054821115610fe45760008181526004602052604090208290555b5050565b600080546040805163309dfc6b60e21b815260048101859052905183926001600160a01b03169163c277f1ac9160248083019286929190829003018186803b15801561103357600080fd5b505afa158015611047573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260c081101561107057600080fd5b815160208301805160405192949293830192919084600160201b82111561109657600080fd5b9083019060208201858111156110ab57600080fd5b8251600160201b8111828201881017156110c457600080fd5b82525081516020918201929091019080838360005b838110156110f15781810151838201526020016110d9565b50505050905090810190601f16801561111e5780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084600160201b82111561114057600080fd5b90830190602082018581111561115557600080fd5b8251600160201b81118282018810171561116e57600080fd5b82525081516020918201929091019080838360005b8381101561119b578181015183820152602001611183565b50505050905090810190601f1680156111c85780820380516001836020036101000a031916815260200191505b506040525093945050506001600160a01b0383161591506111ef905057600191505061042c565b600091505061042c565b600254604080516306e5bd1f60e51b81526001600160a01b0384811660048301529151919092169163dcb7a3e0916024808301926020929190829003018186803b15801561124657600080fd5b505afa15801561125a573d6000803e3d6000fd5b505050506040513d602081101561127057600080fd5b50516107d6576040805162461bcd60e51b815260206004820152601c60248201527f4e4f545f415050524f5645445f415554484f524954595f4552524f5200000000604482015290519081900360640190fd5b612710821115611310576040805162461bcd60e51b81526020600482015260136024820152722a27a7afa124a3afa920aa24a7afa2a92927a960691b604482015290519081900360640190fd5b64e8d4a5100081108061132b5750683635c9adc5dea0000081115b15610fe4576040805162461bcd60e51b815260206004820152601e60248201527f494e56414c49445f494e464c4154494f4e5f464143544f525f4552524f520000604482015290519081900360640190fd5b600082820283158061139757508284828161139457fe5b04145b61139d57fe5b90505b92915050565b60006001600160a01b038316316113bd81846115bf565b8261032002816103e802106113dd57670de0b6b3a76400009150506113a0565b8261025802816103e802106113fd57670d163580f73180009150506113a0565b826101f402816103e8021061141d57670c39f0d50f1e80009150506113a0565b8261019002816103e8021061143d57670aac096cf84680009150506113a0565b8261012c02816103e8021061145d5767085013538c7580009150506113a0565b8260c802816103e8021061147c57670590a3601aee80009150506113a0565b82606402816103e8021061149b57670334ad46af1d80009150506113a0565b82604b02816103e802106114ba576702bf6ff3718700009150506113a0565b82603202816103e802106114d957670254db1c224400009150506113a0565b82602602816103e802106114f857670226abadc42f80009150506113a0565b82601902816103e80210611517576701f87c3f661b00009150506113a0565b6040805162461bcd60e51b815260206004820152601f60248201527f4554485f42454c4f575f322e355f50455243454e545f41554d5f4552524f5200604482015290519081900360640190fd5b60008282111561157057fe5b50900390565b600080821161158157fe5b600082848161158c57fe5b04905082848161159857fe5b0681840201841461139d57fe5b600082820183811080159061139757508281101561139d57fe5b8082111561160a576040805162461bcd60e51b815260206004820152601360248201527222aa242fa0a127ab22afa0aaa6afa2a92927a960691b604482015290519081900360640190fd5b66038d7ea4c680008210806116255750662386f26fc1000081105b15610fe4576040805162461bcd60e51b815260206004820152601a60248201527f504f4f4c5f4f525f42414c414e43455f445553545f4552524f52000000000000604482015290519081900360640190fdfe504f4f4c5f50524943455f4f525f544f54414c5f535550504c595f4e554c4c5f4552524f52534d4152545f434f4e54524143545f43414c4c45525f49535f4e4f545f504f4f4c5f4552524f52a2646970667358221220e66fb61e762fb23c9ef4d35e34c9601d5e8a32076e415b98f1d390ecc9c6139364736f6c63430007040033",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D0107CF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x9AF94F30 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9AF94F30 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xA91EE0DC EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xB516E6E1 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xC1ACD1A7 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xD21C87AD EQ PUSH2 0x384 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x7D0107CF EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x7F8BE859 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x83BD6189 EQ PUSH2 0x2AE JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x3C695D4E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x3C695D4E EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x427FDC0C EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x4D749E43 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x230 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x2579677 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x2983470 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x249D9123 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x360DAFA0 EQ PUSH2 0x1A2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x446 JUMP JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x455 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x474 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x49E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x834 JUMP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84B JUMP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x875 JUMP JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x89F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 ISZERO ISZERO DUP11 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND PUSH1 0x20 DUP12 ADD MSTORE SWAP7 SWAP1 SWAP8 AND DUP9 DUP8 ADD MSTORE PUSH1 0x60 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x120 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x429 DUP3 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x43D DUP4 PUSH2 0xA20 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x460 DUP3 PUSH2 0xC17 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x43D DUP4 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0x47C PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x309DFC6B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xC277F1AC SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 DUP7 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5A8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x590 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5D5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x652 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x63A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x67F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP SWAP4 SWAP5 POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO SWAP1 POP PUSH2 0x6A2 JUMPI POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9489FA84 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x714 CALLER PUSH2 0xF41 JUMP JUMPDEST ISZERO PUSH2 0x722 JUMPI PUSH2 0x722 DUP3 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x72B DUP4 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP5 PUSH2 0xD8A JUMP JUMPDEST POP SWAP1 POP PUSH2 0x743 DUP3 DUP6 PUSH2 0xFBC JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xECC128F2 DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x429 DUP3 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x7FB PUSH2 0xEE0 JUMP JUMPDEST DUP3 PUSH2 0x805 DUP2 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x80F DUP4 DUP4 PUSH2 0x12C3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x840 DUP4 PUSH2 0xC17 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH2 0x853 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x87D PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x8AE DUP6 PUSH2 0xA20 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x3 PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP4 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5E615A6B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x935 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x949 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x95F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP4 SWAP6 SWAP1 SWAP5 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x99F DUP11 PUSH2 0xFE8 JUMP JUMPDEST SWAP9 POP PUSH2 0x9AA DUP11 PUSH2 0xA20 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH2 0x9B8 DUP11 PUSH2 0xC17 JUMP JUMPDEST SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP PUSH2 0x9C8 DUP11 PUSH2 0x89F JUMP JUMPDEST SWAP2 SWAP5 POP SWAP1 SWAP3 POP PUSH2 0x9D9 SWAP1 POP DUP11 PUSH2 0xD8A JUMP JUMPDEST POP SWAP1 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP10 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xA0B JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x42C JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x309DFC6B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xC277F1AC SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0xACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0xAFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB29 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB11 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xB56 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0xB78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0xB8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBD3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBBB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC00 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x60 ADD MLOAD SWAP5 SWAP7 POP SWAP4 SWAP5 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xC26 DUP6 PUSH2 0xA20 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9489FA84 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP DUP5 ISZERO DUP1 PUSH2 0xD10 JUMPI POP DUP4 ISZERO JUMPDEST ISZERO PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1678 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH2 0xD77 DUP7 DUP7 PUSH2 0x137D JUMP JUMPDEST DUP2 PUSH2 0xD7E JUMPI INVALID JUMPDEST DIV SWAP3 POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xD9B DUP7 PUSH2 0xC17 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0xDAC DUP8 PUSH2 0xA20 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xDBD DUP11 PUSH2 0x89F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH3 0x15180 DUP4 PUSH2 0xDD4 DUP9 DUP8 PUSH2 0x137D JUMP JUMPDEST MUL DUP2 PUSH2 0xDDC JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0xDEA DUP13 PUSH2 0x9E9 JUMP JUMPDEST DUP10 GT ISZERO PUSH2 0xE40 JUMPI PUSH2 0xE37 PUSH32 0x0 PUSH2 0xE29 PUSH2 0xE21 DUP16 PUSH2 0x9E9 JUMP JUMPDEST DUP13 SUB DUP12 PUSH2 0x137D JUMP JUMPDEST DUP2 PUSH2 0xE30 JUMPI INVALID JUMPDEST DIV DUP7 PUSH2 0x137D JUMP JUMPDEST PUSH2 0x16D MUL PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE51 DUP8 DUP10 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH10 0x21E19E0C9BAB2400000 PUSH2 0xE7F DUP8 PUSH2 0xE7A PUSH2 0x2710 DUP12 PUSH2 0x1564 JUMP JUMPDEST PUSH2 0x137D JUMP JUMPDEST DUP2 PUSH2 0xE86 JUMPI INVALID JUMPDEST DIV MUL DUP2 PUSH2 0xE8F JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xEB9 PUSH2 0xEA9 DUP7 DUP10 PUSH2 0x137D JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x1576 JUMP JUMPDEST MUL DUP2 PUSH2 0xEC1 JUMPI INVALID JUMPDEST DIV SWAP12 POP PUSH2 0xECE DUP13 DUP3 PUSH2 0x15A5 JUMP JUMPDEST SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF3F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43414C4C45525F4E4F545F5249474F424C4F434B5F44414F5F4552524F520000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x169D PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7D6 JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH8 0xDE0B6B3A7640000 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xFE4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x309DFC6B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xC277F1AC SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1033 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1047 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x1070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x1096 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x10AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x10C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10F1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10D9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x111E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x1140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x116E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x119B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1183 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11C8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP SWAP4 SWAP5 POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO SWAP2 POP PUSH2 0x11EF SWAP1 POP JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x42C JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x42C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6E5BD1F PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xDCB7A3E0 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x125A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x7D6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F415050524F5645445F415554484F524954595F4552524F5200000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP3 GT ISZERO PUSH2 0x1310 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A27A7AFA124A3AFA920AA24A7AFA2A92927A9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH5 0xE8D4A51000 DUP2 LT DUP1 PUSH2 0x132B JUMPI POP PUSH9 0x3635C9ADC5DEA00000 DUP2 GT JUMPDEST ISZERO PUSH2 0xFE4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F494E464C4154494F4E5F464143544F525F4552524F520000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x1397 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1394 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x139D JUMPI INVALID JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND BALANCE PUSH2 0x13BD DUP2 DUP5 PUSH2 0x15BF JUMP JUMPDEST DUP3 PUSH2 0x320 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x13DD JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH2 0x258 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x13FD JUMPI PUSH8 0xD163580F7318000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH2 0x1F4 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x141D JUMPI PUSH8 0xC39F0D50F1E8000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH2 0x190 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x143D JUMPI PUSH8 0xAAC096CF8468000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH2 0x12C MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x145D JUMPI PUSH8 0x85013538C758000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH1 0xC8 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x147C JUMPI PUSH8 0x590A3601AEE8000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH1 0x64 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x149B JUMPI PUSH8 0x334AD46AF1D8000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH1 0x4B MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x14BA JUMPI PUSH8 0x2BF6FF371870000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH1 0x32 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x14D9 JUMPI PUSH8 0x254DB1C22440000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH1 0x26 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x14F8 JUMPI PUSH8 0x226ABADC42F8000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST DUP3 PUSH1 0x19 MUL DUP2 PUSH2 0x3E8 MUL LT PUSH2 0x1517 JUMPI PUSH8 0x1F87C3F661B0000 SWAP2 POP POP PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4554485F42454C4F575F322E355F50455243454E545F41554D5F4552524F5200 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1570 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1581 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x158C JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP3 DUP5 DUP2 PUSH2 0x1598 JUMPI INVALID JUMPDEST MOD DUP2 DUP5 MUL ADD DUP5 EQ PUSH2 0x139D JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT DUP1 ISZERO SWAP1 PUSH2 0x1397 JUMPI POP DUP3 DUP2 LT ISZERO PUSH2 0x139D JUMPI INVALID JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x160A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x22AA242FA0A127AB22AFA0AAA6AFA2A92927A9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH7 0x38D7EA4C68000 DUP3 LT DUP1 PUSH2 0x1625 JUMPI POP PUSH7 0x2386F26FC10000 DUP2 LT JUMPDEST ISZERO PUSH2 0xFE4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x504F4F4C5F4F525F42414C414E43455F445553545F4552524F52000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID POP 0x4F 0x4F 0x4C 0x5F POP MSTORE 0x49 NUMBER GASLIMIT 0x5F 0x4F MSTORE 0x5F SLOAD 0x4F SLOAD COINBASE 0x4C 0x5F MSTORE8 SSTORE POP POP 0x4C MSIZE 0x5F 0x4E SSTORE 0x4C 0x4C 0x5F GASLIMIT MSTORE MSTORE 0x4F MSTORE MSTORE8 0x4D COINBASE MSTORE SLOAD 0x5F NUMBER 0x4F 0x4E SLOAD MSTORE COINBASE NUMBER SLOAD 0x5F NUMBER COINBASE 0x4C 0x4C GASLIMIT MSTORE 0x5F 0x49 MSTORE8 0x5F 0x4E 0x4F SLOAD 0x5F POP 0x4F 0x4F 0x4C 0x5F GASLIMIT MSTORE MSTORE 0x4F MSTORE LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 PUSH16 0xB61E762FB23C9EF4D35E34C9601D5E8A ORIGIN SMOD PUSH15 0x415B98F1D390ECC9C6139364736F6C PUSH4 0x43000704 STOP CALLER ",
				"sourceMap": "1274:18598:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1352:44;;;:::i;:::-;;;;-1:-1:-1;;;;;1352:44:4;;;;;;;;;;;;;;1599:48;;;;;;;;;;;;;;;;-1:-1:-1;1599:48:4;-1:-1:-1;;;;;1599:48:4;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6942:156;;;;;;;;;;;;;;;;-1:-1:-1;6942:156:4;;:::i;:::-;;;;;;;;;;;;;;;;9124:224;;;;;;;;;;;;;;;;-1:-1:-1;9124:224:4;;:::i;:::-;;;;;-1:-1:-1;;;;;9124:224:4;;;;;;-1:-1:-1;;;;;9124:224:4;;;;;;;;;;;;;;;;1451:40;;;:::i;9978:187::-;;;;;;;;;;;;;;;;-1:-1:-1;9978:187:4;;:::i;8356:251::-;;;;;;;;;;;;;;;;-1:-1:-1;8356:251:4;;:::i;4205:169::-;;;;;;;;;;;;;;;;-1:-1:-1;4205:169:4;-1:-1:-1;;;;;4205:169:4;;:::i;:::-;;2482:981;;;;;;;;;;;;;;;;-1:-1:-1;2482:981:4;;:::i;1402:43::-;;;:::i;8753:157::-;;;;;;;;;;;;;;;;-1:-1:-1;8753:157:4;;:::i;:::-;;;;;;;;;;;;;;;;;;4716:496;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4716:496:4;;;;;;;;;;;;;:::i;9565:263::-;;;;;;;;;;;;;;;;-1:-1:-1;9565:263:4;;:::i;3597:180::-;;;;;;;;;;;;;;;;-1:-1:-1;3597:180:4;-1:-1:-1;;;;;3597:180:4;;:::i;3898:181::-;;;;;;;;;;;;;;;;-1:-1:-1;3898:181:4;-1:-1:-1;;;;;3898:181:4;;:::i;7371:484::-;;;;;;;;;;;;;;;;-1:-1:-1;7371:484:4;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;5868:927;;;;;;;;;;;;;;;;-1:-1:-1;5868:927:4;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;5868:927:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1352:44;;;-1:-1:-1;;;;;1352:44:4;;:::o;1599:48::-;;;;;;;;;;;;;;;;;;;:::o;6942:156::-;7038:7;7068:23;7084:6;7068:15;:23::i;:::-;7061:30;;6942:156;;;;:::o;9124:224::-;9240:12;9266:13;9311:30;9334:6;9311:22;:30::i;:::-;9304:37;;;;9124:224;;;:::o;1451:40::-;;;-1:-1:-1;;;;;1451:40:4;;:::o;9978:187::-;10081:11;10121:37;10151:6;10121:29;:37::i;:::-;10108:50;9978:187;-1:-1:-1;;;;9978:187:4:o;8356:251::-;8477:17;8508:25;8565:35;8593:6;8565:27;:35::i;4205:169::-;1833:29;:27;:29::i;:::-;4329:16:::1;:38:::0;;-1:-1:-1;;;;;;4329:38:4::1;-1:-1:-1::0;;;;;4329:38:4;;;::::1;::::0;;;::::1;::::0;;4205:169::o;2482:981::-;2600:19;2648:20;;2633:51;;;-1:-1:-1;;;2633:51:4;;;;;;;;;;-1:-1:-1;;;;;2648:20:4;;;;2633:43;;:51;;;;;2600:19;;2633:51;;;;;;;;2648:20;2633:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2633:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2633:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2633:51:4;;;;;;-1:-1:-1;2633:51:4;;;;;;;;;;-1:-1:-1;2633:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2633:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2633:51:4;;;;;;-1:-1:-1;2633:51:4;;;;;;;;;;-1:-1:-1;2633:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2633:51:4;;-1:-1:-1;2599:85:4;;-1:-1:-1;;;;;;;;;2699:25:4;;;2695:62;;-1:-1:-1;2695:62:4;;2740:7;;;2695:62;2767:17;2793:11;-1:-1:-1;;;;;2787:33:4;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2787:35:4;;-1:-1:-1;2897:23:4;2909:10;2897:11;:23::i;:::-;2893:88;;;2936:34;2958:11;2936:21;:34::i;:::-;3097:37;3127:6;3097:29;:37::i;:::-;3146:17;3169:35;3197:6;3169:27;:35::i;:::-;3145:59;;;3324:50;3356:9;3367:6;3324:31;:50::i;:::-;3394:21;-1:-1:-1;;;;;3385:47:4;;3433:11;3446:9;3385:71;;;;;;;;;;;;;-1:-1:-1;;;;;3385:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2482:981;;;;;:::o;1402:43::-;;;-1:-1:-1;;;;;1402:43:4;;:::o;8753:157::-;8851:4;8878:25;8896:6;8878:17;:25::i;4716:496::-;1833:29;:27;:29::i;:::-;4917:12:::1;1941:34;1966:8;1941:24;:34::i;:::-;4997:47:::2;5021:5;5028:15;4997:23;:47::i;:::-;-1:-1:-1::0;;;;;;5089:28:4;;::::2;;::::0;;;:14:::2;:28;::::0;;;;:40:::2;::::0;::::2;:48:::0;;;;5147:58;4716:496::o;9565:263::-;9680:17;9711:19;9784:37;9814:6;9784:29;:37::i;:::-;-1:-1:-1;9755:66:4;;;;-1:-1:-1;9565:263:4;-1:-1:-1;;9565:263:4:o;3597:180::-;1833:29;:27;:29::i;:::-;3724:20:::1;:46:::0;;-1:-1:-1;;;;;;3724:46:4::1;-1:-1:-1::0;;;;;3724:46:4;;;::::1;::::0;;;::::1;::::0;;3597:180::o;3898:181::-;1833:29;:27;:29::i;:::-;4028:19:::1;:44:::0;;-1:-1:-1;;;;;;4028:44:4::1;-1:-1:-1::0;;;;;4028:44:4;;;::::1;::::0;;;::::1;::::0;;3898:181::o;7371:484::-;7491:19;7524:17;7555:13;7597:20;7621:30;7644:6;7621:22;:30::i;:::-;7593:58;;;7675:14;:28;7690:12;-1:-1:-1;;;;;7675:28:4;-1:-1:-1;;;;;7675:28:4;;;;;;;;;;;;:40;;;7661:54;;7756:21;-1:-1:-1;;;;;7747:41:4;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7747:43:4;-1:-1:-1;;;;;7808:28:4;;;;;;;:14;7747:43;7808:28;7747:43;7808:28;;:40;;;7371:484;;7747:43;;-1:-1:-1;7371:484:4;-1:-1:-1;;7371:484:4:o;5868:927::-;5982:11;6007:19;6040:17;6071;6102:18;6134:17;6165:19;6198:13;6225:11;6270:25;6288:6;6270:17;:25::i;:::-;6261:34;;6332:30;6355:6;6332:22;:30::i;:::-;6305:57;;-1:-1:-1;6305:57:4;-1:-1:-1;6409:37:4;6439:6;6409:29;:37::i;:::-;6372:74;;-1:-1:-1;6372:74:4;-1:-1:-1;6372:74:4;-1:-1:-1;6481:27:4;6501:6;6481:19;:27::i;:::-;6456:52;;-1:-1:-1;6456:52:4;;-1:-1:-1;6528:35:4;;-1:-1:-1;6556:6:4;6528:27;:35::i;:::-;-1:-1:-1;6518:45:4;-1:-1:-1;5868:927:4;;;;;;;;;;;:::o;13035:261::-;13123:7;13150:22;;;:14;:22;;;;;;13146:144;;-1:-1:-1;13210:7:4;13202:16;;13146:144;-1:-1:-1;13257:22:4;;;;:14;:22;;;;;;13250:29;;15930:284;16038:12;16141:20;;16126:51;;;-1:-1:-1;;;16126:51:4;;;;;;;;;;16038:12;;-1:-1:-1;;;;;16141:20:4;;16126:43;;:51;;;;;16038:12;;16126:51;;;;;;;16141:20;16126:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16126:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16126:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16126:51:4;;;;;;-1:-1:-1;16126:51:4;;;;;;;;;;-1:-1:-1;16126:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16126:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16126:51:4;;;;;;-1:-1:-1;16126:51:4;;;;;;;;;;-1:-1:-1;16126:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16126:51:4;;;;;16102:75;;-1:-1:-1;16126:51:4;;-1:-1:-1;;;;;15930:284:4;;;:::o;16491:665::-;16606:17;16637:19;16670:11;16707:19;16732:30;16755:6;16732:22;:30::i;:::-;16706:56;;;16772:10;16791:11;16772:31;;16825:4;-1:-1:-1;;;;;16825:19:4;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16825:21:4;16870:18;;;-1:-1:-1;;;16870:18:4;;;;16825:21;;-1:-1:-1;;;;;;16870:16:4;;;;;:18;;;;;16825:21;;16870:18;;;;;;;;:16;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16870:18:4;;-1:-1:-1;16964:23:4;;;:52;;-1:-1:-1;16991:25:4;;16964:52;16960:130;;;17032:47;;-1:-1:-1;;;17032:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16960:130;17140:9;17106:31;17114:9;17125:11;17106:7;:31::i;:::-;:43;;;;;;17100:49;;16491:665;;;;;;;:::o;11368:1515::-;11481:17;11512:25;11563:16;11581:19;11602:17;11623:37;11653:6;11623:29;:37::i;:::-;11562:98;;;;;;11671:19;11696:30;11719:6;11696:22;:30::i;:::-;11670:56;;;11737:19;11758:17;11777:19;11800:27;11820:6;11800:19;:27::i;:::-;11736:91;;;;;;11838:23;11944:6;11932:9;11864:65;11885:9;11908:11;11864:7;:65::i;:::-;:77;:86;;;;;;11838:112;;11991:28;12034:23;12050:6;12034:15;:23::i;:::-;12022:8;:35;;:229;;12073:172;12201:9;12094:104;12131:23;12147:6;12131:15;:23::i;:::-;12120:8;:34;12173:11;12094:7;:104::i;:::-;:116;;;;;;12224:11;12073:7;:172::i;:::-;12248:3;12073:178;12022:229;;;12068:1;12022:229;11991:260;;12348:28;12379:53;12409:11;12422:9;12379:29;:53::i;:::-;12348:84;;12442:20;12644:7;12621:20;12597:11;12479:115;12504:15;12537:27;12545:5;12552:11;12537:7;:27::i;:::-;12479:7;:115::i;:::-;:129;;;;;;12465:176;:186;;;;;;12442:209;;12806:7;12783:20;12682:98;12703:42;12711:20;12733:11;12703:7;:42::i;:::-;12759:11;12682:7;:98::i;:::-;:121;:131;;;;;;12662:151;;12836:40;12844:17;12863:12;12836:7;:40::i;:::-;12824:52;;11368:1515;;;;;;;;;;;;;;:::o;17221:193::-;17322:19;;-1:-1:-1;;;;;17322:19:4;17308:10;:33;17304:104;;17357:40;;;-1:-1:-1;;;17357:40:4;;;;;;;;;;;;;;;;;;;;;;;;;;;17304:104;17221:193::o;17587:251::-;17778:19;17823:8;;;17587:251::o;17960:207::-;18060:10;-1:-1:-1;;;;;18060:25:4;;;18056:105;;18101:49;;-1:-1:-1;;;18101:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10329:191;10453:1;10419:22;;;:14;:22;;;;;;10415:99;;10471:22;;;;:14;:22;;;;;10496:7;10471:32;;10329:191::o;10695:234::-;10840:22;;;;:14;:22;;;;;;10828:34;;10824:99;;;10878:22;;;;:14;:22;;;;;:34;;;10824:99;10695:234;;:::o;15427:289::-;15509:4;15578:20;;15563:51;;;-1:-1:-1;;;15563:51:4;;;;;;;;;;15509:4;;-1:-1:-1;;;;;15578:20:4;;15563:43;;:51;;;;;15509:4;;15563:51;;;;;;;15578:20;15563:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15563:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15563:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15563:51:4;;;;;;-1:-1:-1;15563:51:4;;;;;;;;;;-1:-1:-1;15563:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15563:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15563:51:4;;;;;;-1:-1:-1;15563:51:4;;;;;;;;;;-1:-1:-1;15563:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15563:51:4;;-1:-1:-1;15529:85:4;;-1:-1:-1;;;;;;;;15628:25:4;;;;-1:-1:-1;15624:85:4;;-1:-1:-1;15624:85:4;15676:4;15669:11;;;;;15624:85;15704:5;15697:12;;;;;18289:234;18404:16;;18390:62;;;-1:-1:-1;;;18390:62:4;;-1:-1:-1;;;;;18390:62:4;;;;;;;;;18404:16;;;;;18390:52;;:62;;;;;;;;;;;;;;18404:16;18390:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18390:62:4;18385:132;;18468:38;;;-1:-1:-1;;;18468:38:4;;;;;;;;;;;;;;;;;;;;;;;;;;;18749:457;18950:5;18942;:13;18938:73;;;18971:29;;;-1:-1:-1;;;18971:29:4;;;;;;;;;;;;-1:-1:-1;;;18971:29:4;;;;;;;;;;;;;;18938:73;19103:4;19085:15;:22;:48;;;;19129:4;19111:15;:22;19085:48;19081:119;;;19149:40;;;-1:-1:-1;;;19149:40:4;;;;;;;;;;;;;;;;;;;;;;;;;;;59:161:50;121:7;152:5;;;174:6;;;:20;;;193:1;188;184;:5;;;;;;:10;174:20;167:28;;;;212:1;-1:-1:-1;59:161:50;;;;;:::o;13520:1761:4:-;13668:7;-1:-1:-1;;;;;13716:35:4;;;13770:61;13716:35;13821:9;13770:34;:61::i;:::-;14024:9;14018:3;:15;14000:14;13993:4;:21;:40;13989:1286;;14057:7;14049:16;;;;;13989:1286;14118:9;14112:3;:15;14094:14;14087:4;:21;:40;14083:1192;;14151:20;14143:29;;;;;14083:1192;14225:9;14219:3;:15;14201:14;14194:4;:21;:40;14190:1085;;14258:20;14250:29;;;;;14190:1085;14332:9;14326:3;:15;14308:14;14301:4;:21;:40;14297:978;;14365:20;14357:29;;;;;14297:978;14439:9;14433:3;:15;14415:14;14408:4;:21;:40;14404:871;;14472:20;14464:29;;;;;14404:871;14546:9;14540:3;:15;14522:14;14515:4;:21;:40;14511:764;;14579:20;14571:29;;;;;14511:764;14653:9;14647:3;:15;14629:14;14622:4;:21;:40;14618:657;;14686:20;14678:29;;;;;14618:657;14759:9;14754:2;:14;14736;14729:4;:21;:39;14725:550;;14792:20;14784:29;;;;;14725:550;14865:9;14860:2;:14;14842;14835:4;:21;:39;14831:444;;14898:20;14890:29;;;;;14831:444;14971:9;14966:2;:14;14948;14941:4;:21;:39;14937:338;;15004:20;14996:29;;;;;14937:338;15077:9;15072:2;:14;15054;15047:4;:21;:39;15043:232;;15110:20;15102:29;;;;;15043:232;15223:41;;;-1:-1:-1;;;15223:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;414:124:50;476:7;507:1;502;:6;;495:14;;;;-1:-1:-1;526:5:50;;;414:124::o;226:182::-;288:7;318:1;314;:5;307:13;;;;330:9;346:1;342;:5;;;;;;330:17;;381:1;377;:5;;;;;;373:1;369;:5;:13;364:1;:18;357:26;;;544:153;606:7;637:5;;;659:4;;;;;;:12;;;670:1;667;:4;;652:20;;;19408:462:4;19632:9;19615:14;:26;19611:86;;;19657:29;;;-1:-1:-1;;;19657:29:4;;;;;;;;;;;;-1:-1:-1;;;19657:29:4;;;;;;;;;;;;;;19611:86;19777:4;19760:14;:21;:41;;;;19797:4;19785:9;:16;19760:41;19756:108;;;19817:36;;;-1:-1:-1;;;19817:36:4;;;;;;;;;;;;;;;;;;;;;;;;;;"
			}
		}
	},
	"sourceTreeHashHex": "0x532bc9c3fdf4ff6edf785ad4c586f77434700bb27b8ff25deff128ffb57b61b3",
	"sources": {
		"./ProofOfPerformance.sol": {
			"id": 4
		},
		"../../protocol/authorities/Authority/AuthorityFace.sol": {
			"id": 1
		},
		"../../utils/Pool/IPool.sol": {
			"id": 49
		},
		"../../utils/SafeMath/SafeMath.sol": {
			"id": 50
		},
		"./ProofOfPerformanceFace.sol": {
			"id": 5
		},
		"../../protocol/DragoRegistry/IDragoRegistry.sol": {
			"id": 0
		},
		"../../staking/interfaces/IStaking.sol": {
			"id": 13
		},
		"../RigoToken/RigoTokenFace.sol": {
			"id": 6
		},
		"../../staking/interfaces/IStructs.sol": {
			"id": 17
		},
		"../../staking/interfaces/IGrgVault.sol": {
			"id": 12
		}
	},
	"sourceCodes": {
		"./ProofOfPerformance.sol": "// SPDX-License-Identifier: Apache 2.0\n\n/*\n\n Copyright 2017-2019 RigoBlock, Rigo Investment Sagl, 2020 Rigo Intl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\n// solhint-disable-next-line\npragma solidity 0.7.4;\n\nimport { AuthorityFace } from \"../../protocol/authorities/Authority/AuthorityFace.sol\";\nimport { IPool } from \"../../utils/Pool/IPool.sol\";\nimport { SafeMath } from \"../../utils/SafeMath/SafeMath.sol\";\nimport { ProofOfPerformanceFace } from \"./ProofOfPerformanceFace.sol\";\nimport { IDragoRegistry } from \"../../protocol/DragoRegistry/IDragoRegistry.sol\";\nimport { IStaking } from \"../../staking/interfaces/IStaking.sol\";\n\n\n/// @title Proof of Performance - Controls parameters of inflation.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n// solhint-disable-next-line\ncontract ProofOfPerformance is\n    SafeMath,\n    ProofOfPerformanceFace\n{\n    address public override dragoRegistryAddress;\n    address public override rigoblockDaoAddress;\n    address public override authorityAddress;\n\n    address private immutable STAKING_PROXY_ADDRESS;\n    uint256 private immutable POOL_BASE = 1e6;\n\n    mapping (address => Group) public groupByAddress;\n    mapping (uint256 => uint256) private _highWaterMark;\n\n    struct Group {\n        uint256 epochReward;\n        uint256 rewardRatio;\n    }\n\n    modifier onlyRigoblockDao() {\n        _assertCallerIsRigoblockDao();\n        _;\n    }\n\n    modifier isApprovedFactory(address _factory) {\n        _assertIsApprovedFactory(_factory);\n        _;\n    }\n\n    constructor(\n        address _stakingProxyAddress,\n        address _rigoblockDao,\n        address _dragoRegistry,\n        address _authorityAddress\n    ) {\n        STAKING_PROXY_ADDRESS = _stakingProxyAddress;\n        rigoblockDaoAddress = _rigoblockDao;\n        dragoRegistryAddress = _dragoRegistry;\n        authorityAddress = _authorityAddress;\n    }\n\n    /// @dev Credits the pop reward to the Staking Proxy contract.\n    /// @param poolId Number of the pool Id in registry.\n    function creditPopRewardToStakingProxy(\n        uint256 poolId\n    )\n        external\n        override\n    {\n        (address poolAddress, , , , , ) = IDragoRegistry(dragoRegistryAddress).fromId(poolId);\n\n        if (poolAddress == address(0)) {\n            return;\n        }\n\n        uint256 poolPrice = IPool(poolAddress).calcSharePrice();\n\n        // allow smart contract calls only from pool itself\n        if (_isContract(msg.sender)) {\n            _assertContractIsPool(poolAddress);\n        }\n\n        // initialization is not necessary but explicit as to prevent failure in case of a future upgrade\n        _initializeHwmIfUninitialized(poolId);\n\n        (uint256 popReward, ) = _proofOfPerformanceInternal(poolId);\n\n        // pop assets component is always positive, therefore we must update the hwm if positive performance\n        _updateHwmIfPositivePerformance(poolPrice, poolId);\n\n        IStaking(STAKING_PROXY_ADDRESS).creditPopReward(poolAddress, popReward);\n    }\n\n    /// @dev Allows RigoBlock Dao to update the pools registry.\n    /// @param newDragoRegistryAddress Address of new registry.\n    function setRegistry(address newDragoRegistryAddress)\n        external\n        override\n        onlyRigoblockDao\n    {\n        dragoRegistryAddress = newDragoRegistryAddress;\n    }\n\n    /// @dev Allows RigoBlock Dao to update its address.\n    /// @param newRigoblockDaoAddress Address of new dao.\n    function setRigoblockDao(address newRigoblockDaoAddress)\n        external\n        override\n        onlyRigoblockDao\n    {\n        rigoblockDaoAddress = newRigoblockDaoAddress;\n    }\n\n    /// @dev Allows rigoblock dao to update the authority.\n    /// @param newAuthorityAddress Address of the authority.\n    function setAuthority(address newAuthorityAddress)\n        external\n        override\n        onlyRigoblockDao\n    {\n        authorityAddress = newAuthorityAddress;\n    }\n\n    /// @dev Allows RigoBlock Dao to set the parameters for a group.\n    /// @param groupAddress Address of the pool's group.\n    /// @param ratio Value of the ratio between assets and performance reward for a group.\n    /// @param inflationFactor Value of the reward factor for a group.\n    /// @notice onlyRigoblockDao can set ratio.\n    function setGroupParams(\n        address groupAddress,\n        uint256 ratio,\n        uint256 inflationFactor\n    )\n        external\n        override\n        onlyRigoblockDao\n        isApprovedFactory(groupAddress)\n    {\n        // assert that group parameters are correct\n        _assertValidGroupParams(ratio, inflationFactor);\n        \n        // update storage\n        groupByAddress[groupAddress].rewardRatio = ratio;\n        groupByAddress[groupAddress].epochReward = inflationFactor;\n    }\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    /// @dev Gets data of a pool.\n    /// @param poolId Id of the pool.\n    /// @return active Bool the pool is active.\n    /// @return poolAddress address of the pool.\n    /// @return poolGroup address of the pool factory.\n    /// @return poolPrice price of the pool in wei.\n    /// @return poolSupply total supply of the pool in units.\n    /// @return poolValue total value of the pool in wei.\n    /// @return epochReward value of the reward factor or said pool.\n    /// @return ratio of assets/performance reward (from 0 to 10000).\n    /// @return pop value of the pop reward to be claimed in GRGs.\n    function getPoolData(uint256 poolId)\n        external\n        view\n        override\n        returns (\n            bool active,\n            address poolAddress,\n            address poolGroup,\n            uint256 poolPrice,\n            uint256 poolSupply,\n            uint256 poolValue,\n            uint256 epochReward,\n            uint256 ratio,\n            uint256 pop\n        )\n    {\n        active = _isActiveInternal(poolId);\n        (poolAddress, poolGroup) = _addressFromIdInternal(poolId);\n        (poolPrice, poolSupply, poolValue) = _getPoolPriceAndValueInternal(poolId);\n        (epochReward, , ratio) = getRewardParameters(poolId);\n        (pop, ) = _proofOfPerformanceInternal(poolId);\n        return(\n            active,\n            poolAddress,\n            poolGroup,\n            poolPrice,\n            poolSupply,\n            poolValue,\n            epochReward,\n            ratio,\n            pop\n        );\n    }\n\n    /// @dev Returns the highwatermark of a pool.\n    /// @param poolId Id of the pool.\n    /// @return Value of the all-time-high pool nav.\n    function getHwm(uint256 poolId)\n        external\n        view\n        override\n        returns (uint256)\n    {\n        return _getHwmInternal(poolId);\n    }\n\n    /// @dev Returns the split ratio of asset and performance reward.\n    /// @param poolId Id of the pool.\n    /// @return epochReward Value of the reward factor.\n    /// @return epochTime Value of epoch time.\n    /// @return ratio Value of the ratio from 1 to 100.\n    function getRewardParameters(uint256 poolId)\n        public\n        view\n        override\n        returns (\n            uint256 epochReward,\n            uint256 epochTime,\n            uint256 ratio\n        )\n    {\n        ( , address groupAddress) = _addressFromIdInternal(poolId);\n        epochReward = groupByAddress[groupAddress].epochReward;\n        (epochTime, , , , ) = IStaking(STAKING_PROXY_ADDRESS).getParams();\n        ratio = groupByAddress[groupAddress].rewardRatio;\n    }\n\n    /// @dev Returns the proof of performance reward for a pool.\n    /// @param poolId Id of the pool.\n    /// @return popReward Value of the pop reward in Rigo tokens.\n    /// @return performanceReward Split of the performance reward in Rigo tokens.\n    /// @notice epoch reward should be big enough that it.\n    /// @notice can be decreased if number of funds increases.\n    /// @notice should be at least 10^6 (just as pool base) to start with.\n    /// @notice rigo token has 10^18 decimals.\n    function proofOfPerformance(uint256 poolId)\n        external\n        view\n        override\n        returns (\n            uint256 popReward,\n            uint256 performanceReward\n        )\n    {\n        return _proofOfPerformanceInternal(poolId);\n    }\n\n    /// @dev Checks whether a pool is registered and active.\n    /// @param poolId Id of the pool.\n    /// @return Bool the pool is active.\n    function isActive(uint256 poolId)\n        external\n        view\n        override\n        returns (bool)\n    {\n        return _isActiveInternal(poolId);\n    }\n\n    /// @dev Returns the address and the group of a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return pool Address of the target pool.\n    /// @return group Address of the pool's group.\n    function addressFromId(uint256 poolId)\n        external\n        view\n        override\n        returns (\n            address pool,\n            address group\n        )\n    {\n        return _addressFromIdInternal(poolId);\n    }\n\n    /// @dev Returns the price a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return poolPrice Price of the pool in wei.\n    /// @return totalTokens Number of tokens of a pool (totalSupply).\n    function getPoolPrice(uint256 poolId)\n        external\n        view\n        override\n        returns (\n            uint256 poolPrice,\n            uint256 totalTokens\n        )\n    {\n        (poolPrice, totalTokens, ) = _getPoolPriceAndValueInternal(poolId);\n    }\n\n    /// @dev Returns the value of a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return aum Total value of the pool in ETH.\n    function calcPoolValue(uint256 poolId)\n        external\n        view\n        override\n        returns (uint256 aum)\n    {\n        ( , , aum) = _getPoolPriceAndValueInternal(poolId);\n    }\n\n    /*\n     * INTERNAL FUNCTIONS\n     */\n    /// @dev Initializes the High Watermark if unitialized.\n    /// @param poolId Number of the pool Id in registry.\n    function _initializeHwmIfUninitialized(uint256 poolId)\n        internal\n    {\n        if (_highWaterMark[poolId] == uint256(0)) {\n            _highWaterMark[poolId] = 1 ether;\n        }\n    }\n\n    /// @dev Updates high-water mark if positive performance.\n    /// @param poolPrice Value of the pool price.\n    /// @param poolId Number of the pool Id in registry.\n    function _updateHwmIfPositivePerformance(\n        uint256 poolPrice,\n        uint256 poolId\n    )\n        internal\n    {\n        if (poolPrice > _highWaterMark[poolId]) {\n            _highWaterMark[poolId] = poolPrice;\n        }\n    }\n\n    /// @dev Returns the proof of performance reward for a pool.\n    /// @param poolId Id of the pool.\n    /// @return popReward Value of the pop reward in Rigo tokens.\n    /// @return performanceReward Split of the performance reward in Rigo tokens.\n    /// @notice epoch reward should be big enough that it  can be decreased when number of funds increases\n    /// @notice should be at least 10^6 (just as pool base) to start with.\n    function _proofOfPerformanceInternal(uint256 poolId)\n        internal\n        view\n        returns (\n            uint256 popReward,\n            uint256 performanceReward\n        )\n    {\n        (uint256 newPrice, uint256 tokenSupply, uint256 poolValue) = _getPoolPriceAndValueInternal(poolId);\n        (address poolAddress, ) = _addressFromIdInternal(poolId);\n        (uint256 epochReward, uint256 epochTime, uint256 rewardRatio) = getRewardParameters(poolId);\n\n        uint256 assetsComponent = safeMul(\n            poolValue,\n            epochReward\n        ) * epochTime / 1 days; // proportional to epoch time\n\n        uint256 performanceComponent = newPrice <= _getHwmInternal(poolId) ? uint256(0) : safeMul(\n            safeMul(\n                (newPrice - _getHwmInternal(poolId)),\n                tokenSupply\n            ) / POOL_BASE,\n            epochReward\n        ) * 365; // 365 = 365 days / 1 days\n\n        // reward is inversely proportional to Eth in pool\n        uint256 ethBalanceAdjustment = _ethBalanceAdjustmentInternal(poolAddress, poolValue);\n        uint256 assetsReward = (\n            safeMul(\n                assetsComponent,\n                safeSub(10000, rewardRatio) // 10000 = 100%\n            ) / 10000 ether\n        ) * ethBalanceAdjustment / 1 ether;\n\n        performanceReward = safeDiv(\n            safeMul(performanceComponent, rewardRatio),\n            10000 ether\n        ) * ethBalanceAdjustment / 1 ether;\n\n        popReward = safeAdd(performanceReward, assetsReward);\n    }\n\n    /// @dev Returns the high-watermark of the pool.\n    /// @param poolId Number of the pool in registry.\n    /// @return Number high-watermark.\n    function _getHwmInternal(uint256 poolId)\n        internal\n        view\n        returns (uint256)\n    {\n        if (_highWaterMark[poolId] == uint256(0)) {\n            return (1 ether);\n\n        } else {\n            return _highWaterMark[poolId];\n        }\n    }\n\n    /// @dev Returns the non-linear rewards adjustment by eth.\n    /// @param poolAddress Address of the pool.\n    /// @param poolValue Number of value of the pool in wei.\n    /// @return Number non-linear adjustment.\n    function _ethBalanceAdjustmentInternal(\n        address poolAddress,\n        uint256 poolValue\n    )\n        internal\n        view\n        returns (uint256)\n    {\n        uint256 poolEthBalance = address(IPool(poolAddress)).balance;\n        \n        _assertPoolEthBalanceAndValueValid(poolEthBalance, poolValue);\n\n        // logistic function progression g(x)=e^x/(1+e^x).\n        // rebased on {(poolEthBalance / poolValue)} b\b\b [0.025:0.6], x b\b\b [-1.9:2.8].\n        if (1000 * poolEthBalance >= 800 * poolValue) {\n            return (1 ether);\n\n        } else if (1000 * poolEthBalance >= 600 * poolValue) {\n            return (1 ether * 943 / 1000);\n\n        } else if (1000 * poolEthBalance >= 500 * poolValue) {\n            return (1 ether * 881 / 1000);\n\n        } else if (1000 * poolEthBalance >= 400 * poolValue) {\n            return (1 ether * 769 / 1000);\n\n        } else if (1000 * poolEthBalance >= 300 * poolValue) {\n            return (1 ether * 599 / 1000);\n\n        } else if (1000 * poolEthBalance >= 200 * poolValue) {\n            return (1 ether * 401 / 1000);\n\n        } else if (1000 * poolEthBalance >= 100 * poolValue) {\n            return (1 ether * 231 / 1000);\n\n        } else if (1000 * poolEthBalance >= 75 * poolValue) {\n            return (1 ether * 198 / 1000);\n\n        } else if (1000 * poolEthBalance >= 50 * poolValue) {\n            return (1 ether * 168 / 1000);\n\n        } else if (1000 * poolEthBalance >= 38 * poolValue) {\n            return (1 ether * 155 / 1000);\n\n        } else if (1000 * poolEthBalance >= 25 * poolValue) {\n            return (1 ether * 142 / 1000);\n\n        } else { // reward is 0 for any pool not backed by at least 2.5% eth\n            revert(\"ETH_BELOW_2.5_PERCENT_AUM_ERROR\");\n        }\n    }\n\n    /// @dev Checks whether a pool is registered and active.\n    /// @param poolId Id of the pool.\n    /// @return Bool the pool is active.\n    function _isActiveInternal(uint256 poolId)\n        internal view\n        returns (bool)\n    {\n        (address poolAddress, , , , , ) = IDragoRegistry(dragoRegistryAddress).fromId(poolId);\n        if (poolAddress != address(0)) {\n            return true;\n        } else return false;\n    }\n\n    /// @dev Returns the address and the group of a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return pool Address of the target pool.\n    /// @return group Address of the pool's group.\n    function _addressFromIdInternal(uint256 poolId)\n        internal\n        view\n        returns (\n            address pool,\n            address group\n        )\n    {\n        (pool, , , , , group) = IDragoRegistry(dragoRegistryAddress).fromId(poolId);\n        return (pool, group);\n    }\n\n    /// @dev Returns price, supply, aum of a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return poolPrice Price of the pool in wei.\n    /// @return totalTokens Number of tokens of a pool (totalSupply).\n    /// @return aum Address of the target pool.\n    function _getPoolPriceAndValueInternal(uint256 poolId)\n        internal\n        view\n        returns (\n            uint256 poolPrice,\n            uint256 totalTokens,\n            uint256 aum\n        )\n    {\n        (address poolAddress, ) = _addressFromIdInternal(poolId);\n        IPool pool = IPool(poolAddress);\n        poolPrice = pool.calcSharePrice();\n        totalTokens = pool.totalSupply();\n\n        // revert if pool has no tokens issues or price is 0\n        if (poolPrice == uint256(0) || totalTokens == uint256(0)) {\n            revert(\"POOL_PRICE_OR_TOTAL_SUPPLY_NULL_ERROR\");\n        }\n\n        aum = safeMul(poolPrice, totalTokens) / POOL_BASE;\n    }\n\n    /// @dev Asserts that the caller is the RigoBlock Dao.\n    function _assertCallerIsRigoblockDao()\n        internal\n        view\n    {\n        if (msg.sender != rigoblockDaoAddress) {\n            revert(\"CALLER_NOT_RIGOBLOCK_DAO_ERROR\");\n        }\n    }\n\n    /// @dev Determines whether an address is an account or a contract\n    /// @param target Address to be inspected\n    /// @return Boolean the address is a contract\n    function _isContract(address target)\n        internal\n        view\n        returns (bool)\n    {\n        uint size;\n        // solhint-disable-next-line\n        assembly {\n            size := extcodesize(target)\n        }\n        return size > 0;\n    }\n\n    /// @dev Asserts whether the caller contract is the pool\n    /// @param poolAddress Address of the calling pool\n    function _assertContractIsPool(address poolAddress)\n        internal\n        view\n    {\n        if (msg.sender != poolAddress) {\n            revert(\"SMART_CONTRACT_CALLER_IS_NOT_POOL_ERROR\");\n        }\n    }\n\n    /// @dev Asserts that an address is an approved factory.\n    /// @param _factory Address of the target factory.\n    function _assertIsApprovedFactory(address _factory)\n        internal\n        view\n    {\n        if (!AuthorityFace(authorityAddress).isWhitelistedFactory(_factory)) {\n            revert(\"NOT_APPROVED_AUTHORITY_ERROR\");\n        }\n    }\n\n    /// @dev Asserts that the group parameters are valid.\n    /// @param ratio Value of the ratio between assets and performance reward for a group.\n    /// @param inflationFactor Value of the reward factor for a group.\n    function _assertValidGroupParams(\n        uint256 ratio,\n        uint256 inflationFactor\n    )\n        internal\n        pure\n    {\n        // ratio is from 0 to 10000, 10000 = 100%\n        if (ratio > 10000) {\n            revert(\"TOO_BIG_RATIO_ERROR\");\n        }\n        \n        // inflationFactor is between 1e12 and 1e21\n        if (inflationFactor < 1e12 || inflationFactor > 1e21) {\n            revert(\"INVALID_INFLATION_FACTOR_ERROR\");\n        }\n    }\n    \n    /// @dev Asserts than pool ETH balance and total value are ordinary and not dust.\n    /// @param poolEthBalance Value of the ETH balance.\n    /// @param poolValue Total Value of the pool.\n    function _assertPoolEthBalanceAndValueValid(\n        uint256 poolEthBalance,\n        uint256 poolValue\n    )\n        internal\n        pure\n    {\n        // assert ETH in pool is below pool value\n        if (poolEthBalance > poolValue) {\n            revert(\"ETH_ABOVE_AUM_ERROR\");\n        }\n        \n        // prevent dust from small pools\n        if (poolEthBalance < 1e15 || poolValue < 1e16) {\n            revert(\"POOL_OR_BALANCE_DUST_ERROR\");\n        }\n    }\n}",
		"../../protocol/authorities/Authority/AuthorityFace.sol": "/*\n\n Copyright 2017-2018 RigoBlock, Rigo Investment Sagl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\npragma solidity >=0.4.22 <0.8.0;\n\n/// @title Authority Interface - Allows interaction with the Authority contract.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n// solhint-disable-next-line\ninterface AuthorityFace {\n\n    /*\n     * EVENTS\n     */\n    event AuthoritySet(address indexed authority);\n    event WhitelisterSet(address indexed whitelister);\n    event WhitelistedUser(address indexed target, bool approved);\n    event WhitelistedRegistry(address indexed registry, bool approved);\n    event WhitelistedFactory(address indexed factory, bool approved);\n    event WhitelistedVault(address indexed vault, bool approved);\n    event WhitelistedDrago(address indexed drago, bool isWhitelisted);\n    event NewDragoEventful(address indexed dragoEventful);\n    event NewVaultEventful(address indexed vaultEventful);\n    event NewNavVerifier(address indexed navVerifier);\n    event NewExchangesAuthority(address indexed exchangesAuthority);\n\n    /*\n     * CORE FUNCTIONS\n     */\n    function setAuthority(address _authority, bool _isWhitelisted) external;\n    function setWhitelister(address _whitelister, bool _isWhitelisted) external;\n    function whitelistUser(address _target, bool _isWhitelisted) external;\n    function whitelistDrago(address _drago, bool _isWhitelisted) external;\n    function whitelistVault(address _vault, bool _isWhitelisted) external;\n    function whitelistRegistry(address _registry, bool _isWhitelisted) external;\n    function whitelistFactory(address _factory, bool _isWhitelisted) external;\n    function setDragoEventful(address _dragoEventful) external;\n    function setVaultEventful(address _vaultEventful) external;\n    function setNavVerifier(address _navVerifier) external;\n    function setExchangesAuthority(address _exchangesAuthority) external;\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    function isWhitelistedUser(address _target) external view returns (bool);\n    function isAuthority(address _authority) external view returns (bool);\n    function isWhitelistedRegistry(address _registry) external view returns (bool);\n    function isWhitelistedDrago(address _drago) external view returns (bool);\n    function isWhitelistedVault(address _vault) external view returns (bool);\n    function isWhitelistedFactory(address _factory) external view returns (bool);\n    function getDragoEventful() external view returns (address);\n    function getVaultEventful() external view returns (address);\n    function getNavVerifier() external view returns (address);\n    function getExchangesAuthority() external view returns (address);\n}\n",
		"../../utils/Pool/IPool.sol": "/*\n\n Copyright 2020 Rigo Intl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\npragma solidity >=0.6.0 <0.8.0;\n\n/// @title Pool Interface - Interface of pool standard functions.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n/// @notice only public view functions are used\ninterface IPool {\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    /// @dev Calculates how many shares a user holds.\n    /// @param _who Address of the target account.\n    /// @return Number of shares.\n    function balanceOf(address _who)\n        external\n        view\n        returns (uint256);\n    \n    /// @dev Returns the total amount of issued tokens for this drago.\n    /// @return totaSupply Number of shares.\n    function totalSupply()\n        external\n        view\n        returns (uint256 totaSupply);\n\n    /// @dev Gets the address of the logger contract.\n    /// @return Address of the logger contract.\n    function getEventful()\n        external\n        view\n        returns (address);\n\n    /// @dev Finds details of a drago pool.\n    /// @return name String name of a drago.\n    /// @return symbol String symbol of a drago.\n    /// @return sellPrice Value of the share price in wei.\n    /// @return buyPrice Value of the share price in wei.\n    function getData()\n        external\n        view\n        returns (\n            string memory name,\n            string memory symbol,\n            uint256 sellPrice,\n            uint256 buyPrice\n        );\n\n    /// @dev Returns the price of a pool.\n    /// @return Value of the share price in wei.\n    function calcSharePrice()\n        external\n        view\n        returns (uint256);\n\n    /// @dev Finds the administrative data of the pool.\n    /// @return Address of the account where a user collects fees.\n    /// @return feeCollector Address of the drago dao/factory.\n    /// @return dragoDao Number of the fee split ratio.\n    /// @return ratio Value of the transaction fee in basis points.\n    /// @return transactionFee Value of the subscription fee.\n    /// @return minPeriod Number of the minimum holding period for shares.\n    function getAdminData()\n        external\n        view\n        returns (\n            address,\n            address feeCollector,\n            address dragoDao,\n            uint256 ratio,\n            uint256 transactionFee,\n            uint32 minPeriod\n        );\n}\n",
		"../../utils/SafeMath/SafeMath.sol": "pragma solidity >=0.4.22 <0.8.0;\n\ncontract SafeMath {\n\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b > 0);\n        uint256 c = a / b;\n        assert(a == b * c + a % b);\n        return c;\n    }\n\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c>=a && c>=b);\n        return c;\n    }\n\n    function max64(uint64 a, uint64 b) internal pure returns (uint64) {\n        return a >= b ? a : b;\n    }\n\n    function min64(uint64 a, uint64 b) internal pure returns (uint64) {\n        return a < b ? a : b;\n    }\n\n    function max256(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    function min256(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}\n",
		"./ProofOfPerformanceFace.sol": "/*\n\n Copyright 2017-2019 RigoBlock, Rigo Investment Sagl, 2020 Rigo Intl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\npragma solidity >=0.4.22 <0.8.0;\n\n/// @title Proof of Performance Interface - Allows interaction with the PoP contract.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n// solhint-disable-next-line\ninterface ProofOfPerformanceFace {\n\n    /*\n     * PUBLIC VARIABLES\n     */\n    function dragoRegistryAddress()\n        external\n        view\n        returns (address);\n\n    function rigoblockDaoAddress()\n        external\n        view\n        returns (address);\n\n    function authorityAddress()\n        external\n        view\n        returns (address);\n\n    /*\n     * CORE FUNCTIONS\n     */\n    /// @dev Credits the pop reward to the Staking Proxy contract.\n    /// @param poolId Number of the pool Id in registry.\n    function creditPopRewardToStakingProxy(uint256 poolId)\n        external;\n\n    /// @dev Allows RigoBlock Dao to update the pools registry.\n    /// @param newDragoRegistryAddress Address of new registry.\n    function setRegistry(address newDragoRegistryAddress)\n        external;\n\n    /// @dev Allows RigoBlock Dao to update its address.\n    /// @param newRigoblockDaoAddress Address of new dao.\n    function setRigoblockDao(address newRigoblockDaoAddress)\n        external;\n\n    /// @dev Allows rigoblock dao to update the authority.\n    /// @param newAuthorityAddress Address of the authority.\n    function setAuthority(address newAuthorityAddress)\n        external;\n\n    /// @dev Allows RigoBlock Dao to set the parameters for a group.\n    /// @param groupAddress Address of the pool's group.\n    /// @param ratio Value of the ratio between assets and performance reward for a group.\n    /// @param inflationFactor Value of the reward factor for a group.\n    /// @notice onlyRigoblockDao can set ratio.\n    function setGroupParams(\n        address groupAddress,\n        uint256 ratio,\n        uint256 inflationFactor\n    )\n        external;\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    /// @dev Gets data of a pool.\n    /// @param poolId Id of the pool.\n    /// @return active Bool the pool is active.\n    /// @return poolAddress address of the pool.\n    /// @return poolGroup address of the pool factory.\n    /// @return poolPrice price of the pool in wei.\n    /// @return poolSupply total supply of the pool in units.\n    /// @return poolValue total value of the pool in wei.\n    /// @return epochReward value of the reward factor or said pool.\n    /// @return ratio of assets/performance reward (from 0 to 10000).\n    /// @return pop value of the pop reward to be claimed in GRGs.\n    function getPoolData(uint256 poolId)\n        external\n        view\n        returns (\n            bool active,\n            address poolAddress,\n            address poolGroup,\n            uint256 poolPrice,\n            uint256 poolSupply,\n            uint256 poolValue,\n            uint256 epochReward,\n            uint256 ratio,\n            uint256 pop\n        );\n\n    /// @dev Returns the highwatermark of a pool.\n    /// @param poolId Id of the pool.\n    /// @return Value of the all-time-high pool nav.\n    function getHwm(uint256 poolId)\n        external\n        view\n        returns (uint256);\n\n    /// @dev Returns the split ratio of asset and performance reward.\n    /// @param poolId Id of the pool.\n    /// @return epochReward Value of the reward factor.\n    /// @return epochTime Value of epoch time.\n    /// @return ratio Value of the ratio from 1 to 100.\n    function getRewardParameters(uint256 poolId)\n        external\n        view\n        returns (\n            uint256 epochReward,\n            uint256 epochTime,\n            uint256 ratio\n        );\n\n    /// @dev Returns the proof of performance reward for a pool.\n    /// @param poolId Id of the pool.\n    /// @return popReward Value of the pop reward in Rigo tokens.\n    /// @return performanceReward Split of the performance reward in Rigo tokens.\n    /// @notice epoch reward should be big enough that it.\n    /// @notice can be decreased if number of funds increases.\n    /// @notice should be at least 10^6 (just as pool base) to start with.\n    /// @notice rigo token has 10^18 decimals.\n    function proofOfPerformance(uint256 poolId)\n        external\n        view\n        returns (\n            uint256 popReward,\n            uint256 performanceReward);\n\n    /// @dev Checks whether a pool is registered and active.\n    /// @param poolId Id of the pool.\n    /// @return Bool the pool is active.\n    function isActive(uint256 poolId)\n        external\n        view\n        returns (bool);\n\n    /// @dev Returns the address and the group of a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return pool Address of the target pool.\n    /// @return group Address of the pool's group.\n    function addressFromId(uint256 poolId)\n        external\n        view\n        returns (\n            address pool,\n            address group\n        );\n\n    /// @dev Returns the price a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return poolPrice Price of the pool in wei.\n    /// @return totalTokens Number of tokens of a pool (totalSupply).\n    function getPoolPrice(uint256 poolId)\n        external\n        view\n        returns (\n            uint256 poolPrice,\n            uint256 totalTokens\n        );\n\n    /// @dev Returns the value of a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return aum Total value of the pool in ETH.\n    function calcPoolValue(uint256 poolId)\n        external\n        view\n        returns (uint256 aum);\n}\n",
		"../../protocol/DragoRegistry/IDragoRegistry.sol": "/*\n\n Copyright 2017-2019 RigoBlock, Rigo Investment Sagl, 2020 Rigo Intl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\npragma solidity >=0.5.0 <0.8.0;\n\n/// @title Drago Registry Interface - Allows external interaction with Drago Registry.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n// solhint-disable-next-line\ninterface IDragoRegistry {\n\n    /*\n     * CORE FUNCTIONS\n     */\n    function register(address _drago, string calldata _name, string calldata _symbol, uint256 _dragoId, address _owner) external payable returns (bool);\n    function unregister(uint256 _id) external;\n    function setMeta(uint256 _id, bytes32 _key, bytes32 _value) external;\n    function addGroup(address _group) external;\n    function setFee(uint256 _fee) external;\n    function updateOwner(uint256 _id) external;\n    function updateOwners(uint256[] calldata _id) external;\n    function upgrade(address _newAddress) external payable; //payable as there is a transfer of value, otherwise opcode might throw an error\n    function setUpgraded(uint256 _version) external;\n    function drain() external;\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    function dragoCount() external view returns (uint256);\n    function fromId(uint256 _id) external view returns (address drago, string memory name, string memory symbol, uint256 dragoId, address owner, address group);\n    function fromAddress(address _drago) external view returns (uint256 id, string memory name, string memory symbol, uint256 dragoId, address owner, address group);\n    function fromName(string calldata _name) external view returns (uint256 id, address drago, string memory symbol, uint256 dragoId, address owner, address group);\n    function getNameFromAddress(address _pool) external view returns (string memory);\n    function getSymbolFromAddress(address _pool) external view returns (string memory);\n    function meta(uint256 _id, bytes32 _key) external view returns (bytes32);\n    function getGroups() external view returns (address[] memory);\n    function getFee() external view returns (uint256);\n}\n",
		"../../staking/interfaces/IStaking.sol": "/*\n\n  Original work Copyright 2019 ZeroEx Intl.\n  Modified work Copyright 2020 Rigo Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity >=0.5.9 <0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"../../rigoToken/RigoToken/RigoTokenFace.sol\";\nimport \"../../protocol/DragoRegistry/IDragoRegistry.sol\";\nimport \"./IStructs.sol\";\nimport \"./IGrgVault.sol\";\n\n\ninterface IStaking {\n\n    /// @dev Adds a new proof_of_performance address.\n    /// @param addr Address of proof_of_performance contract to add.\n    function addPopAddress(address addr)\n        external;\n        \n    /// @dev Create a new staking pool. The sender will be the staking pal of this pool.\n    /// Note that a staking pal must be payable.\n    /// @param rigoblockPoolAddress Adds rigoblock pool to the created staking pool for convenience if non-null.\n    /// @return poolId The unique pool id generated for this pool.\n    function createStakingPool(address rigoblockPoolAddress)\n        external\n        returns (bytes32 poolId);\n    \n    /// @dev Allows the operator to update the staking pal address.\n    /// @param poolId Unique id of pool.\n    /// @param newStakingPalAddress Address of the new staking pal.\n    function setStakingPalAddress(bytes32 poolId, address newStakingPalAddress)\n        external;\n\n    /// @dev Decreases the operator share for the given pool (i.e. increases pool rewards for members).\n    /// @param poolId Unique Id of pool.\n    /// @param newOperatorShare The newly decreased percentage of any rewards owned by the operator.\n    function decreaseStakingPoolOperatorShare(bytes32 poolId, uint32 newOperatorShare)\n        external;\n\n    /// @dev Begins a new epoch, preparing the prior one for finalization.\n    ///      Throws if not enough time has passed between epochs or if the\n    ///      previous epoch was not fully finalized.\n    /// @return numPoolsToFinalize The number of unfinalized pools.\n    function endEpoch()\n        external\n        returns (uint256);\n\n    /// @dev Instantly finalizes a single pool that earned rewards in the previous\n    ///      epoch, crediting it rewards for members and withdrawing operator's\n    ///      rewards as WETH. This can be called by internal functions that need\n    ///      to finalize a pool immediately. Does nothing if the pool is already\n    ///      finalized or did not earn rewards in the previous epoch.\n    /// @param poolId The pool ID to finalize.\n    function finalizePool(bytes32 poolId)\n        external;\n\n    /// @dev Initialize storage owned by this contract.\n    ///      This function should not be called directly.\n    ///      The StakingProxy contract will call it in `attachStakingContract()`.\n    function init()\n        external;\n\n    /// @dev Allows caller to join a staking pool as a rigoblock pool id subaccount.\n    /// @param stakingPoolId Unique id of staking pool.\n    /// @param rigoblockPoolAccount Address of subaccount to be added to staking pool.\n    function joinStakingPoolAsRbPoolAccount(\n        bytes32 stakingPoolId,\n        address rigoblockPoolAccount)\n        external;\n\n    /// @dev Moves stake between statuses: 'undelegated' or 'delegated'.\n    ///      Delegated stake can also be moved between pools.\n    ///      This change comes into effect next epoch.\n    /// @param from status to move stake out of.\n    /// @param to status to move stake into.\n    /// @param amount of stake to move.\n    function moveStake(\n        IStructs.StakeInfo calldata from,\n        IStructs.StakeInfo calldata to,\n        uint256 amount\n    )\n        external;\n        \n    /// @dev Credits the value of a pool's pop reward.\n    ///      Only a known RigoBlock pop can call this method. See\n    ///      (MixinPopManager).\n    /// @param poolAccount The address of the rigoblock pool account.\n    /// @param popReward The pop reward.\n    function creditPopReward(\n        address poolAccount,\n        uint256 popReward\n    )\n        external\n        payable;\n\n    /// @dev Removes an existing proof_of_performance address.\n    /// @param addr Address of proof_of_performance contract to remove.\n    function removePopAddress(address addr)\n        external;\n\n    /// @dev Set all configurable parameters at once.\n    /// @param _epochDurationInSeconds Minimum seconds between epochs.\n    /// @param _rewardDelegatedStakeWeight How much delegated stake is weighted vs operator stake, in ppm.\n    /// @param _minimumPoolStake Minimum amount of stake required in a pool to collect rewards.\n    /// @param _cobbDouglasAlphaNumerator Numerator for cobb douglas alpha factor.\n    /// @param _cobbDouglasAlphaDenominator Denominator for cobb douglas alpha factor.\n    function setParams(\n        uint256 _epochDurationInSeconds,\n        uint32 _rewardDelegatedStakeWeight,\n        uint256 _minimumPoolStake,\n        uint32 _cobbDouglasAlphaNumerator,\n        uint32 _cobbDouglasAlphaDenominator\n    )\n        external;\n\n    /// @dev Stake GRG tokens. Tokens are deposited into the GRG Vault.\n    ///      Unstake to retrieve the GRG. Stake is in the 'Active' status.\n    /// @param amount of GRG to stake.\n    function stake(uint256 amount)\n        external;\n\n    /// @dev Unstake. Tokens are withdrawn from the GRG Vault and returned to\n    ///      the staker. Stake must be in the 'undelegated' status in both the\n    ///      current and next epoch in order to be unstaked.\n    /// @param amount of GRG to unstake.\n    function unstake(uint256 amount)\n        external;\n\n    /// @dev Withdraws the caller's WETH rewards that have accumulated\n    ///      until the last epoch.\n    /// @param poolId Unique id of pool.\n    function withdrawDelegatorRewards(bytes32 poolId)\n        external;\n\n    /// @dev Computes the reward balance in ETH of a specific member of a pool.\n    /// @param poolId Unique id of pool.\n    /// @param member The member of the pool.\n    /// @return reward Balance in ETH.\n    function computeRewardBalanceOfDelegator(bytes32 poolId, address member)\n        external\n        view\n        returns (uint256 reward);\n\n    /// @dev Computes the reward balance in ETH of the operator of a pool.\n    /// @param poolId Unique id of pool.\n    /// @return reward Balance in ETH.\n    function computeRewardBalanceOfOperator(bytes32 poolId)\n        external\n        view\n        returns (uint256 reward);\n\n    /// @dev Returns the earliest end time in seconds of this epoch.\n    ///      The next epoch can begin once this time is reached.\n    ///      Epoch period = [startTimeInSeconds..endTimeInSeconds)\n    /// @return Time in seconds.\n    function getCurrentEpochEarliestEndTimeInSeconds()\n        external\n        view\n        returns (uint256);\n\n    /// @dev Gets global stake for a given status.\n    /// @param stakeStatus UNDELEGATED or DELEGATED\n    /// @return balance Global stake for given status.\n    function getGlobalStakeByStatus(IStructs.StakeStatus stakeStatus)\n        external\n        view\n        returns (IStructs.StoredBalance memory balance);\n\n    /// @dev Gets an owner's stake balances by status.\n    /// @param staker Owner of stake.\n    /// @param stakeStatus UNDELEGATED or DELEGATED\n    /// @return balance Owner's stake balances for given status.\n    function getOwnerStakeByStatus(\n        address staker,\n        IStructs.StakeStatus stakeStatus\n    )\n        external\n        view\n        returns (IStructs.StoredBalance memory balance);\n\n    /// @dev Returns the total stake for a given staker.\n    /// @param staker of stake.\n    /// @return Total GRG staked by `staker`.\n    function getTotalStake(address staker)\n        external\n        view\n        returns (uint256);\n\n    /// @dev Retrieves all configurable parameter values.\n    /// @return _epochDurationInSeconds Minimum seconds between epochs.\n    /// @return _rewardDelegatedStakeWeight How much delegated stake is weighted vs operator stake, in ppm.\n    /// @return _minimumPoolStake Minimum amount of stake required in a pool to collect rewards.\n    /// @return _cobbDouglasAlphaNumerator Numerator for cobb douglas alpha factor.\n    /// @return _cobbDouglasAlphaDenominator Denominator for cobb douglas alpha factor.\n    function getParams()\n        external\n        view\n        returns (\n            uint256 _epochDurationInSeconds,\n            uint32 _rewardDelegatedStakeWeight,\n            uint256 _minimumPoolStake,\n            uint32 _cobbDouglasAlphaNumerator,\n            uint32 _cobbDouglasAlphaDenominator\n        );\n\n    /// @param staker of stake.\n    /// @param poolId Unique Id of pool.\n    /// @return balance Stake delegated to pool by staker.\n    function getStakeDelegatedToPoolByOwner(address staker, bytes32 poolId)\n        external\n        view\n        returns (IStructs.StoredBalance memory balance);\n\n    /// @dev Returns a staking pool\n    /// @param poolId Unique id of pool.\n    function getStakingPool(bytes32 poolId)\n        external\n        view\n        returns (IStructs.Pool memory);\n\n    /// @dev Get stats on a staking pool in this epoch.\n    /// @param poolId Pool Id to query.\n    /// @return PoolStats struct for pool id.\n    function getStakingPoolStatsThisEpoch(bytes32 poolId)\n        external\n        view\n        returns (IStructs.PoolStats memory);\n\n    /// @dev Returns the total stake delegated to a specific staking pool,\n    ///      across all members.\n    /// @param poolId Unique Id of pool.\n    /// @return balance Total stake delegated to pool.\n    function getTotalStakeDelegatedToPool(bytes32 poolId)\n        external\n        view\n        returns (IStructs.StoredBalance memory balance);\n\n    /// @dev An overridable way to access the deployed GRG contract.\n    ///      Must be view to allow overrides to access state.\n    /// @return grgContract The GRG contract instance.\n    function getGrgContract()\n        external\n        view\n        returns (RigoTokenFace grgContract);\n\n    /// @dev An overridable way to access the deployed dragoRegistry.\n    ///      Must be view to allow overrides to access state.\n    /// @return dragoRegistry The dragoRegistry contract.\n    function getDragoRegistry()\n        external\n        view\n        returns (IDragoRegistry dragoRegistry);\n\n    /// @dev An overridable way to access the deployed grgVault.\n    ///      Must be view to allow overrides to access state.\n    /// @return grgVault The grgVault contract.\n    function getGrgVault()\n        external\n        view\n        returns (IGrgVault grgVault);\n}\n",
		"../RigoToken/RigoTokenFace.sol": "/*\n\n Copyright 2017-2018 RigoBlock, Rigo Investment Sagl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\npragma solidity >=0.5.0;\n\n/// @title Rigo Token Interface - Allows interaction with the Rigo token.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n// solhint-disable-next-line\ninterface RigoTokenFace {\n\n    function minter() external view returns (address);\n\n    /// @dev send `value` token to `to` from `msg.sender`\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return True if transfer was successful\n    function transfer(address _to, uint256 _value)\n        external\n        returns (bool);\n\n    /// @dev send `value` token to `to` from `from` on the condition it is approved by `from`\n    /// @param _from The address of the sender\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return True if transfer was successful\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    )\n        external\n        returns (bool);\n\n    /// @dev `msg.sender` approves `_spender` to spend `_value` tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _value The amount of wei to be approved for transfer\n    /// @return Always true if the call has enough gas to complete execution\n    function approve(address _spender, uint256 _value)\n        external\n        returns (bool);\n\n    /// @dev Query total supply of token\n    /// @return Total supply of token\n    function totalSupply()\n        external\n        view\n        returns (uint256);\n\n    /// @param _owner The address from which the balance will be retrieved\n    /// @return Balance of owner\n    function balanceOf(address _owner)\n        external\n        view\n        returns (uint256);\n\n    /// @param _owner The address of the account owning tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address _owner, address _spender)\n        external\n        view\n        returns (uint256);\n\n    function mintToken(address _recipient, uint256 _amount) external;\n    function changeMintingAddress(address _newAddress) external;\n    function changeRigoblockAddress(address _newAddress) external;\n}\n",
		"../../staking/interfaces/IStructs.sol": "/*\n\n  Original work Copyright 2019 ZeroEx Intl.\n  Modified work Copyright 2020 Rigo Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity >=0.5.9 <0.8.0;\n\n\ninterface IStructs {\n\n    /// @dev Stats for a pool that earned rewards.\n    /// @param feesCollected Fees collected in ETH by this pool.\n    /// @param weightedStake Amount of weighted stake in the pool.\n    /// @param membersStake Amount of non-operator stake in the pool.\n    struct PoolStats {\n        uint256 feesCollected;\n        uint256 weightedStake;\n        uint256 membersStake;\n    }\n\n    /// @dev Holds stats aggregated across a set of pools.\n    /// @param rewardsAvailable Rewards (ETH) available to the epoch\n    ///        being finalized (the previous epoch). This is simply the balance\n    ///        of the contract at the end of the epoch.\n    /// @param numPoolsToFinalize The number of pools that have yet to be finalized through `finalizePools()`.\n    /// @param totalFeesCollected The total fees collected for the epoch being finalized.\n    /// @param totalWeightedStake The total fees collected for the epoch being finalized.\n    /// @param totalRewardsFinalized Amount of rewards that have been paid during finalization.\n    struct AggregatedStats {\n        uint256 rewardsAvailable;\n        uint256 numPoolsToFinalize;\n        uint256 totalFeesCollected;\n        uint256 totalWeightedStake;\n        uint256 totalRewardsFinalized;\n    }\n\n    /// @dev Encapsulates a balance for the current and next epochs.\n    /// Note that these balances may be stale if the current epoch\n    /// is greater than `currentEpoch`.\n    /// @param currentEpoch The current epoch\n    /// @param currentEpochBalance Balance in the current epoch.\n    /// @param nextEpochBalance Balance in `currentEpoch+1`.\n    struct StoredBalance {\n        uint64 currentEpoch;\n        uint96 currentEpochBalance;\n        uint96 nextEpochBalance;\n    }\n\n    /// @dev Statuses that stake can exist in.\n    ///      Any stake can be (re)delegated effective at the next epoch\n    ///      Undelegated stake can be withdrawn if it is available in both the current and next epoch\n    enum StakeStatus {\n        UNDELEGATED,\n        DELEGATED\n    }\n\n    /// @dev Info used to describe a status.\n    /// @param status Status of the stake.\n    /// @param poolId Unique Id of pool. This is set when status=DELEGATED.\n    struct StakeInfo {\n        StakeStatus status;\n        bytes32 poolId;\n    }\n\n    /// @dev Struct to represent a fraction.\n    /// @param numerator Numerator of fraction.\n    /// @param denominator Denominator of fraction.\n    struct Fraction {\n        uint256 numerator;\n        uint256 denominator;\n    }\n\n    /// @dev Holds the metadata for a staking pool.\n    /// @param operator Operator of the pool.\n    /// @param stakingPal Staking pal of the pool.\n    /// @param operatorShare Fraction of the total balance owned by the operator, in ppm.\n    /// @param stakingPalShare Fraction of the operator reward owned by the staking pal, in ppm.\n    struct Pool {\n        address operator;\n        address stakingPal;\n        uint32 operatorShare;\n        uint32 stakingPalShare;\n    }\n}\n",
		"../../staking/interfaces/IGrgVault.sol": "/*\n\n  Original work Copyright 2019 ZeroEx Intl.\n  Modified work Copyright 2020 Rigo Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity >=0.5.9 <0.8.0;\n\n\ninterface IGrgVault {\n\n    /// @dev Emmitted whenever a StakingProxy is set in a vault.\n    event StakingProxySet(address stakingProxyAddress);\n\n    /// @dev Emitted when the Staking contract is put into Catastrophic Failure Mode\n    /// @param sender Address of sender (`msg.sender`)\n    event InCatastrophicFailureMode(address sender);\n\n    /// @dev Emitted when Grg Tokens are deposited into the vault.\n    /// @param staker of Grg Tokens.\n    /// @param amount of Grg Tokens deposited.\n    event Deposit(\n        address indexed staker,\n        uint256 amount\n    );\n\n    /// @dev Emitted when Grg Tokens are withdrawn from the vault.\n    /// @param staker of Grg Tokens.\n    /// @param amount of Grg Tokens withdrawn.\n    event Withdraw(\n        address indexed staker,\n        uint256 amount\n    );\n\n    /// @dev Emitted whenever the GRG AssetProxy is set.\n    event GrgProxySet(address grgProxyAddress);\n\n    /// @dev Sets the address of the StakingProxy contract.\n    /// Note that only the contract staker can call this function.\n    /// @param _stakingProxyAddress Address of Staking proxy contract.\n    function setStakingProxy(address _stakingProxyAddress)\n        external;\n\n    /// @dev Vault enters into Catastrophic Failure Mode.\n    /// *** WARNING - ONCE IN CATOSTROPHIC FAILURE MODE, YOU CAN NEVER GO BACK! ***\n    /// Note that only the contract staker can call this function.\n    function enterCatastrophicFailure()\n        external;\n\n    /// @dev Sets the Grg proxy.\n    /// Note that only the contract staker can call this.\n    /// Note that this can only be called when *not* in Catastrophic Failure mode.\n    /// @param grgProxyAddress Address of the RigoBlock Grg Proxy.\n    function setGrgProxy(address grgProxyAddress)\n        external;\n\n    /// @dev Deposit an `amount` of Grg Tokens from `staker` into the vault.\n    /// Note that only the Staking contract can call this.\n    /// Note that this can only be called when *not* in Catastrophic Failure mode.\n    /// @param staker of Grg Tokens.\n    /// @param amount of Grg Tokens to deposit.\n    function depositFrom(address staker, uint256 amount)\n        external;\n\n    /// @dev Withdraw an `amount` of Grg Tokens to `staker` from the vault.\n    /// Note that only the Staking contract can call this.\n    /// Note that this can only be called when *not* in Catastrophic Failure mode.\n    /// @param staker of Grg Tokens.\n    /// @param amount of Grg Tokens to withdraw.\n    function withdrawFrom(address staker, uint256 amount)\n        external;\n\n    /// @dev Withdraw ALL Grg Tokens to `staker` from the vault.\n    /// Note that this can only be called when *in* Catastrophic Failure mode.\n    /// @param staker of Grg Tokens.\n    function withdrawAllFrom(address staker)\n        external\n        returns (uint256);\n\n    /// @dev Returns the balance in Grg Tokens of the `staker`\n    /// @return Balance in Grg.\n    function balanceOf(address staker)\n        external\n        view\n        returns (uint256);\n\n    /// @dev Returns the entire balance of Grg tokens in the vault.\n    function balanceOfGrgVault()\n        external\n        view\n        returns (uint256);\n}\n"
	},
	"compiler": {
		"name": "solc",
		"version": "0.7.4+commit.3f05b770",
		"settings": {
			"remappings": [],
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap"
					]
				}
			}
		}
	},
	"chains": {}
}