{
	"schemaVersion": "2.0.0",
	"contractName": "ProofOfPerformance",
	"compilerOutput": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"name": "_ofGroup",
						"type": "address"
					},
					{
						"name": "_ratio",
						"type": "uint256"
					}
				],
				"name": "setRatio",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "getHwm",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "addressFromId",
				"outputs": [
					{
						"name": "pool",
						"type": "address"
					},
					{
						"name": "group",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "rigoblockDao",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "calcPoolValue",
				"outputs": [
					{
						"name": "aum",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "getRatio",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "proofOfPerformance",
				"outputs": [
					{
						"name": "popReward",
						"type": "uint256"
					},
					{
						"name": "performanceReward",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "isActive",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "getPoolPrice",
				"outputs": [
					{
						"name": "thePoolPrice",
						"type": "uint256"
					},
					{
						"name": "totalTokens",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "RIGOTOKENADDRESS",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_dragoRegistry",
						"type": "address"
					}
				],
				"name": "setRegistry",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_rigoblockDao",
						"type": "address"
					}
				],
				"name": "setRigoblockDao",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "dragoRegistry",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "getPoolData",
				"outputs": [
					{
						"name": "active",
						"type": "bool"
					},
					{
						"name": "thePoolAddress",
						"type": "address"
					},
					{
						"name": "thePoolGroup",
						"type": "address"
					},
					{
						"name": "thePoolPrice",
						"type": "uint256"
					},
					{
						"name": "thePoolSupply",
						"type": "uint256"
					},
					{
						"name": "poolValue",
						"type": "uint256"
					},
					{
						"name": "epochReward",
						"type": "uint256"
					},
					{
						"name": "ratio",
						"type": "uint256"
					},
					{
						"name": "pop",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "getEpochReward",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "claimPop",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"name": "_rigoTokenAddress",
						"type": "address"
					},
					{
						"name": "_rigoblockDao",
						"type": "address"
					},
					{
						"name": "_dragoRegistry",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			}
		],
		"devdoc": {
			"author": "Gabriele Rigo - <gab@rigoblock.com>",
			"methods": {
				"addressFromId(uint256)": {
					"details": "Returns the address and the group of a pool from its id.",
					"params": {
						"poolId": "Id of the pool."
					},
					"return": "pool Address of the target pool.group Address of the pool's group."
				},
				"calcPoolValue(uint256)": {
					"details": "Returns the value of a pool from its id.",
					"params": {
						"poolId": "Id of the pool."
					},
					"return": "aum Total value of the pool in ETH."
				},
				"claimPop(uint256)": {
					"details": "Allows anyone to allocate the pop reward to pool wizards.",
					"params": {
						"poolId": "Number of pool id in registry."
					}
				},
				"getEpochReward(uint256)": {
					"details": "Returns the reward factor for a pool.",
					"params": {
						"poolId": "Id of the pool."
					},
					"return": "Value of the reward factor."
				},
				"getHwm(uint256)": {
					"details": "Returns the highwatermark of a pool.",
					"params": {
						"poolId": "Id of the pool."
					},
					"return": "Value of the all-time-high pool nav."
				},
				"getPoolData(uint256)": {
					"details": "Gets data of a pool.",
					"params": {
						"poolId": "Id of the pool."
					},
					"return": "active Bool the pool is active.thePoolAddress address of the pool.thePoolGroup address of the pool factory.thePoolPrice price of the pool in wei.thePoolSupply total supply of the pool in units.poolValue total value of the pool in wei.epochReward value of the reward factor or said pool.ratio of assets/performance reward (from 0 to 10000).pop value of the pop reward to be claimed in GRGs."
				},
				"getPoolPrice(uint256)": {
					"details": "Returns the price a pool from its id.",
					"params": {
						"poolId": "Id of the pool."
					},
					"return": "thePoolPrice Price of the pool in wei.totalTokens Number of tokens of a pool (totalSupply)."
				},
				"getRatio(uint256)": {
					"details": "Returns the split ratio of asset and performance reward.",
					"params": {
						"poolId": "Id of the pool."
					},
					"return": "Value of the ratio from 1 to 100."
				},
				"isActive(uint256)": {
					"details": "Checks whether a pool is registered and active.",
					"params": {
						"poolId": "Id of the pool."
					},
					"return": "Bool the pool is active."
				},
				"proofOfPerformance(uint256)": {
					"details": "Returns the proof of performance reward for a pool.",
					"params": {
						"poolId": "Id of the pool."
					},
					"return": "popReward Value of the pop reward in Rigo tokens.performanceReward Split of the performance reward in Rigo tokens."
				},
				"setRatio(address,uint256)": {
					"details": "Allows RigoBlock Dao to set the ratio between assets and performance reward for a group.",
					"params": {
						"_ofGroup": "Id of the pool.",
						"_ratio": "Id of the pool."
					}
				},
				"setRegistry(address)": {
					"details": "Allows RigoBlock Dao to update the pools registry.",
					"params": {
						"_dragoRegistry": "Address of new registry."
					}
				},
				"setRigoblockDao(address)": {
					"details": "Allows RigoBlock Dao to update its address.",
					"params": {
						"_rigoblockDao": "Address of new dao."
					}
				}
			},
			"title": "Proof of Performance - Controls parameters of inflation."
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x60 DUP1 PUSH2 0x209F DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 SWAP1 SWAP3 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 DUP5 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0xA8 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP4 DUP4 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP5 DUP6 AND OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x2000 DUP1 PUSH2 0x9F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x9AF94F30 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xBB76BD29 GT PUSH2 0x83 JUMPI DUP1 PUSH4 0xBB76BD29 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xD21C87AD EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xD418634A EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xDC5D2799 EQ PUSH2 0x3DD JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x9AF94F30 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xA6C9C443 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xA91EE0DC EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xB516E6E1 EQ PUSH2 0x306 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x427FDC0C GT PUSH2 0xF0 JUMPI DUP1 PUSH4 0x427FDC0C EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x46A62EAF EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x4D749E43 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x27D JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x5752047 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x249D9123 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x360DAFA0 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x3EDD80C3 EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH2 0x542 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x55E JUMP JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x571 JUMP JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x59D JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x78B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 ISZERO ISZERO DUP11 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP9 DUP10 AND PUSH1 0x20 DUP12 ADD MSTORE SWAP7 SWAP1 SWAP8 AND DUP9 DUP8 ADD MSTORE PUSH1 0x60 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x120 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x802 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x480 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x524154494F5F4249474745525F5448414E5F3130303030000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x525 DUP3 PUSH2 0xCA4 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x539 DUP4 PUSH2 0xCDD JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x569 DUP3 PUSH2 0xE5C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x57D DUP4 PUSH2 0x1021 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x539 DUP4 PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x525 DUP3 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5A9 DUP4 PUSH2 0xE5C JUMP JUMPDEST POP SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x65B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x728 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x7A2 DUP11 PUSH2 0x1324 JUMP JUMPDEST SWAP9 POP PUSH2 0x7AD DUP11 PUSH2 0xCDD JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH2 0x7BB DUP11 PUSH2 0xE5C JUMP JUMPDEST SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP PUSH2 0x7CB DUP11 PUSH2 0x1021 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP1 SWAP3 POP PUSH2 0x7DC SWAP1 POP DUP11 PUSH2 0x11C7 JUMP JUMPDEST POP SWAP1 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP10 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7F8 DUP4 PUSH2 0x1021 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x874 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5245454E5452414E43595F494C4C4547414C0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xC277F1AC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 SWAP2 DUP4 SWAP2 PUSH4 0xC277F1AC SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x926 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD SWAP2 SWAP4 SWAP3 DUP4 ADD SWAP3 SWAP2 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x98E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0x9A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x9D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0xA04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP6 SWAP7 POP PUSH1 0x0 SWAP6 POP PUSH2 0xA1D SWAP5 POP DUP9 SWAP4 POP PUSH2 0x11C7 SWAP3 POP POP POP JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xA8F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x504F505F5245574152445F49535F4E554C4C0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9489FA84 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE SWAP1 POP PUSH2 0xB3A PUSH2 0x14C5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBE5DDB99 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO ISZERO PUSH2 0xC75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D494E545F494E464C4154494F4E5F4552524F52000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xCC8 JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x528 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x528 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xC277F1AC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 DUP3 SWAP2 PUSH4 0xC277F1AC SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 DUP8 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0xDAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD SWAP2 SWAP4 SWAP3 DUP4 ADD SWAP3 SWAP2 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0xDFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0xE46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x60 ADD MLOAD SWAP4 SWAP7 POP SWAP3 SWAP5 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xE6B DUP6 PUSH2 0xCDD JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9489FA84 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xED5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP DUP5 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFA7 JUMPI POP DUP4 ISZERO ISZERO JUMPDEST ISZERO ISZERO PUSH2 0xFFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FB0 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xF4240 PUSH2 0x100C DUP7 DUP7 PUSH2 0x1581 JUMP JUMPDEST DUP2 ISZERO ISZERO PUSH2 0x1015 JUMPI INVALID JUMPDEST DIV SWAP3 POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1030 DUP6 PUSH2 0xCDD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x103B PUSH2 0x14C5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD410E0C2 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x1109 PUSH2 0x14C5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xEF78D4FD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x116A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x117E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP6 SWAP1 SWAP5 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x11D5 DUP5 PUSH2 0xCA4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x11E5 DUP8 PUSH2 0xE5C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0x11F6 DUP9 PUSH2 0xCDD JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1207 DUP12 PUSH2 0x1021 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x0 DUP1 PUSH3 0x15180 DUP5 PUSH2 0x1220 DUP10 DUP9 PUSH2 0x1581 JUMP JUMPDEST MUL DUP2 ISZERO ISZERO PUSH2 0x122A JUMPI INVALID JUMPDEST DIV SWAP2 POP DUP10 DUP10 LT PUSH2 0x1270 JUMPI PUSH3 0x15180 PUSH2 0x125B PUSH3 0xF4240 PUSH2 0x124B DUP14 DUP14 SUB DUP13 PUSH2 0x1581 JUMP JUMPDEST DUP2 ISZERO ISZERO PUSH2 0x1254 JUMPI INVALID JUMPDEST DIV DUP8 PUSH2 0x1581 JUMP JUMPDEST PUSH4 0x1E13380 MUL DUP2 ISZERO ISZERO PUSH2 0x126A JUMPI INVALID JUMPDEST DIV PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x128A DUP9 DUP11 PUSH2 0x15AE JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x12AA DUP7 PUSH2 0x12A5 PUSH2 0x2710 DUP11 PUSH2 0x19B9 JUMP JUMPDEST PUSH2 0x1581 JUMP JUMPDEST DUP2 ISZERO ISZERO PUSH2 0x12B3 JUMPI INVALID JUMPDEST DIV MUL DUP2 ISZERO ISZERO PUSH2 0x12BE JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x12D4 DUP9 DUP11 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x12F1 PUSH2 0x12E1 DUP6 DUP9 PUSH2 0x1581 JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x19CB JUMP JUMPDEST MUL DUP2 ISZERO ISZERO PUSH2 0x12FB JUMPI INVALID JUMPDEST DIV SWAP12 POP PUSH2 0x1312 DUP15 DUP7 PUSH2 0x130D DUP16 DUP6 PUSH2 0x1A00 JUMP JUMPDEST PUSH2 0x1A1A JUMP JUMPDEST SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xC277F1AC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0xC277F1AC SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x13F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD SWAP2 SWAP4 SWAP3 DUP4 ADD SWAP3 SWAP2 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0x1428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0x1442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x145E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0x1471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0x148B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP6 SWAP7 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO SWAP4 POP PUSH2 0x14BE SWAP3 POP POP POP JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x528 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7546172 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x154F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1563 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x159D JUMPI POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x159A JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x15A5 JUMPI INVALID JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND BALANCE DUP3 DUP2 LT ISZERO DUP1 PUSH2 0x15DE JUMPI POP PUSH7 0x38D7EA4C68000 DUP2 GT ISZERO JUMPDEST ISZERO PUSH2 0x1634 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F87 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xB1A2BC2EC500000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1652 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1676 JUMPI DUP3 DUP2 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST DIV SWAP2 POP POP PUSH2 0x15A8 JUMP JUMPDEST PUSH8 0x853A0D2313C0000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1694 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x16C0 JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x16B2 JUMPI INVALID JUMPDEST DIV PUSH2 0x3AF MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH8 0x6F05B59D3B20000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x16DE JUMPI INVALID JUMPDEST DIV LT PUSH2 0x170A JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x16FC JUMPI INVALID JUMPDEST DIV PUSH2 0x371 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH8 0x58D15E176280000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1728 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1754 JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1746 JUMPI INVALID JUMPDEST DIV PUSH2 0x301 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH8 0x429D069189E0000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1772 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x179E JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1790 JUMPI INVALID JUMPDEST DIV PUSH2 0x257 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH8 0x2C68AF0BB140000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x17BC JUMPI INVALID JUMPDEST DIV LT PUSH2 0x17E8 JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x17DA JUMPI INVALID JUMPDEST DIV PUSH2 0x191 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH8 0x16345785D8A0000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1806 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1831 JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1824 JUMPI INVALID JUMPDEST DIV PUSH1 0xE7 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH8 0x10A741A46278000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x184F JUMPI INVALID JUMPDEST DIV LT PUSH2 0x187A JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x186D JUMPI INVALID JUMPDEST DIV PUSH1 0xC6 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH7 0xB1A2BC2EC50000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1897 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x18C2 JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x18B5 JUMPI INVALID JUMPDEST DIV PUSH1 0xA8 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH7 0x8700CC75770000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x18DF JUMPI INVALID JUMPDEST DIV LT PUSH2 0x190A JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x18FD JUMPI INVALID JUMPDEST DIV PUSH1 0x9B MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH7 0x58D15E17628000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1927 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1952 JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1945 JUMPI INVALID JUMPDEST DIV PUSH1 0x8E MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4554485F42454C4F575F322E355F50455243454E545F41554D5F4552524F5200 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x19C5 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x19D6 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x19E3 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x19F1 JUMPI INVALID JUMPDEST MOD DUP2 DUP5 MUL ADD DUP5 EQ ISZERO ISZERO PUSH2 0x15A5 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT DUP1 ISZERO SWAP1 PUSH2 0x159D JUMPI POP DUP3 DUP2 LT ISZERO PUSH2 0x15A5 JUMPI INVALID JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xC277F1AC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 PUSH4 0xC277F1AC SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 DUP7 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x1AEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD SWAP2 SWAP4 SWAP3 DUP4 ADD SWAP3 SWAP2 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1B0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0x1B1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0x1B39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1B55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0x1B68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0x1B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8DA5CB5B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD SWAP9 SWAP10 POP SWAP2 SWAP8 PUSH4 0x1E13380 SWAP8 POP DUP13 SWAP7 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP3 DIV DUP3 AND SWAP6 POP PUSH4 0x70A08231 SWAP5 POP SWAP1 DUP10 AND SWAP3 POP PUSH4 0x8DA5CB5B SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH4 0xFFFFFFFF DUP6 AND MUL DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD MUL DUP2 ISZERO ISZERO PUSH2 0x1CDC JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x1CE7 PUSH2 0x14C5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF54A8E0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP2 LT ISZERO PUSH2 0x1DE2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5354414B45445F4752475F42454C4F575F4D494E494D554D0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP5 LT PUSH2 0x1DF2 JUMPI SWAP2 POP PUSH2 0x1F7F SWAP1 POP JUMP JUMPDEST PUSH8 0xB1A2BC2EC500000 DUP2 DUP6 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1E10 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1E29 JUMPI PUSH2 0x3E8 PUSH2 0x35E DUP3 MUL JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x1F7F JUMP JUMPDEST PUSH8 0x853A0D2313C0000 DUP2 DUP6 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1E47 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1E5A JUMPI PUSH2 0x3E8 PUSH2 0x2C7 DUP3 MUL PUSH2 0x1E1F JUMP JUMPDEST PUSH8 0x429D069189E0000 DUP2 DUP6 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1E78 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1E8B JUMPI PUSH2 0x3E8 PUSH2 0x1C0 DUP3 MUL PUSH2 0x1E1F JUMP JUMPDEST PUSH8 0x2C68AF0BB140000 DUP2 DUP6 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1EA9 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1EBC JUMPI PUSH2 0x3E8 PUSH2 0x156 DUP3 MUL PUSH2 0x1E1F JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 DUP6 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1EDA JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1EEC JUMPI PUSH2 0x3E8 PUSH1 0xD7 DUP3 MUL PUSH2 0x1E1F JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP2 DUP6 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1F09 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1F1B JUMPI PUSH2 0x3E8 PUSH1 0x2E DUP3 MUL PUSH2 0x1E1F JUMP JUMPDEST PUSH7 0x11C37937E08000 DUP2 DUP6 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1F38 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1F4A JUMPI PUSH2 0x3E8 PUSH1 0x1D DUP3 MUL PUSH2 0x1E1F JUMP JUMPDEST PUSH7 0x11C37937E08000 DUP2 DUP6 PUSH8 0x8AC7230489E80000 MUL DUP2 ISZERO ISZERO PUSH2 0x1F67 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1F79 JUMPI PUSH2 0x3E8 PUSH1 0x6 DUP3 MUL PUSH2 0x1E1F JUMP JUMPDEST DUP4 SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID GASLIMIT SLOAD 0x48 0x5f TIMESTAMP COINBASE 0x4c COINBASE 0x4e NUMBER GASLIMIT 0x5f 0x48 0x49 0x47 0x48 GASLIMIT MSTORE 0x5f SLOAD 0x48 COINBASE 0x4e 0x5f COINBASE SSTORE 0x4d 0x5f 0x4f MSTORE 0x5f DIFFICULTY SSTORE MSTORE8 SLOAD 0x5f GASLIMIT MSTORE MSTORE 0x4f MSTORE POP 0x4f 0x4f 0x4c 0x5f POP MSTORE 0x49 NUMBER GASLIMIT 0x5f 0x4f MSTORE 0x5f SLOAD 0x4f SLOAD COINBASE 0x4c 0x5f MSTORE8 SSTORE POP POP 0x4c MSIZE 0x5f 0x4e SSTORE 0x4c 0x4c 0x5f GASLIMIT MSTORE MSTORE 0x4f MSTORE LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH4 0xBED387B3 EXTCODESIZE PUSH2 0x391E LOG4 0xbd SWAP12 EXP 0xcb SWAP9 EXTCODECOPY SWAP11 0xc5 0xd6 SAR 0xaa SWAP11 NUMBER SWAP7 GASLIMIT SLT 0xb1 0xc0 DUP1 SMOD 0xd5 0xe3 STOP 0x29 ",
				"sourceMap": "4182:18537:0:-;;;697:5:3;675:27;;-1:-1:-1;;675:27:3;;;4787:364:0;5:2:-1;;;;30:1;27;20:12;5:2;4787:364:0;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4787:364:0;;;;;;;;;;;4970:16;:36;;-1:-1:-1;;;;;4970:36:0;;;;;-1:-1:-1;;;;;;4970:36:0;;;;;;5016:12;:28;;;;;-1:-1:-1;;;;;;5016:28:0;;;;;;4970:16;5054:30;;;;;;;;;;;;;4182:18537;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b506004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900480639af94f30116100b4578063bb76bd2911610083578063bb76bd2914610339578063d21c87ad14610341578063d418634a146103c0578063dc5d2799146103dd5761011d565b80639af94f30146102ae578063a6c9c443146102cb578063a91ee0dc146102d3578063b516e6e1146103065761011d565b8063427fdc0c116100f0578063427fdc0c1461020d57806346a62eaf1461022a5780634d749e431461024757806382afd23b1461027d5761011d565b80630575204714610122578063249d91231461015d578063360dafa01461018c5780633edd80c3146101dc575b600080fd5b61015b6004803603604081101561013857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103fa565b005b61017a6004803603602081101561017357600080fd5b503561051a565b60408051918252519081900360200190f35b6101a9600480360360208110156101a257600080fd5b503561052d565b6040805173ffffffffffffffffffffffffffffffffffffffff938416815291909216602082015281519081900390910190f35b6101e4610542565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61017a6004803603602081101561022357600080fd5b503561055e565b61017a6004803603602081101561024057600080fd5b5035610571565b6102646004803603602081101561025d57600080fd5b5035610586565b6040805192835260208301919091528051918290030190f35b61029a6004803603602081101561029357600080fd5b5035610592565b604080519115158252519081900360200190f35b610264600480360360208110156102c457600080fd5b503561059d565b6101e46105b4565b61015b600480360360208110156102e957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166105d5565b61015b6004803603602081101561031c57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166106a2565b6101e461076f565b61035e6004803603602081101561035757600080fd5b503561078b565b604080519915158a5273ffffffffffffffffffffffffffffffffffffffff98891660208b015296909716888701526060880194909452608087019290925260a086015260c085015260e084015261010083019190915251908190036101200190f35b61017a600480360360208110156103d657600080fd5b50356107ec565b61015b600480360360208110156103f357600080fd5b5035610802565b60025473ffffffffffffffffffffffffffffffffffffffff16331461048057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b6127108111156104f157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f524154494f5f4249474745525f5448414e5f3130303030000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff909116600090815260046020526040902055565b600061052582610ca4565b90505b919050565b60008061053983610cdd565b91509150915091565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b600061056982610e5c565b949350505050565b60008061057d83611021565b95945050505050565b600080610539836111c7565b600061052582611324565b6000806105a983610e5c565b509094909350915050565b600054610100900473ffffffffffffffffffffffffffffffffffffffff1681565b60025473ffffffffffffffffffffffffffffffffffffffff16331461065b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60025473ffffffffffffffffffffffffffffffffffffffff16331461072857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060008060008060006107a28a611324565b98506107ad8a610cdd565b90985096506107bb8a610e5c565b919750955093506107cb8a611021565b9194509092506107dc90508a6111c7565b5090509193959799909294969850565b6000806107f883611021565b5090949350505050565b60005460ff161561087457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f5245454e5452414e43595f494c4c4547414c0000000000000000000000000000604482015290519081900360640190fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117825554604080517fc277f1ac00000000000000000000000000000000000000000000000000000000815260048101859052905173ffffffffffffffffffffffffffffffffffffffff9092169291839163c277f1ac9160248083019286929190829003018186803b15801561091257600080fd5b505afa158015610926573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405260c081101561096d57600080fd5b81516020830180519193928301929164010000000081111561098e57600080fd5b820160208101848111156109a157600080fd5b81516401000000008111828201871017156109bb57600080fd5b505092919060200180516401000000008111156109d757600080fd5b820160208101848111156109ea57600080fd5b8151640100000000811182820187101715610a0457600080fd5b5095965060009550610a1d94508893506111c792505050565b50905060008111610a8f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f504f505f5245574152445f49535f4e554c4c0000000000000000000000000000604482015290519081900360640190fd5b60008273ffffffffffffffffffffffffffffffffffffffff16639489fa846040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610af357600080fd5b505afa158015610b07573d6000803e3d6000fd5b505050506040513d6020811015610b1d57600080fd5b505160008681526003602052604090208190559050610b3a6114c5565b73ffffffffffffffffffffffffffffffffffffffff1663be5ddb9984846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610bdc57600080fd5b505af1158015610bf0573d6000803e3d6000fd5b505050506040513d6020811015610c0657600080fd5b50511515610c7557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4d494e545f494e464c4154494f4e5f4552524f52000000000000000000000000604482015290519081900360640190fd5b5050600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055505050565b6000818152600360205260408120541515610cc85750670de0b6b3a7640000610528565b50600081815260036020526040902054610528565b600154604080517fc277f1ac000000000000000000000000000000000000000000000000000000008152600481018490529051600092839273ffffffffffffffffffffffffffffffffffffffff90911691829163c277f1ac9160248083019287929190829003018186803b158015610d5457600080fd5b505afa158015610d68573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405260c0811015610daf57600080fd5b815160208301805191939283019291640100000000811115610dd057600080fd5b82016020810184811115610de357600080fd5b8151640100000000811182820187101715610dfd57600080fd5b50509291906020018051640100000000811115610e1957600080fd5b82016020810184811115610e2c57600080fd5b8151640100000000811182820187101715610e4657600080fd5b5050506060015193965092945050505050915091565b600080600080610e6b85610cdd565b50905060008190508073ffffffffffffffffffffffffffffffffffffffff16639489fa846040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610ed557600080fd5b505afa158015610ee9573d6000803e3d6000fd5b505050506040513d6020811015610eff57600080fd5b5051604080517f18160ddd000000000000000000000000000000000000000000000000000000008152905191965073ffffffffffffffffffffffffffffffffffffffff8316916318160ddd91600480820192602092909190829003018186803b158015610f6b57600080fd5b505afa158015610f7f573d6000803e3d6000fd5b505050506040513d6020811015610f9557600080fd5b505193508415801590610fa757508315155b1515610ffe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611fb06025913960400191505060405180910390fd5b620f424061100c8686611581565b81151561101557fe5b04925050509193909250565b60008060008061103085610cdd565b91505061103b6114c5565b73ffffffffffffffffffffffffffffffffffffffff1663d410e0c2826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156110d357600080fd5b505afa1580156110e7573d6000803e3d6000fd5b505050506040513d60208110156110fd57600080fd5b505193506111096114c5565b73ffffffffffffffffffffffffffffffffffffffff1663ef78d4fd6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561116a57600080fd5b505afa15801561117e573d6000803e3d6000fd5b505050506040513d602081101561119457600080fd5b505173ffffffffffffffffffffffffffffffffffffffff9091166000908152600460205260409020549395909450915050565b60008060006111d584610ca4565b905060008060006111e587610e5c565b92509250925060006111f688610cdd565b50905060008060006112078b611021565b9194509250905060008062015180846112208988611581565b0281151561122a57fe5b049150898910611270576201518061125b620f424061124b8d8d038c611581565b81151561125457fe5b0487611581565b6301e133800281151561126a57fe5b04611273565b60005b90506000670de0b6b3a764000061128a888a6115ae565b69021e19e0c9bab24000006112aa866112a56127108a6119b9565b611581565b8115156112b357fe5b04028115156112be57fe5b049050670de0b6b3a76400006112d4888a6115ae565b6112f16112e18588611581565b69021e19e0c9bab24000006119cb565b028115156112fb57fe5b049b506113128e8661130d8f85611a00565b611a1a565b9c505050505050505050505050915091565b600154604080517fc277f1ac00000000000000000000000000000000000000000000000000000000815260048101849052905160009273ffffffffffffffffffffffffffffffffffffffff16918391839163c277f1ac9160248083019286929190829003018186803b15801561139957600080fd5b505afa1580156113ad573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405260c08110156113f457600080fd5b81516020830180519193928301929164010000000081111561141557600080fd5b8201602081018481111561142857600080fd5b815164010000000081118282018710171561144257600080fd5b5050929190602001805164010000000081111561145e57600080fd5b8201602081018481111561147157600080fd5b815164010000000081118282018710171561148b57600080fd5b50959650505073ffffffffffffffffffffffffffffffffffffffff85161593506114be9250505057600192505050610528565b5050919050565b600080600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663075461726040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561154f57600080fd5b505afa158015611563573d6000803e3d6000fd5b505050506040513d602081101561157957600080fd5b505191505090565b600082820283158061159d575082848281151561159a57fe5b04145b15156115a557fe5b90505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff83163182811015806115de575066038d7ea4c680008111155b15611634576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611f876029913960400191505060405180910390fd5b670b1a2bc2ec5000008382670de0b6b3a76400000281151561165257fe5b0410611676578281670de0b6b3a76400000281151561166d57fe5b049150506115a8565b670853a0d2313c00008382670de0b6b3a76400000281151561169457fe5b04106116c0576103e88382670de0b6b3a7640000028115156116b257fe5b046103af0281151561166d57fe5b6706f05b59d3b200008382670de0b6b3a7640000028115156116de57fe5b041061170a576103e88382670de0b6b3a7640000028115156116fc57fe5b046103710281151561166d57fe5b67058d15e1762800008382670de0b6b3a76400000281151561172857fe5b0410611754576103e88382670de0b6b3a76400000281151561174657fe5b046103010281151561166d57fe5b670429d069189e00008382670de0b6b3a76400000281151561177257fe5b041061179e576103e88382670de0b6b3a76400000281151561179057fe5b046102570281151561166d57fe5b6702c68af0bb1400008382670de0b6b3a7640000028115156117bc57fe5b04106117e8576103e88382670de0b6b3a7640000028115156117da57fe5b046101910281151561166d57fe5b67016345785d8a00008382670de0b6b3a76400000281151561180657fe5b0410611831576103e88382670de0b6b3a76400000281151561182457fe5b0460e70281151561166d57fe5b67010a741a462780008382670de0b6b3a76400000281151561184f57fe5b041061187a576103e88382670de0b6b3a76400000281151561186d57fe5b0460c60281151561166d57fe5b66b1a2bc2ec500008382670de0b6b3a76400000281151561189757fe5b04106118c2576103e88382670de0b6b3a7640000028115156118b557fe5b0460a80281151561166d57fe5b668700cc757700008382670de0b6b3a7640000028115156118df57fe5b041061190a576103e88382670de0b6b3a7640000028115156118fd57fe5b04609b0281151561166d57fe5b6658d15e176280008382670de0b6b3a76400000281151561192757fe5b0410611952576103e88382670de0b6b3a76400000281151561194557fe5b04608e0281151561166d57fe5b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4554485f42454c4f575f322e355f50455243454e545f41554d5f4552524f5200604482015290519081900360640190fd5b6000828211156119c557fe5b50900390565b60008082116119d657fe5b600082848115156119e357fe5b04905082848115156119f157fe5b0681840201841415156115a557fe5b600082820183811080159061159d5750828110156115a557fe5b600154604080517fc277f1ac000000000000000000000000000000000000000000000000000000008152600481018690529051600092839273ffffffffffffffffffffffffffffffffffffffff9091169163c277f1ac916024808201928692909190829003018186803b158015611a9057600080fd5b505afa158015611aa4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405260c0811015611aeb57600080fd5b815160208301805191939283019291640100000000811115611b0c57600080fd5b82016020810184811115611b1f57600080fd5b8151640100000000811182820187101715611b3957600080fd5b50509291906020018051640100000000811115611b5557600080fd5b82016020810184811115611b6857600080fd5b8151640100000000811182820187101715611b8257600080fd5b505060008054604080517f8da5cb5b000000000000000000000000000000000000000000000000000000008152905198995091976301e1338097508c965073ffffffffffffffffffffffffffffffffffffffff610100909204821695506370a0823194509089169250638da5cb5b91600480820192602092909190829003018186803b158015611c1157600080fd5b505afa158015611c25573d6000803e3d6000fd5b505050506040513d6020811015611c3b57600080fd5b5051604080517c010000000000000000000000000000000000000000000000000000000063ffffffff851602815273ffffffffffffffffffffffffffffffffffffffff9092166004830152516024808301926020929190829003018186803b158015611ca657600080fd5b505afa158015611cba573d6000803e3d6000fd5b505050506040513d6020811015611cd057600080fd5b505102811515611cdc57fe5b049050611ce76114c5565b73ffffffffffffffffffffffffffffffffffffffff1663ff54a8e06040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015611d4857600080fd5b505afa158015611d5c573d6000803e3d6000fd5b505050506040513d6020811015611d7257600080fd5b5051811015611de257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f5354414b45445f4752475f42454c4f575f4d494e494d554d0000000000000000604482015290519081900360640190fd5b808410611df2579150611f7f9050565b670b1a2bc2ec5000008185670de0b6b3a764000002811515611e1057fe5b0410611e29576103e861035e82025b0492505050611f7f565b670853a0d2313c00008185670de0b6b3a764000002811515611e4757fe5b0410611e5a576103e86102c78202611e1f565b670429d069189e00008185670de0b6b3a764000002811515611e7857fe5b0410611e8b576103e86101c08202611e1f565b6702c68af0bb1400008185670de0b6b3a764000002811515611ea957fe5b0410611ebc576103e86101568202611e1f565b67016345785d8a00008185670de0b6b3a764000002811515611eda57fe5b0410611eec576103e860d78202611e1f565b662386f26fc100008185670de0b6b3a764000002811515611f0957fe5b0410611f1b576103e8602e8202611e1f565b6611c37937e080008185670de0b6b3a764000002811515611f3857fe5b0410611f4a576103e8601d8202611e1f565b6611c37937e080008185678ac7230489e8000002811515611f6757fe5b0410611f79576103e860068202611e1f565b83925050505b939250505056fe4554485f42414c414e43455f4849474845525f5448414e5f41554d5f4f525f445553545f4552524f52504f4f4c5f50524943455f4f525f544f54414c5f535550504c595f4e554c4c5f4552524f52a165627a7a7230582063bed387b33b61391ea4bd9b0acb983c9ac5d61daa9a43964512b1c08007d5e30029",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x9AF94F30 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xBB76BD29 GT PUSH2 0x83 JUMPI DUP1 PUSH4 0xBB76BD29 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xD21C87AD EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xD418634A EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xDC5D2799 EQ PUSH2 0x3DD JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x9AF94F30 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xA6C9C443 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xA91EE0DC EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xB516E6E1 EQ PUSH2 0x306 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x427FDC0C GT PUSH2 0xF0 JUMPI DUP1 PUSH4 0x427FDC0C EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x46A62EAF EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x4D749E43 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x27D JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x5752047 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x249D9123 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x360DAFA0 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x3EDD80C3 EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH2 0x542 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x55E JUMP JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x571 JUMP JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x59D JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x78B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 ISZERO ISZERO DUP11 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP9 DUP10 AND PUSH1 0x20 DUP12 ADD MSTORE SWAP7 SWAP1 SWAP8 AND DUP9 DUP8 ADD MSTORE PUSH1 0x60 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x120 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x802 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x480 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x524154494F5F4249474745525F5448414E5F3130303030000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x525 DUP3 PUSH2 0xCA4 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x539 DUP4 PUSH2 0xCDD JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x569 DUP3 PUSH2 0xE5C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x57D DUP4 PUSH2 0x1021 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x539 DUP4 PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x525 DUP3 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5A9 DUP4 PUSH2 0xE5C JUMP JUMPDEST POP SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x65B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x728 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x7A2 DUP11 PUSH2 0x1324 JUMP JUMPDEST SWAP9 POP PUSH2 0x7AD DUP11 PUSH2 0xCDD JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH2 0x7BB DUP11 PUSH2 0xE5C JUMP JUMPDEST SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP PUSH2 0x7CB DUP11 PUSH2 0x1021 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP1 SWAP3 POP PUSH2 0x7DC SWAP1 POP DUP11 PUSH2 0x11C7 JUMP JUMPDEST POP SWAP1 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP10 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7F8 DUP4 PUSH2 0x1021 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x874 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5245454E5452414E43595F494C4C4547414C0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xC277F1AC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 SWAP2 DUP4 SWAP2 PUSH4 0xC277F1AC SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x926 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD SWAP2 SWAP4 SWAP3 DUP4 ADD SWAP3 SWAP2 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x98E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0x9A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x9D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0xA04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP6 SWAP7 POP PUSH1 0x0 SWAP6 POP PUSH2 0xA1D SWAP5 POP DUP9 SWAP4 POP PUSH2 0x11C7 SWAP3 POP POP POP JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xA8F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x504F505F5245574152445F49535F4E554C4C0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9489FA84 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE SWAP1 POP PUSH2 0xB3A PUSH2 0x14C5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBE5DDB99 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO ISZERO PUSH2 0xC75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D494E545F494E464C4154494F4E5F4552524F52000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xCC8 JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x528 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x528 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xC277F1AC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 DUP3 SWAP2 PUSH4 0xC277F1AC SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 DUP8 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0xDAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD SWAP2 SWAP4 SWAP3 DUP4 ADD SWAP3 SWAP2 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0xDFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0xE46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x60 ADD MLOAD SWAP4 SWAP7 POP SWAP3 SWAP5 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xE6B DUP6 PUSH2 0xCDD JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9489FA84 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xED5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP DUP5 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFA7 JUMPI POP DUP4 ISZERO ISZERO JUMPDEST ISZERO ISZERO PUSH2 0xFFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FB0 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xF4240 PUSH2 0x100C DUP7 DUP7 PUSH2 0x1581 JUMP JUMPDEST DUP2 ISZERO ISZERO PUSH2 0x1015 JUMPI INVALID JUMPDEST DIV SWAP3 POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1030 DUP6 PUSH2 0xCDD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x103B PUSH2 0x14C5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD410E0C2 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x1109 PUSH2 0x14C5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xEF78D4FD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x116A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x117E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP6 SWAP1 SWAP5 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x11D5 DUP5 PUSH2 0xCA4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x11E5 DUP8 PUSH2 0xE5C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0x11F6 DUP9 PUSH2 0xCDD JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1207 DUP12 PUSH2 0x1021 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x0 DUP1 PUSH3 0x15180 DUP5 PUSH2 0x1220 DUP10 DUP9 PUSH2 0x1581 JUMP JUMPDEST MUL DUP2 ISZERO ISZERO PUSH2 0x122A JUMPI INVALID JUMPDEST DIV SWAP2 POP DUP10 DUP10 LT PUSH2 0x1270 JUMPI PUSH3 0x15180 PUSH2 0x125B PUSH3 0xF4240 PUSH2 0x124B DUP14 DUP14 SUB DUP13 PUSH2 0x1581 JUMP JUMPDEST DUP2 ISZERO ISZERO PUSH2 0x1254 JUMPI INVALID JUMPDEST DIV DUP8 PUSH2 0x1581 JUMP JUMPDEST PUSH4 0x1E13380 MUL DUP2 ISZERO ISZERO PUSH2 0x126A JUMPI INVALID JUMPDEST DIV PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x128A DUP9 DUP11 PUSH2 0x15AE JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x12AA DUP7 PUSH2 0x12A5 PUSH2 0x2710 DUP11 PUSH2 0x19B9 JUMP JUMPDEST PUSH2 0x1581 JUMP JUMPDEST DUP2 ISZERO ISZERO PUSH2 0x12B3 JUMPI INVALID JUMPDEST DIV MUL DUP2 ISZERO ISZERO PUSH2 0x12BE JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x12D4 DUP9 DUP11 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x12F1 PUSH2 0x12E1 DUP6 DUP9 PUSH2 0x1581 JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x19CB JUMP JUMPDEST MUL DUP2 ISZERO ISZERO PUSH2 0x12FB JUMPI INVALID JUMPDEST DIV SWAP12 POP PUSH2 0x1312 DUP15 DUP7 PUSH2 0x130D DUP16 DUP6 PUSH2 0x1A00 JUMP JUMPDEST PUSH2 0x1A1A JUMP JUMPDEST SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xC277F1AC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0xC277F1AC SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x13F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD SWAP2 SWAP4 SWAP3 DUP4 ADD SWAP3 SWAP2 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0x1428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0x1442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x145E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0x1471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0x148B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP6 SWAP7 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO SWAP4 POP PUSH2 0x14BE SWAP3 POP POP POP JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x528 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7546172 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x154F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1563 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x159D JUMPI POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x159A JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x15A5 JUMPI INVALID JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND BALANCE DUP3 DUP2 LT ISZERO DUP1 PUSH2 0x15DE JUMPI POP PUSH7 0x38D7EA4C68000 DUP2 GT ISZERO JUMPDEST ISZERO PUSH2 0x1634 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F87 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xB1A2BC2EC500000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1652 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1676 JUMPI DUP3 DUP2 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST DIV SWAP2 POP POP PUSH2 0x15A8 JUMP JUMPDEST PUSH8 0x853A0D2313C0000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1694 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x16C0 JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x16B2 JUMPI INVALID JUMPDEST DIV PUSH2 0x3AF MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH8 0x6F05B59D3B20000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x16DE JUMPI INVALID JUMPDEST DIV LT PUSH2 0x170A JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x16FC JUMPI INVALID JUMPDEST DIV PUSH2 0x371 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH8 0x58D15E176280000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1728 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1754 JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1746 JUMPI INVALID JUMPDEST DIV PUSH2 0x301 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH8 0x429D069189E0000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1772 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x179E JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1790 JUMPI INVALID JUMPDEST DIV PUSH2 0x257 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH8 0x2C68AF0BB140000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x17BC JUMPI INVALID JUMPDEST DIV LT PUSH2 0x17E8 JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x17DA JUMPI INVALID JUMPDEST DIV PUSH2 0x191 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH8 0x16345785D8A0000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1806 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1831 JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1824 JUMPI INVALID JUMPDEST DIV PUSH1 0xE7 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH8 0x10A741A46278000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x184F JUMPI INVALID JUMPDEST DIV LT PUSH2 0x187A JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x186D JUMPI INVALID JUMPDEST DIV PUSH1 0xC6 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH7 0xB1A2BC2EC50000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1897 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x18C2 JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x18B5 JUMPI INVALID JUMPDEST DIV PUSH1 0xA8 MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH7 0x8700CC75770000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x18DF JUMPI INVALID JUMPDEST DIV LT PUSH2 0x190A JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x18FD JUMPI INVALID JUMPDEST DIV PUSH1 0x9B MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH7 0x58D15E17628000 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1927 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1952 JUMPI PUSH2 0x3E8 DUP4 DUP3 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1945 JUMPI INVALID JUMPDEST DIV PUSH1 0x8E MUL DUP2 ISZERO ISZERO PUSH2 0x166D JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4554485F42454C4F575F322E355F50455243454E545F41554D5F4552524F5200 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x19C5 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x19D6 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x19E3 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x19F1 JUMPI INVALID JUMPDEST MOD DUP2 DUP5 MUL ADD DUP5 EQ ISZERO ISZERO PUSH2 0x15A5 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT DUP1 ISZERO SWAP1 PUSH2 0x159D JUMPI POP DUP3 DUP2 LT ISZERO PUSH2 0x15A5 JUMPI INVALID JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xC277F1AC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 PUSH4 0xC277F1AC SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 DUP7 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x1AEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD SWAP2 SWAP4 SWAP3 DUP4 ADD SWAP3 SWAP2 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1B0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0x1B1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0x1B39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1B55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0x1B68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH2 0x1B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8DA5CB5B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD SWAP9 SWAP10 POP SWAP2 SWAP8 PUSH4 0x1E13380 SWAP8 POP DUP13 SWAP7 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP3 DIV DUP3 AND SWAP6 POP PUSH4 0x70A08231 SWAP5 POP SWAP1 DUP10 AND SWAP3 POP PUSH4 0x8DA5CB5B SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH4 0xFFFFFFFF DUP6 AND MUL DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD MUL DUP2 ISZERO ISZERO PUSH2 0x1CDC JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x1CE7 PUSH2 0x14C5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF54A8E0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP2 LT ISZERO PUSH2 0x1DE2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5354414B45445F4752475F42454C4F575F4D494E494D554D0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP5 LT PUSH2 0x1DF2 JUMPI SWAP2 POP PUSH2 0x1F7F SWAP1 POP JUMP JUMPDEST PUSH8 0xB1A2BC2EC500000 DUP2 DUP6 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1E10 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1E29 JUMPI PUSH2 0x3E8 PUSH2 0x35E DUP3 MUL JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x1F7F JUMP JUMPDEST PUSH8 0x853A0D2313C0000 DUP2 DUP6 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1E47 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1E5A JUMPI PUSH2 0x3E8 PUSH2 0x2C7 DUP3 MUL PUSH2 0x1E1F JUMP JUMPDEST PUSH8 0x429D069189E0000 DUP2 DUP6 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1E78 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1E8B JUMPI PUSH2 0x3E8 PUSH2 0x1C0 DUP3 MUL PUSH2 0x1E1F JUMP JUMPDEST PUSH8 0x2C68AF0BB140000 DUP2 DUP6 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1EA9 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1EBC JUMPI PUSH2 0x3E8 PUSH2 0x156 DUP3 MUL PUSH2 0x1E1F JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 DUP6 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1EDA JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1EEC JUMPI PUSH2 0x3E8 PUSH1 0xD7 DUP3 MUL PUSH2 0x1E1F JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP2 DUP6 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1F09 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1F1B JUMPI PUSH2 0x3E8 PUSH1 0x2E DUP3 MUL PUSH2 0x1E1F JUMP JUMPDEST PUSH7 0x11C37937E08000 DUP2 DUP6 PUSH8 0xDE0B6B3A7640000 MUL DUP2 ISZERO ISZERO PUSH2 0x1F38 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1F4A JUMPI PUSH2 0x3E8 PUSH1 0x1D DUP3 MUL PUSH2 0x1E1F JUMP JUMPDEST PUSH7 0x11C37937E08000 DUP2 DUP6 PUSH8 0x8AC7230489E80000 MUL DUP2 ISZERO ISZERO PUSH2 0x1F67 JUMPI INVALID JUMPDEST DIV LT PUSH2 0x1F79 JUMPI PUSH2 0x3E8 PUSH1 0x6 DUP3 MUL PUSH2 0x1E1F JUMP JUMPDEST DUP4 SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID GASLIMIT SLOAD 0x48 0x5f TIMESTAMP COINBASE 0x4c COINBASE 0x4e NUMBER GASLIMIT 0x5f 0x48 0x49 0x47 0x48 GASLIMIT MSTORE 0x5f SLOAD 0x48 COINBASE 0x4e 0x5f COINBASE SSTORE 0x4d 0x5f 0x4f MSTORE 0x5f DIFFICULTY SSTORE MSTORE8 SLOAD 0x5f GASLIMIT MSTORE MSTORE 0x4f MSTORE POP 0x4f 0x4f 0x4c 0x5f POP MSTORE 0x49 NUMBER GASLIMIT 0x5f 0x4f MSTORE 0x5f SLOAD 0x4f SLOAD COINBASE 0x4c 0x5f MSTORE8 SSTORE POP POP 0x4c MSIZE 0x5f 0x4e SSTORE 0x4c 0x4c 0x5f GASLIMIT MSTORE MSTORE 0x4f MSTORE LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH4 0xBED387B3 EXTCODESIZE PUSH2 0x391E LOG4 0xbd SWAP12 EXP 0xcb SWAP9 EXTCODECOPY SWAP11 0xc5 0xd6 SAR 0xaa SWAP11 NUMBER SWAP7 GASLIMIT SLT 0xb1 0xc0 DUP1 SMOD 0xd5 0xe3 STOP 0x29 ",
				"sourceMap": "4182:18537:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4182:18537:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6684:284;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6684:284:0;;;;;;;;;:::i;:::-;;8728:140;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8728:140:0;;:::i;:::-;;;;;;;;;;;;;;;;10759:208;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10759:208:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4398:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11588:191;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11588:191:0;;:::i;9374:186::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9374:186:0;;:::i;10061:199::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10061:199:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10406:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10406:139:0;;:::i;:::-;;;;;;;;;;;;;;;;;;11187:251;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11187:251:0;;:::i;4281:31::-;;;:::i;6061:138::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6061:138:0;;;;:::i;6311:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6311:139:0;;;;:::i;4364:28::-;;;:::i;7636:945::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7636:945:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9007:203;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9007:203:0;;:::i;5318:618::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5318:618:0;;:::i;6684:284::-;4707:12;;;;4693:10;:26;4672:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6840:5;6830:15;;;6809:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6924:16;;;;;;;;:6;:16;;;;;:37;6684:284::o;8728:140::-;8807:7;8838:22;8853:6;8838:14;:22::i;:::-;8830:31;;8728:140;;;;:::o;10759:208::-;10858:12;10884:13;10930:29;10952:6;10930:21;:29::i;:::-;10922:38;;;;10759:208;;;:::o;4398:27::-;;;;;;:::o;11588:191::-;11687:11;11736:36;11765:6;11736:28;:36::i;:::-;11723:49;11588:191;-1:-1:-1;;;;11588:191:0:o;9374:186::-;9455:7;9484:13;9501:30;9524:6;9501:22;:30::i;:::-;9478:53;9374:186;-1:-1:-1;;;;;9374:186:0:o;10061:199::-;10152:17;10171:25;10219:34;10246:6;10219:26;:34::i;10406:139::-;10487:4;10514:24;10531:6;10514:16;:24::i;11187:251::-;11285:20;11319:19;11395:36;11424:6;11395:28;:36::i;:::-;-1:-1:-1;11363:68:0;;;;-1:-1:-1;11187:251:0;-1:-1:-1;;11187:251:0:o;4281:31::-;;;;;;;;;:::o;6061:138::-;4707:12;;;;4693:10;:26;4672:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6162:13;:30;;;;;;;;;;;;;;;6061:138::o;6311:139::-;4707:12;;;;4693:10;:26;4672:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6415:12;:28;;;;;;;;;;;;;;;6311:139::o;4364:28::-;;;;;;:::o;7636:945::-;7733:11;7758:22;7794:20;7828;7862:21;7897:17;7928:19;7961:13;7988:11;8033:24;8050:6;8033:16;:24::i;:::-;8024:33;;8100:29;8122:6;8100:21;:29::i;:::-;8067:62;;-1:-1:-1;8067:62:0;-1:-1:-1;8182:36:0;8211:6;8182:28;:36::i;:::-;8139:79;;-1:-1:-1;8139:79:0;-1:-1:-1;8139:79:0;-1:-1:-1;8253:30:0;8276:6;8253:22;:30::i;:::-;8228:55;;-1:-1:-1;8228:55:0;;-1:-1:-1;8303:34:0;;-1:-1:-1;8330:6:0;8303:26;:34::i;:::-;-1:-1:-1;8293:44:0;-1:-1:-1;7636:945:0;;;;;;;;;;;:::o;9007:203::-;9094:7;9118:19;9145:30;9168:6;9145:22;:30::i;:::-;-1:-1:-1;9117:58:0;;9007:203;-1:-1:-1;;;;9007:203:0:o;5318:618::-;947:6:3;;;;946:7;925:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1051:6;:13;;;;1060:4;1051:13;;;;;5443::0;5522:23;;;;;;;;;;;;;;5443:13;;;;;1051:6:3;5443:13:0;;5522:15;;:23;;;;;1051:6:3;;5522:23:0;;;;;;;5443:13;5522:23;;;5:2:-1;;;;30:1;27;20:12;5:2;5522:23:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5522:23:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;5522:23:0;80:15:-1;;;97:9;76:31;65:43;;120:4;113:20;13:3;5:12;;2:2;;;30:1;27;20:12;2:2;5522:23:0;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;5522:23:0;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;5496:49:0;;-1:-1:-1;5556:11:0;;-1:-1:-1;5573:34:0;;-1:-1:-1;5600:6:0;;-1:-1:-1;5573:26:0;;-1:-1:-1;;;5573:34:0:i;:::-;-1:-1:-1;5555:52:0;-1:-1:-1;5644:1:0;5638:7;;5617:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5699:13;5720:11;5715:32;;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5715:34:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5715:34:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5715:34:0;5759:17;;;;:9;5715:34;5759:17;;;;:39;;;5715:34;-1:-1:-1;5839:11:0;:9;:11::i;:::-;5829:36;;;5866:11;5879:3;5829:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5829:54:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5829:54:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5829:54:0;5808:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1173:5:3;1164:14;;;;;;-1:-1:-1;;;5318:618:0:o;15108:269::-;15195:7;15222:17;;;:9;:17;;;;;:31;:36;15218:153;;;-1:-1:-1;15282:7:0;15274:16;;15218:153;-1:-1:-1;15329:17:0;;;;:9;:17;;;;;:31;15322:38;;21488:318;21698:13;;21746:23;;;;;;;;;;;;;;21595:12;;;;21698:13;;;;;;;21746:15;;:23;;;;;21595:12;;21746:23;;;;;;;21698:13;21746:23;;;5:2:-1;;;;30:1;27;20:12;5:2;21746:23:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21746:23:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;21746:23:0;80:15:-1;;;97:9;76:31;65:43;;120:4;113:20;13:3;5:12;;2:2;;;30:1;27;20:12;2:2;21746:23:0;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;21746:23:0;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;;21746:23:0;;;21722:47;;-1:-1:-1;21746:23:0;;-1:-1:-1;;;;;21488:318:0;;;:::o;22086:631::-;22200:20;22234:19;22267:11;22304:19;22329:29;22351:6;22329:21;:29::i;:::-;22303:55;;;22368:9;22385:11;22368:29;;22422:4;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22422:21:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22422:21:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22422:21:0;22467:18;;;;;;;;22422:21;;-1:-1:-1;22467:16:0;;;;;;:18;;;;;22422:21;;22467:18;;;;;;;;:16;:18;;;5:2:-1;;;;30:1;27;20:12;5:2;22467:18:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22467:18:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22467:18:0;;-1:-1:-1;22516:26:0;;;;;:55;;-1:-1:-1;22546:25:0;;;22516:55;22495:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22687:7;22650:34;22658:12;22672:11;22650:7;:34::i;:::-;:44;;;;;;;;22644:50;;22086:631;;;;;;;:::o;12093:435::-;12201:19;12234:17;12265:13;12307;12324:29;12346:6;12324:21;:29::i;:::-;12303:50;;;12387:11;:9;:11::i;:::-;12377:41;;;12419:5;12377:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12377:48:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12377:48:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12377:48:0;;-1:-1:-1;12457:11:0;:9;:11::i;:::-;12447:29;;;:31;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12447:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12447:31:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12447:31:0;12496:13;;;;;;;;:6;12447:31;12496:13;;;;:25;12093:435;;12447:31;;-1:-1:-1;12093:435:0;-1:-1:-1;;12093:435:0:o;13256:1700::-;13355:17;13374:25;13415:21;13438:22;13453:6;13438:14;:22::i;:::-;13415:45;;13471:16;13489:19;13510:17;13531:36;13560:6;13531:28;:36::i;:::-;13470:97;;;;;;13578:22;13606:29;13628:6;13606:21;:29::i;:::-;13577:58;;;13646:19;13667:17;13686:19;13709:30;13732:6;13709:22;:30::i;:::-;13645:94;;-1:-1:-1;13645:94:0;-1:-1:-1;13645:94:0;-1:-1:-1;13749:23:0;;13927:6;13645:94;13847:65;13868:9;13645:94;13847:7;:65::i;:::-;:77;:86;;;;;;;;13829:104;;14105:13;14094:8;:24;:243;;14331:6;14125:192;14243:7;14146:94;14183:13;14172:8;:24;14215:11;14146:7;:94::i;:::-;:104;;;;;;;;14296:11;14125:7;:192::i;:::-;14320:8;14125:203;:212;;;;;;;;14094:243;;;14121:1;14094:243;14071:266;;14348:20;14585:7;14527:55;14556:14;14572:9;14527:28;:55::i;:::-;14503:11;14385:115;14410:15;14443:27;14451:5;14458:11;14443:7;:27::i;:::-;14385:7;:115::i;:::-;:129;;;;;;;;14371:211;:221;;;;;;;;14348:244;;14829:7;14771:55;14800:14;14816:9;14771:28;:55::i;:::-;14670:98;14691:42;14699:20;14721:11;14691:7;:42::i;:::-;14747:11;14670:7;:98::i;:::-;:156;:166;;;;;;;;14650:186;;14859:90;14889:6;14897:9;14908:40;14916:17;14935:12;14908:7;:40::i;:::-;14859:29;:90::i;:::-;14847:102;;13256:1700;;;;;;;;;;;;;;:::o;20978:296::-;21118:13;;21172:23;;;;;;;;;;;;;;21059:4;;21118:13;;;21059:4;;21118:13;;21172:15;;:23;;;;;21059:4;;21172:23;;;;;;;21118:13;21172:23;;;5:2:-1;;;;30:1;27;20:12;5:2;21172:23:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21172:23:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;21172:23:0;80:15:-1;;;97:9;76:31;65:43;;120:4;113:20;13:3;5:12;;2:2;;;30:1;27;20:12;2:2;21172:23:0;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;21172:23:0;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;21142:53:0;;-1:-1:-1;;;21209:21:0;;;;;-1:-1:-1;21205:63:0;;-1:-1:-1;;;21205:63:0;21253:4;21246:11;;;;;;21205:63;20978:296;;;;;:::o;12643:174::-;12711:7;12734:15;12762:16;;;;;;;;;;;12734:45;;12796:5;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12796:14:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12796:14:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12796:14:0;;-1:-1:-1;;12643:174:0;:::o;59:161:4:-;121:7;152:5;;;174:6;;;:20;;;193:1;188;184;:5;;;;;;;;:10;174:20;167:28;;;;;;212:1;-1:-1:-1;59:161:4;;;;;:::o;15604:2388:0:-;15749:7;15797:37;;;;15889:27;;;;;:57;;;15938:8;15920:14;:26;;15889:57;15885:139;;;15962:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15885:139;16315:10;16302:9;16285:14;16275:7;:24;:36;;;;;;;;:50;16271:1715;;16376:9;16359:14;16349:7;:24;:36;;;;;;;;16341:45;;;;;16271:1715;16448:10;16435:9;16418:14;16408:7;:24;:36;;;;;;;;:50;16404:1582;;16527:4;16509:9;16492:14;16482:7;:24;:36;;;;;;;;16521:3;16482:42;:49;;;;;;16404:1582;16594:10;16581:9;16564:14;16554:7;:24;:36;;;;;;;;:50;16550:1436;;16673:4;16655:9;16638:14;16628:7;:24;:36;;;;;;;;16667:3;16628:42;:49;;;;;;16550:1436;16740:10;16727:9;16710:14;16700:7;:24;:36;;;;;;;;:50;16696:1290;;16819:4;16801:9;16784:14;16774:7;:24;:36;;;;;;;;16813:3;16774:42;:49;;;;;;16696:1290;16886:10;16873:9;16856:14;16846:7;:24;:36;;;;;;;;:50;16842:1144;;16965:4;16947:9;16930:14;16920:7;:24;:36;;;;;;;;16959:3;16920:42;:49;;;;;;16842:1144;17032:10;17019:9;17002:14;16992:7;:24;:36;;;;;;;;:50;16988:998;;17111:4;17093:9;17076:14;17066:7;:24;:36;;;;;;;;17105:3;17066:42;:49;;;;;;16988:998;17178:10;17165:9;17148:14;17138:7;:24;:36;;;;;;;;:50;17134:852;;17257:4;17239:9;17222:14;17212:7;:24;:36;;;;;;;;17251:3;17212:42;:49;;;;;;17134:852;17324:9;17311;17294:14;17284:7;:24;:36;;;;;;;;:49;17280:706;;17402:4;17384:9;17367:14;17357:7;:24;:36;;;;;;;;17396:3;17357:42;:49;;;;;;17280:706;17469:9;17456;17439:14;17429:7;:24;:36;;;;;;;;:49;17425:561;;17547:4;17529:9;17512:14;17502:7;:24;:36;;;;;;;;17541:3;17502:42;:49;;;;;;17425:561;17614:9;17601;17584:14;17574:7;:24;:36;;;;;;;;:49;17570:416;;17692:4;17674:9;17657:14;17647:7;:24;:36;;;;;;;;17686:3;17647:42;:49;;;;;;17570:416;17759:9;17746;17729:14;17719:7;:24;:36;;;;;;;;:49;17715:271;;17837:4;17819:9;17802:14;17792:7;:24;:36;;;;;;;;17831:3;17792:42;:49;;;;;;17715:271;17934:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;414:124:4;476:7;502:6;;;;495:14;;;;-1:-1:-1;526:5:4;;;414:124::o;226:182::-;288:7;314:5;;;307:13;;;;330:9;346:1;342;:5;;;;;;;;330:17;;381:1;377;:5;;;;;;;;373:1;369;:5;:13;364:1;:18;357:26;;;;;544:153;606:7;637:5;;;659:4;;;;;;:12;;-1:-1:-1;667:4:4;;;;652:20;;;18267:2565:0;18772:13;;18758:43;;;;;;;;;;;;;;18426:7;;;;18772:13;;;;;18758:35;;:43;;;;;18426:7;;18758:43;;;;;;;;18772:13;18758:43;;;5:2:-1;;;;30:1;27;20:12;5:2;18758:43:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18758:43:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;18758:43:0;80:15:-1;;;97:9;76:31;65:43;;120:4;113:20;13:3;5:12;;2:2;;;30:1;27;20:12;2:2;18758:43:0;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;18758:43:0;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;18811:31:0;18855:16;;18758:43;18883:28;;;;;;;18721:80;;-1:-1:-1;18811:31:0;;18927:8;;-1:-1:-1;18915:9:0;;-1:-1:-1;18855:16:0;;;;;;;;-1:-1:-1;18845:37:0;;-1:-1:-1;18883:26:0;;;;-1:-1:-1;18883:26:0;;:28;;;;;18758:43;;18883:28;;;;;;;;:26;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;18883:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18883:28:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18883:28:0;18845:67;;;;;;;;;;;;;;;;;;;;;;;;18883:28;;18845:67;;;;;;;;;;;5:2:-1;;;;30:1;27;20:12;5:2;18845:67:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18845:67:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18845:67:0;:79;:90;;;;;;;;18811:124;;19298:11;:9;:11::i;:::-;19288:33;;;:35;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19288:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19288:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19288:35:0;19262:61;;19258:126;;;19339:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19258:126;19498:30;;;19494:1332;;19551:23;-1:-1:-1;19544:30:0;;-1:-1:-1;19544:30:0;19494:1332;19711:10;19684:23;19678:3;19668:7;:13;:39;;;;;;;;:53;19664:1162;;19777:4;19771:3;19745:29;;:36;;19737:45;;;;;;19664:1162;19847:10;19820:23;19814:3;19804:7;:13;:39;;;;;;;;:53;19800:1026;;19913:4;19907:3;19881:29;;:36;;19800:1026;19983:10;19956:23;19950:3;19940:7;:13;:39;;;;;;;;:53;19936:890;;20049:4;20043:3;20017:29;;:36;;19936:890;20119:10;20092:23;20086:3;20076:7;:13;:39;;;;;;;;:53;20072:754;;20185:4;20179:3;20153:29;;:36;;20072:754;20255:10;20228:23;20222:3;20212:7;:13;:39;;;;;;;;:53;20208:618;;20321:4;20315:3;20289:29;;:36;;20208:618;20391:9;20364:23;20358:3;20348:7;:13;:39;;;;;;;;:52;20344:482;;20455:4;20450:2;20424:28;;:35;;20344:482;20525:8;20498:23;20492:3;20482:7;:13;:39;;;;;;;;:51;20478:348;;20588:4;20583:2;20557:28;;:35;;20478:348;20659:8;20632:23;20626:3;20615:8;:14;:40;;;;;;;;:52;20611:215;;20721:4;20717:1;20691:27;;:34;;20611:215;20812:3;20805:10;;;;18267:2565;;;;;;:::o"
			}
		}
	},
	"sourceTreeHashHex": "0xe6996f3c73a8f9077f6683b37f52fbbaa00bdd7f108e93e18dfd914e25999716",
	"sources": {
		"./ProofOfPerformance.sol": {
			"id": 0
		},
		"../../utils/Pool/Pool.sol": {
			"id": 2
		},
		"../../utils/ReentrancyGuard/ReentrancyGuard.sol": {
			"id": 3
		},
		"../../utils/SafeMath/SafeMath.sol": {
			"id": 4
		},
		"./ProofOfPerformanceFace.sol": {
			"id": 1
		}
	},
	"sourceCodes": {
		"./ProofOfPerformance.sol": "/*\n\n Copyright 2017-2019 RigoBlock, Rigo Investment Sagl, 2020 Rigo Intl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\npragma solidity 0.5.4;\n\n//im port { IStaking } from \"../../staking/interfaces/IStaking.sol\";\nimport { Pool } from \"../../utils/Pool/Pool.sol\";\nimport { ReentrancyGuard } from \"../../utils/ReentrancyGuard/ReentrancyGuard.sol\";\nimport { SafeMath } from \"../../utils/SafeMath/SafeMath.sol\";\nimport { ProofOfPerformanceFace } from \"./ProofOfPerformanceFace.sol\";\n\ncontract Inflation {\n\n    uint256 public period;\n    uint256 public minimumGRG;\n\n    /*\n     * CORE FUNCTIONS\n     */\n    function mintInflation(address _thePool, uint256 _reward) external returns (bool);\n    function setInflationFactor(address _group, uint256 _inflationFactor) external;\n    function setMinimumRigo(uint256 _minimum) external;\n    function setRigoblock(address _newRigoblock) external;\n    function setAuthority(address _authority) external;\n    function setProofOfPerformance(address _pop) external;\n    function setPeriod(uint256 _newPeriod) external;\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    function canWithdraw(address _thePool) external view returns (bool);\n    function timeUntilClaim(address _thePool) external view returns (uint256);\n    function getInflationFactor(address _group) external view returns (uint256);\n}\n\ncontract RigoToken {\n    address public minter;\n    uint256 public totalSupply;\n\n    function balanceOf(address _who) external view returns (uint256);\n}\n\ninterface DragoRegistry {\n\n    //EVENTS\n\n    event Registered(string name, string symbol, uint256 id, address indexed drago, address indexed owner, address indexed group);\n    event Unregistered(string indexed name, string indexed symbol, uint256 indexed id);\n    event MetaChanged(uint256 indexed id, bytes32 indexed key, bytes32 value);\n\n    /*\n     * CORE FUNCTIONS\n     */\n    function register(address _drago, string calldata _name, string calldata _symbol, uint256 _dragoId, address _owner) external payable returns (bool);\n    function unregister(uint256 _id) external;\n    function setMeta(uint256 _id, bytes32 _key, bytes32 _value) external;\n    function addGroup(address _group) external;\n    function setFee(uint256 _fee) external;\n    function updateOwner(uint256 _id) external;\n    function updateOwners(uint256[] calldata _id) external;\n    function upgrade(address _newAddress) external payable; //payable as there is a transfer of value, otherwise opcode might throw an error\n    function setUpgraded(uint256 _version) external;\n    function drain() external;\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    function dragoCount() external view returns (uint256);\n    function fromId(uint256 _id) external view returns (address drago, string memory name, string memory symbol, uint256 dragoId, address owner, address group);\n    function fromAddress(address _drago) external view returns (uint256 id, string memory name, string memory symbol, uint256 dragoId, address owner, address group);\n    function fromName(string calldata _name) external view returns (uint256 id, address drago, string memory symbol, uint256 dragoId, address owner, address group);\n    function getNameFromAddress(address _pool) external view returns (string memory);\n    function getSymbolFromAddress(address _pool) external view returns (string memory);\n    function meta(uint256 _id, bytes32 _key) external view returns (bytes32);\n    function getGroups() external view returns (address[] memory);\n    function getFee() external view returns (uint256);\n}\n\n/// @title Proof of Performance - Controls parameters of inflation.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n// solhint-disable-next-line\ncontract ProofOfPerformance is\n    SafeMath,\n    ReentrancyGuard,\n    ProofOfPerformanceFace\n{\n    address public RIGOTOKENADDRESS;\n    //address public STAKINGCONTRACTADDRESS;\n\n    address public dragoRegistry;\n    address public rigoblockDao;\n\n    mapping (uint256 => PoolPrice) poolPrice;\n    mapping (address => Group) groups;\n\n    struct PoolPrice {\n        uint256 highwatermark;\n    }\n\n    struct Group {\n        uint256 rewardRatio;\n    }\n\n    modifier onlyRigoblockDao() {\n        require(\n            msg.sender == rigoblockDao,\n            \"ONLY_RIGOBLOCK_DAO\"\n        );\n        _;\n    }\n\n    constructor(\n        address _rigoTokenAddress,\n        address _rigoblockDao,\n        address _dragoRegistry)\n        //address _stakingContractAddress)\n        public\n    {\n        RIGOTOKENADDRESS = _rigoTokenAddress;\n        rigoblockDao = _rigoblockDao;\n        dragoRegistry = _dragoRegistry;\n        //STAKINGCONTRACTADDRESS = _stakingContractAddress;\n    }\n\n    /*\n     * CORE FUNCTIONS\n     */\n    /// @dev Allows anyone to allocate the pop reward to pool wizards.\n    /// @param poolId Number of pool id in registry.\n    function claimPop(uint256 poolId)\n        external\n        nonReentrant\n    {\n        DragoRegistry registry = DragoRegistry(dragoRegistry);\n        address poolAddress;\n        (poolAddress, , , , , ) = registry.fromId(poolId);\n        (uint256 pop, ) = proofOfPerformanceInternal(poolId);\n        require(\n            pop > 0,\n            \"POP_REWARD_IS_NULL\"\n        );\n        uint256 price = Pool(poolAddress).calcSharePrice();\n        poolPrice[poolId].highwatermark = price;\n        require(\n            Inflation(getMinter()).mintInflation(poolAddress, pop),\n            \"MINT_INFLATION_ERROR\"\n        );\n    }\n\n    /// @dev Allows RigoBlock Dao to update the pools registry.\n    /// @param _dragoRegistry Address of new registry.\n    function setRegistry(address _dragoRegistry)\n        external\n        onlyRigoblockDao\n    {\n        dragoRegistry = _dragoRegistry;\n    }\n\n    /// @dev Allows RigoBlock Dao to update its address.\n    /// @param _rigoblockDao Address of new dao.\n    function setRigoblockDao(address _rigoblockDao)\n        external\n        onlyRigoblockDao\n    {\n        rigoblockDao = _rigoblockDao;\n    }\n\n    /// @dev Allows RigoBlock Dao to set the ratio between assets and performance reward for a group.\n    /// @param _ofGroup Id of the pool.\n    /// @param _ratio Id of the pool.\n    /// @notice onlyRigoblockDao can set ratio.\n    function setRatio(\n        address _ofGroup,\n        uint256 _ratio)\n        external\n        onlyRigoblockDao\n    {\n        require(\n            _ratio <= 10000,\n            \"RATIO_BIGGER_THAN_10000\"\n        ); //(from 0 to 10000)\n        groups[_ofGroup].rewardRatio = _ratio;\n    }\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    /// @dev Gets data of a pool.\n    /// @param poolId Id of the pool.\n    /// @return active Bool the pool is active.\n    /// @return thePoolAddress address of the pool.\n    /// @return thePoolGroup address of the pool factory.\n    /// @return thePoolPrice price of the pool in wei.\n    /// @return thePoolSupply total supply of the pool in units.\n    /// @return poolValue total value of the pool in wei.\n    /// @return epochReward value of the reward factor or said pool.\n    /// @return ratio of assets/performance reward (from 0 to 10000).\n    /// @return pop value of the pop reward to be claimed in GRGs.\n    function getPoolData(uint256 poolId)\n        external\n        view\n        returns (\n            bool active,\n            address thePoolAddress,\n            address thePoolGroup,\n            uint256 thePoolPrice,\n            uint256 thePoolSupply,\n            uint256 poolValue,\n            uint256 epochReward,\n            uint256 ratio,\n            uint256 pop\n        )\n    {\n        active = isActiveInternal(poolId);\n        (thePoolAddress, thePoolGroup) = addressFromIdInternal(poolId);\n        (thePoolPrice, thePoolSupply, poolValue) = getPoolPriceAndValueInternal(poolId);\n        (epochReward, , ratio) = getInflationParameters(poolId);\n        (pop, ) = proofOfPerformanceInternal(poolId);\n        return(\n            active,\n            thePoolAddress,\n            thePoolGroup,\n            thePoolPrice,\n            thePoolSupply,\n            poolValue,\n            epochReward,\n            ratio,\n            pop\n        );\n    }\n\n    /// @dev Returns the highwatermark of a pool.\n    /// @param poolId Id of the pool.\n    /// @return Value of the all-time-high pool nav.\n    function getHwm(uint256 poolId)\n        external\n        view\n        returns (uint256)\n    {\n        return (getHwmInternal(poolId));\n    }\n\n    /// @dev Returns the reward factor for a pool.\n    /// @param poolId Id of the pool.\n    /// @return Value of the reward factor.\n    function getEpochReward(uint256 poolId)\n        external\n        view\n        returns (uint256)\n    {\n        (uint256 epochReward, , ) = getInflationParameters(poolId);\n        return epochReward;\n    }\n\n    /// @dev Returns the split ratio of asset and performance reward.\n    /// @param poolId Id of the pool.\n    /// @return Value of the ratio from 1 to 100.\n    function getRatio(uint256 poolId)\n        external\n        view\n        returns (uint256)\n    {\n        ( , , uint256 ratio) = getInflationParameters(poolId);\n        return ratio;\n    }\n\n    /// @dev Returns the proof of performance reward for a pool.\n    /// @param poolId Id of the pool.\n    /// @return popReward Value of the pop reward in Rigo tokens.\n    /// @return performanceReward Split of the performance reward in Rigo tokens.\n    /// @notice epoch reward should be big enough that it.\n    /// @notice can be decreased if number of funds increases.\n    /// @notice should be at least 10^6 (just as pool base) to start with.\n    /// @notice rigo token has 10^18 decimals.\n    function proofOfPerformance(uint256 poolId)\n        external\n        view\n        returns (uint256 popReward, uint256 performanceReward)\n    {\n        return proofOfPerformanceInternal(poolId);\n    }\n\n    /// @dev Checks whether a pool is registered and active.\n    /// @param poolId Id of the pool.\n    /// @return Bool the pool is active.\n    function isActive(uint256 poolId)\n        external\n        view\n        returns (bool)\n    {\n        return isActiveInternal(poolId);\n    }\n\n    /// @dev Returns the address and the group of a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return pool Address of the target pool.\n    /// @return group Address of the pool's group.\n    function addressFromId(uint256 poolId)\n        external\n        view\n        returns (\n            address pool,\n            address group\n        )\n    {\n        return (addressFromIdInternal(poolId));\n    }\n\n    /// @dev Returns the price a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return thePoolPrice Price of the pool in wei.\n    /// @return totalTokens Number of tokens of a pool (totalSupply).\n    function getPoolPrice(uint256 poolId)\n        external\n        view\n        returns (\n            uint256 thePoolPrice,\n            uint256 totalTokens\n        )\n    {\n        (thePoolPrice, totalTokens, ) = getPoolPriceAndValueInternal(poolId);\n    }\n\n    /// @dev Returns the value of a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return aum Total value of the pool in ETH.\n    function calcPoolValue(uint256 poolId)\n        external\n        view\n        returns (\n            uint256 aum\n        )\n    {\n        ( , , aum) = getPoolPriceAndValueInternal(poolId);\n    }\n\n    /*\n     * INTERNAL FUNCTIONS\n     */\n    /// @dev Returns the split ratio of asset and performance reward.\n    /// @param poolId Id of the pool.\n    /// @return epochReward Value of the reward factor.\n    /// @return epochTime Value of epoch time.\n    /// @return ratio Value of the ratio from 1 to 100.\n    function getInflationParameters(uint256 poolId)\n        internal\n        view\n        returns (\n            uint256 epochReward,\n            uint256 epochTime,\n            uint256 ratio\n        )\n    {\n        ( , address group) = addressFromIdInternal(poolId);\n        epochReward = Inflation(getMinter()).getInflationFactor(group);\n        epochTime = Inflation(getMinter()).period();\n        ratio = groups[group].rewardRatio;\n    }\n\n    /// @dev Returns the address of the Inflation contract.\n    /// @return Address of the minter/inflation.\n    function getMinter()\n        internal\n        view\n        returns (address)\n    {\n        RigoToken token = RigoToken(RIGOTOKENADDRESS);\n        return token.minter();\n    }\n\n    /// @dev Returns the proof of performance reward for a pool.\n    /// @param poolId Id of the pool.\n    /// @return popReward Value of the pop reward in Rigo tokens.\n    /// @return performanceReward Split of the performance reward in Rigo tokens.\n    /// @notice epoch reward should be big enough that it  can be decreased when number of funds increases\n    /// @notice should be at least 10^6 (just as pool base) to start with.\n    function proofOfPerformanceInternal(uint256 poolId)\n        internal\n        view\n        returns (uint256 popReward, uint256 performanceReward)\n    {\n        uint256 highwatermark= getHwmInternal(poolId);\n        (uint256 newPrice, uint256 tokenSupply, uint256 poolValue) = getPoolPriceAndValueInternal(poolId);\n        (address thePoolAddress, ) = addressFromIdInternal(poolId);\n        (uint256 epochReward, uint256 epochTime, uint256 rewardRatio) = getInflationParameters(poolId);\n        uint256 assetsComponent = 0;\n        uint256 performanceComponent = 0;\n\n        assetsComponent = safeMul(\n            poolValue,\n            epochReward\n        ) * epochTime / 1 days; // proportional to epoch time\n\n        // TODO: test new logic of only performance component null if price below high watermark\n        performanceComponent = newPrice < highwatermark ? 0 : safeMul(\n            safeMul(\n                (newPrice - highwatermark),\n                tokenSupply\n            ) / 1000000, // Pool(thePoolAddress).BASE(),\n            epochReward\n        ) * 365 days / 1 days;\n\n        uint256 assetsReward = (\n            safeMul(\n                assetsComponent,\n                safeSub(10000, rewardRatio) // 10000 = 100%\n            ) / 10000 ether\n        ) * ethBalanceAdjustmentInternal(thePoolAddress, poolValue) / 1 ether; // reward inversly proportional to Eth in pool\n\n        performanceReward = safeDiv(\n            safeMul(performanceComponent, rewardRatio),\n            10000 ether\n        ) * ethBalanceAdjustmentInternal(thePoolAddress, poolValue) / 1 ether;\n\n        popReward = grgBalanceRewardSlashInternal(poolId, epochTime, safeAdd(performanceReward, assetsReward));\n    }\n\n    /// @dev Returns the high-watermark of the pool.\n    /// @param poolId Number of the pool in registry.\n    /// @return Number high-watermark.\n    function getHwmInternal(uint256 poolId)\n        internal\n        view\n        returns (uint256)\n    {\n        if (poolPrice[poolId].highwatermark == 0) {\n            return (1 ether);\n\n        } else {\n            return poolPrice[poolId].highwatermark;\n        }\n    }\n\n    /// @dev Returns the non-linear rewards adjustment by eth.\n    /// @param thePoolAddress Address of the pool.\n    /// @param poolValue Number of value of the pool in wei.\n    /// @return Number non-linear adjustment.\n    function ethBalanceAdjustmentInternal(\n        address thePoolAddress,\n        uint256 poolValue)\n        internal\n        view\n        returns (uint256)\n    {\n        uint256 poolEthBalance = address(Pool(thePoolAddress)).balance;\n        // prevent dust from small pools\n        if (poolEthBalance >= poolValue || poolEthBalance <= 1 finney) {\n            revert('ETH_BALANCE_HIGHER_THAN_AUM_OR_DUST_ERROR');\n        }\n\n        // TODO: double check whether we are slashing twice (can potentially save some gas)\n        // logistic function progression g(x)=e^x/(1+e^x).\n        // rebased on (poolEthBalance / poolValue) ∈ [0.125:0.6], x ∈ [-1.9:2.8].\n        if (1 ether * poolEthBalance / poolValue >= 800 finney) {\n            return (1 ether * poolEthBalance / poolValue);\n\n        } else if (1 ether * poolEthBalance / poolValue >= 600 finney) {\n            return (1 ether * poolEthBalance / poolValue * 943 / 1000);\n\n        } else if (1 ether * poolEthBalance / poolValue >= 500 finney) {\n            return (1 ether * poolEthBalance / poolValue * 881 / 1000);\n\n        } else if (1 ether * poolEthBalance / poolValue >= 400 finney) {\n            return (1 ether * poolEthBalance / poolValue * 769 / 1000);\n\n        } else if (1 ether * poolEthBalance / poolValue >= 300 finney) {\n            return (1 ether * poolEthBalance / poolValue * 599 / 1000);\n\n        } else if (1 ether * poolEthBalance / poolValue >= 200 finney) {\n            return (1 ether * poolEthBalance / poolValue * 401 / 1000);\n\n        } else if (1 ether * poolEthBalance / poolValue >= 100 finney) {\n            return (1 ether * poolEthBalance / poolValue * 231 / 1000);\n\n        } else if (1 ether * poolEthBalance / poolValue >= 75 finney) {\n            return (1 ether * poolEthBalance / poolValue * 198 / 1000);\n\n        } else if (1 ether * poolEthBalance / poolValue >= 50 finney) {\n            return (1 ether * poolEthBalance / poolValue * 168 / 1000);\n\n        } else if (1 ether * poolEthBalance / poolValue >= 38 finney) {\n            return (1 ether * poolEthBalance / poolValue * 155 / 1000);\n\n        } else if (1 ether * poolEthBalance / poolValue >= 25 finney) {\n            return (1 ether * poolEthBalance / poolValue * 142 / 1000);\n\n        } else { // reward is 0 for any pool not backed by at least 2.5% eth\n            revert('ETH_BELOW_2.5_PERCENT_AUM_ERROR');\n        }\n    }\n\n    /// @dev Returns the non-linear rewards adjustment by grg operator balance.\n    /// @param poolId Id of the pool.\n    /// @param epochTime Length of an epoch in seconds.\n    /// @param pop Number of preliminary reward.\n    /// @return Number non-linear adjustment.\n    function grgBalanceRewardSlashInternal(\n        uint256 poolId,\n        uint256 epochTime,\n        uint256 pop)\n        internal\n        view\n        returns (uint256)\n    {\n        // TODO: fix code\n        //previous code\n        //uint256 operatorGrgBalance = RigoToken(RIGOTOKENADDRESS).balanceOf(Pool(thePoolAddress).owner());\n        //uint256 grgTotalSupply = RigoToken(RIGOTOKENADDRESS).totalSupply();\n\n        //mock variable definition\n        (address thePoolAddress, , , , , ) = DragoRegistry(dragoRegistry).fromId(poolId);\n        uint256 stakedGrgRebasedOnEpoch = RigoToken(RIGOTOKENADDRESS).balanceOf(Pool(thePoolAddress).owner()) * epochTime / 365 days;\n\n        // TODO: getTotalStakeDelegatedToPool should be called from staking contract\n        //next code\n        //uint256 stakedGrgRebasedOnEpoch = IStaking(STAKINGCONTRACTADDRESS).getTotalStakeDelegatedToPool(bytes32(poolId)).currentEpochBalance * epochTime / 365 days;\n        // ignore pools with dust stake\n        if (stakedGrgRebasedOnEpoch < Inflation(getMinter()).minimumGRG()) {\n            revert('STAKED_GRG_BELOW_MINIMUM');\n        }\n\n        // half-exponential progression with slashing factor = (pop/stakedGrgRebasedOnEpoch)^(2/3).\n        if (pop >= stakedGrgRebasedOnEpoch) {\n            return stakedGrgRebasedOnEpoch; // max single reward = stake / period, max 100% of staked GRG per year.\n\n        } else if (1 ether * pop / stakedGrgRebasedOnEpoch >= 800 finney) {\n            return (stakedGrgRebasedOnEpoch * 862 / 1000);\n\n        } else if (1 ether * pop / stakedGrgRebasedOnEpoch >= 600 finney) {\n            return (stakedGrgRebasedOnEpoch * 711 / 1000);\n\n        } else if (1 ether * pop / stakedGrgRebasedOnEpoch >= 300 finney) {\n            return (stakedGrgRebasedOnEpoch * 448 / 1000);\n\n        } else if (1 ether * pop / stakedGrgRebasedOnEpoch >= 200 finney) {\n            return (stakedGrgRebasedOnEpoch * 342 / 1000);\n\n        } else if (1 ether * pop / stakedGrgRebasedOnEpoch >= 100 finney) {\n            return (stakedGrgRebasedOnEpoch * 215 / 1000);\n\n        } else if (1 ether * pop / stakedGrgRebasedOnEpoch >= 10 finney) {\n            return (stakedGrgRebasedOnEpoch * 46 / 1000);\n\n        } else if (1 ether * pop / stakedGrgRebasedOnEpoch >= 5 finney) {\n            return (stakedGrgRebasedOnEpoch * 29 / 1000);\n\n        } else if (10 ether * pop / stakedGrgRebasedOnEpoch >= 5 finney) {\n            return (stakedGrgRebasedOnEpoch * 6 / 1000);\n\n        // all remaining values are overstaked\n        } else {\n            return pop;\n        }\n    }\n\n    /// @dev Checks whether a pool is registered and active.\n    /// @param poolId Id of the pool.\n    /// @return Bool the pool is active.\n    function isActiveInternal(uint256 poolId)\n        internal view\n        returns (bool)\n    {\n        DragoRegistry registry = DragoRegistry(dragoRegistry);\n        (address thePool, , , , , ) = registry.fromId(poolId);\n        if (thePool != address(0)) {\n            return true;\n        }\n    }\n\n    /// @dev Returns the address and the group of a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return pool Address of the target pool.\n    /// @return group Address of the pool's group.\n    function addressFromIdInternal(uint256 poolId)\n        internal\n        view\n        returns (\n            address pool,\n            address group\n        )\n    {\n        DragoRegistry registry = DragoRegistry(dragoRegistry);\n        (pool, , , , , group) = registry.fromId(poolId);\n        return (pool, group);\n    }\n\n    /// @dev Returns price, supply, aum of a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return thePoolPrice Price of the pool in wei.\n    /// @return totalTokens Number of tokens of a pool (totalSupply).\n    /// @return aum Address of the target pool.\n    function getPoolPriceAndValueInternal(uint256 poolId)\n        internal\n        view\n        returns (\n            uint256 thePoolPrice,\n            uint256 totalTokens,\n            uint256 aum\n        )\n    {\n        (address poolAddress, ) = addressFromIdInternal(poolId);\n        Pool pool = Pool(poolAddress);\n        thePoolPrice = pool.calcSharePrice();\n        totalTokens = pool.totalSupply();\n        require(\n            thePoolPrice != uint256(0) && totalTokens != uint256(0),\n            \"POOL_PRICE_OR_TOTAL_SUPPLY_NULL_ERROR\"\n        );\n        aum = safeMul(thePoolPrice, totalTokens) / 1000000; // pool.BASE();\n    }\n}\n",
		"../../utils/Pool/Pool.sol": "/*\n\n Copyright 2017-2018 RigoBlock, Rigo Investment Sagl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\npragma solidity >=0.4.22 <0.6.0;\n\n/// @title Pool Interface Contract - Interface of pool standard functions.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n/// @notice used in order to access public variable\ncontract Pool {\n\n    address public owner;\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    function balanceOf(address _who) external view returns (uint256);\n    function totalSupply() external view returns (uint256 totaSupply);\n    function getEventful() external view returns (address);\n    function getData() external view returns (string memory name, string memory symbol, uint256 sellPrice, uint256 buyPrice);\n    function calcSharePrice() external view returns (uint256);\n    function getAdminData() external view returns (address, address feeCollector, address dragodAO, uint256 ratio, uint256 transactionFee, uint32 minPeriod);\n}\n",
		"../../utils/ReentrancyGuard/ReentrancyGuard.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity >=0.4.22 <0.6.0;\n\ncontract ReentrancyGuard {\n\n    // Locked state of mutex\n    bool private locked = false;\n\n    /// @dev Functions with this modifer cannot be reentered. The mutex will be locked\n    ///      before function execution and unlocked after.\n    modifier nonReentrant() {\n        // Ensure mutex is unlocked\n        require(\n            !locked,\n            \"REENTRANCY_ILLEGAL\"\n        );\n\n        // Lock mutex before function call\n        locked = true;\n\n        // Perform function call\n        _;\n\n        // Unlock mutex after function call\n        locked = false;\n    }\n}\n",
		"../../utils/SafeMath/SafeMath.sol": "pragma solidity >=0.4.22 <0.6.0;\n\ncontract SafeMath {\n\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b > 0);\n        uint256 c = a / b;\n        assert(a == b * c + a % b);\n        return c;\n    }\n\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c>=a && c>=b);\n        return c;\n    }\n\n    function max64(uint64 a, uint64 b) internal pure returns (uint64) {\n        return a >= b ? a : b;\n    }\n\n    function min64(uint64 a, uint64 b) internal pure returns (uint64) {\n        return a < b ? a : b;\n    }\n\n    function max256(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    function min256(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}\n",
		"./ProofOfPerformanceFace.sol": "/*\n\n Copyright 2017-2019 RigoBlock, Rigo Investment Sagl, 2020 Rigo Intl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\npragma solidity >=0.4.22 <0.6.0;\n\n/// @title Proof of Performance Interface - Allows interaction with the PoP contract.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n// solhint-disable-next-line\ninterface ProofOfPerformanceFace {\n\n    /*\n     * CORE FUNCTIONS\n     */\n    /// @dev Allows anyone to allocate the pop reward to pool wizards.\n    /// @param poolId Number of pool id in registry.\n    function claimPop(uint256 poolId) external;\n\n    /// @dev Allows RigoBlock Dao to update the pools registry.\n    /// @param _dragoRegistry Address of new registry.\n    function setRegistry(address _dragoRegistry) external;\n\n    /// @dev Allows RigoBlock Dao to update its address.\n    /// @param _rigoblockDao Address of new dao.\n    function setRigoblockDao(address _rigoblockDao) external;\n\n    /// @dev Allows RigoBlock Dao to set the ratio between assets and performance reward for a group.\n    /// @param _ofGroup Id of the pool.\n    /// @param _ratio Id of the pool.\n    /// @notice onlyRigoblockDao can set ratio.\n    function setRatio(address _ofGroup, uint256 _ratio) external;\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    /// @dev Gets data of a pool.\n    /// @param poolId Id of the pool.\n    /// @return active Bool the pool is active.\n    /// @return thePoolAddress address of the pool.\n    /// @return thePoolGroup address of the pool factory.\n    /// @return thePoolPrice price of the pool in wei.\n    /// @return thePoolSupply total supply of the pool in units.\n    /// @return poolValue total value of the pool in wei.\n    /// @return epochReward value of the reward factor or said pool.\n    /// @return ratio of assets/performance reward (from 0 to 10000).\n    /// @return pop value of the pop reward to be claimed in GRGs.\n    function getPoolData(uint256 poolId)\n        external\n        view\n        returns (\n            bool active,\n            address thePoolAddress,\n            address thePoolGroup,\n            uint256 thePoolPrice,\n            uint256 thePoolSupply,\n            uint256 poolValue,\n            uint256 epochReward,\n            uint256 ratio,\n            uint256 pop\n        );\n\n    /// @dev Returns the highwatermark of a pool.\n    /// @param poolId Id of the pool.\n    /// @return Value of the all-time-high pool nav.\n    function getHwm(uint256 poolId) external view returns (uint256);\n\n    /// @dev Returns the reward factor for a pool.\n    /// @param poolId Id of the pool.\n    /// @return Value of the reward factor.\n    function getEpochReward(uint256 poolId)\n        external\n        view\n        returns (uint256);\n\n    /// @dev Returns the split ratio of asset and performance reward.\n    /// @param poolId Id of the pool.\n    /// @return Value of the ratio from 1 to 100.\n    function getRatio(uint256 poolId)\n        external\n        view\n        returns (uint256);\n\n    /// @dev Returns the proof of performance reward for a pool.\n    /// @param poolId Id of the pool.\n    /// @return popReward Value of the pop reward in Rigo tokens.\n    /// @return performanceReward Split of the performance reward in Rigo tokens.\n    /// @notice epoch reward should be big enough that it.\n    /// @notice can be decreased if number of funds increases.\n    /// @notice should be at least 10^6 (just as pool base) to start with.\n    /// @notice rigo token has 10^18 decimals.\n    function proofOfPerformance(uint256 poolId)\n        external\n        view\n        returns (uint256 popReward, uint256 performanceReward);\n\n    /// @dev Checks whether a pool is registered and active.\n    /// @param poolId Id of the pool.\n    /// @return Bool the pool is active.\n    function isActive(uint256 poolId)\n        external\n        view\n        returns (bool);\n\n    /// @dev Returns the address and the group of a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return pool Address of the target pool.\n    /// @return group Address of the pool's group.\n    function addressFromId(uint256 poolId)\n        external\n        view\n        returns (\n            address pool,\n            address group\n        );\n\n    /// @dev Returns the price a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return thePoolPrice Price of the pool in wei.\n    /// @return totalTokens Number of tokens of a pool (totalSupply).\n    function getPoolPrice(uint256 poolId)\n        external\n        view\n        returns (\n            uint256 thePoolPrice,\n            uint256 totalTokens\n        );\n\n    /// @dev Returns the value of a pool from its id.\n    /// @param poolId Id of the pool.\n    /// @return aum Total value of the pool in ETH.\n    function calcPoolValue(uint256 poolId)\n        external\n        view\n        returns (\n            uint256 aum\n        );\n}\n"
	},
	"compiler": {
		"name": "solc",
		"version": "0.5.4+commit.9549d8ff",
		"settings": {
			"remappings": [],
			"optimizer": {
				"enabled": true,
				"runs": 1000000
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap"
					]
				}
			}
		}
	},
	"chains": {}
}