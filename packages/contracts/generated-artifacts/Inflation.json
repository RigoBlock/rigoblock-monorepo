{
	"schemaVersion": "2.0.0",
	"contractName": "Inflation",
	"compilerOutput": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"name": "groupAddress",
						"type": "address"
					},
					{
						"name": "inflationFactor",
						"type": "uint256"
					}
				],
				"name": "setInflationFactor",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "newPeriod",
						"type": "uint256"
					}
				],
				"name": "setPeriod",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "slot",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "rigoblockDao",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "stakingPoolId",
						"type": "bytes32"
					}
				],
				"name": "timeUntilClaim",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "GRG_VAULT_ADDRESS",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "stakingPoolId",
						"type": "bytes32"
					}
				],
				"name": "canWithdraw",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "minimum",
						"type": "uint256"
					}
				],
				"name": "setMinimumRigo",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "newRigoblockDaoAddress",
						"type": "address"
					}
				],
				"name": "setRigoblock",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "authorityAddress",
						"type": "address"
					}
				],
				"name": "setAuthority",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "stakingPoolId",
						"type": "bytes32"
					},
					{
						"name": "reward",
						"type": "uint256"
					}
				],
				"name": "mintInflation",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "RIGOTOKENADDRESS",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "authority",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "groupAddress",
						"type": "address"
					}
				],
				"name": "getInflationFactor",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "popAddress",
						"type": "address"
					}
				],
				"name": "setProofOfPerformance",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "proofOfPerformance",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "period",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "minimumGRG",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"name": "_rigoTokenAddress",
						"type": "address"
					},
					{
						"name": "_grgVaultAddress",
						"type": "address"
					},
					{
						"name": "_proofOfPerformance",
						"type": "address"
					},
					{
						"name": "_authority",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			}
		],
		"devdoc": {
			"author": "Gabriele Rigo - <gab@rigoblock.com>",
			"methods": {
				"canWithdraw(bytes32)": {
					"details": "Returns whether a staking pool's reward can be claimed.",
					"params": {
						"stakingPoolId": "Address of the target pool."
					},
					"return": "Bool the wizard can claim."
				},
				"getInflationFactor(address)": {
					"details": "Return the reward factor for a group.",
					"params": {
						"groupAddress": "Address of the group."
					},
					"return": "Value of the reward factor."
				},
				"mintInflation(bytes32,uint256)": {
					"details": "Allows ProofOfPerformance to mint rewards.",
					"params": {
						"reward": "Number of reward in Rigo tokens.",
						"stakingPoolId": "String of the staking pool."
					},
					"return": "Bool the transaction executed correctly."
				},
				"setAuthority(address)": {
					"details": "Allows rigoblock dao to update the authority.",
					"params": {
						"authorityAddress": "Address of the authority."
					}
				},
				"setInflationFactor(address,uint256)": {
					"details": "Allows rigoblock dao to set the inflation factor for a group.",
					"params": {
						"groupAddress": "Address of the group/factory.",
						"inflationFactor": "Value of the reward factor."
					}
				},
				"setMinimumRigo(uint256)": {
					"details": "Allows rigoblock dao to set the minimum number of required tokens.",
					"params": {
						"minimum": "Number of minimum tokens."
					}
				},
				"setPeriod(uint256)": {
					"details": "Allows rigoblock dao to set the minimum time between reward collection.",
					"params": {
						"newPeriod": "Number of seconds between 2 rewards."
					}
				},
				"setProofOfPerformance(address)": {
					"details": "Allows rigoblock dao to update proof of performance.",
					"params": {
						"popAddress": "Address of the Proof of Performance contract."
					}
				},
				"setRigoblock(address)": {
					"details": "Allows rigoblock dao to upgrade its address.",
					"params": {
						"newRigoblockDaoAddress": "Address of the new rigoblock dao."
					}
				},
				"timeUntilClaim(bytes32)": {
					"details": "Returns how much time needed until next claim.",
					"params": {
						"stakingPoolId": "Address of the target pool."
					},
					"return": "Number in seconds."
				}
			},
			"title": "Inflation - Allows ProofOfPerformance to mint tokens."
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x60806040526201518060025568056bc75e2d631000006003553480156200002557600080fd5b506040516080806200122e8339810180604052620000479190810190620000ba565b60008054600160a060020a03958616600160a060020a03199182161790915560018054948616948216949094179093556007805484163317905560058054928516928416929092179091556006805491909316911617905562000143565b6000620000b3825162000124565b9392505050565b60008060008060808587031215620000d157600080fd5b6000620000df8787620000a5565b9450506020620000f287828801620000a5565b93505060406200010587828801620000a5565b92505060606200011887828801620000a5565b91505092959194509250565b6000620001318262000137565b92915050565b600160a060020a031690565b6110db80620001536000396000f3fe608060405234801561001057600080fd5b5060043610610153576000357c0100000000000000000000000000000000000000000000000000000000900480637a9e5e4b116100cf578063d410e0c21161009e578063e70eadc011610083578063e70eadc014610270578063ef78d4fd14610278578063ff54a8e01461028057610153565b8063d410e0c21461024a578063d9ed29aa1461025d57610153565b80637a9e5e4b146102145780637fa36e4014610227578063a6c9c4431461023a578063bf7e214f1461024257610153565b806342a86d65116101265780636fb70c761161010b5780636fb70c76146101ce57806374bab550146101ee5780637802815c1461020157610153565b806342a86d65146101b35780636ac91666146101c657610153565b8063020e0cdb146101585780630f3a9f651461016d5780631a88bc66146101805780633edd80c31461019e575b600080fd5b61016b610166366004610cc3565b610288565b005b61016b61017b366004610d1b565b6103ed565b610188610492565b6040516101959190610fa9565b60405180910390f35b6101a6610498565b6040516101959190610f72565b6101886101c1366004610d1b565b6104b4565b6101a66104e6565b6101e16101dc366004610d1b565b610502565b6040516101959190610f9b565b61016b6101fc366004610d1b565b610522565b61016b61020f366004610c7f565b6105bb565b61016b610222366004610c7f565b610653565b6101e1610235366004610d39565b6106eb565b6101a6610a9e565b6101a6610aba565b610188610258366004610c7f565b610ad6565b61016b61026b366004610c7f565b610afe565b6101a6610b96565b610188610bb2565b610188610bb8565b60075473ffffffffffffffffffffffffffffffffffffffff1633146102e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990611017565b60405180910390fd5b6006546040517fdcb7a3e0000000000000000000000000000000000000000000000000000000008152839173ffffffffffffffffffffffffffffffffffffffff1690819063dcb7a3e09061033a908590600401610f72565b60206040518083038186803b15801561035257600080fd5b505afa158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061038a9190810190610cfd565b15156103c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990610fe7565b505073ffffffffffffffffffffffffffffffffffffffff909116600090815260096020526040902055565b60075473ffffffffffffffffffffffffffffffffffffffff16331461043e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990611017565b62015180811015801561045557506301e133808111155b151561048d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990610ff7565b600255565b60045481565b60075473ffffffffffffffffffffffffffffffffffffffff1681565b6000818152600860205260408120600301544210156104e157506000818152600860205260409020600301545b919050565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60008181526008602052604081206003015442106104e1575060016104e1565b60075473ffffffffffffffffffffffffffffffffffffffff163314610573576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990611017565b68056bc75e2d631000008110156105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990610fc7565b600355565b60075473ffffffffffffffffffffffffffffffffffffffff16331461060c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990611017565b600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60075473ffffffffffffffffffffffffffffffffffffffff1633146106a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990611017565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60055460009073ffffffffffffffffffffffffffffffffffffffff16331461073f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990610fb7565b600083815260086020526040902060030154839042101561078c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990611007565b600154604080517fc4d8f237000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163c4d8f237916004808301926020929190829003018186803b1580156107f757600080fd5b505afa15801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061082f9190810190610ca5565b905060006301e133806002548373ffffffffffffffffffffffffffffffffffffffff16633e4ad732896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016108909190610fa9565b60606040518083038186803b1580156108a857600080fd5b505afa1580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108e09190810190610d58565b602001516bffffffffffffffffffffffff16028115156108fc57fe5b04905080851115610939576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990610fd7565b6000868152600860205260408082204260028083018290555401600390910155600480546001018155915460075491517f79c65068000000000000000000000000000000000000000000000000000000008152606460058a02049373ffffffffffffffffffffffffffffffffffffffff9283169384936379c65068936109c6939190921691879101610f80565b600060405180830381600087803b1580156109e057600080fd5b505af11580156109f4573d6000803e3d6000fd5b505060015473ffffffffffffffffffffffffffffffffffffffff80851693506379c65068925016610a258a86610bbe565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a5e929190610f80565b600060405180830381600087803b158015610a7857600080fd5b505af1158015610a8c573d6000803e3d6000fd5b5060019b9a5050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60065473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff1660009081526009602052604090205490565b60075473ffffffffffffffffffffffffffffffffffffffff163314610b4f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990611017565b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60055473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60035481565b600082821115610bca57fe5b508082035b92915050565b6000610be18235611057565b9392505050565b6000610be18251611057565b6000610be18251611062565b6000610be18235611067565b600060608284031215610c1e57600080fd5b610c286060611027565b90506000610c368484610c67565b8252506020610c4784848301610c73565b6020830152506040610c5b84828501610c73565b60408301525092915050565b6000610be18251611083565b6000610be18251611090565b600060208284031215610c9157600080fd5b6000610c9d8484610bd5565b949350505050565b600060208284031215610cb757600080fd5b6000610c9d8484610be8565b60008060408385031215610cd657600080fd5b6000610ce28585610bd5565b9250506020610cf385828601610c00565b9150509250929050565b600060208284031215610d0f57600080fd5b6000610c9d8484610bf4565b600060208284031215610d2d57600080fd5b6000610c9d8484610c00565b60008060408385031215610d4c57600080fd5b6000610ce28585610c00565b600060608284031215610d6a57600080fd5b6000610c9d8484610c0c565b610d7f81611057565b82525050565b610d7f81611062565b610d7f81611067565b6000610da460198361104e565b7f4f4e4c595f50524f4f465f4f465f504552464f524d414e434500000000000000815260200192915050565b6000610ddd601b8361104e565b7f4d494e494d554d5f4752475f42454c4f575f3130305f4552524f520000000000815260200192915050565b6000610e16602e8361104e565b7f5245574152445f48494745525f5448414e5f5354414b455f524542415345445f81527f4f4e5f45504f43485f4552524f52000000000000000000000000000000000000602082015260400192915050565b6000610e7560168361104e565b7f4e4f545f415050524f5645445f415554484f5249545900000000000000000000815260200192915050565b6000610eae60228361104e565b7f504552494f445f544f4f5f4c4f4e475f4f525f544f4f5f53484f52545f45525281527f4f52000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000610f0d600f8361104e565b7f54494d455f4e4f545f454e4f5547480000000000000000000000000000000000815260200192915050565b6000610f4660128361104e565b7f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000815260200192915050565b60208101610bcf8284610d76565b60408101610f8e8285610d76565b610be16020830184610d8e565b60208101610bcf8284610d85565b60208101610bcf8284610d8e565b60208082528101610bcf81610d97565b60208082528101610bcf81610dd0565b60208082528101610bcf81610e09565b60208082528101610bcf81610e68565b60208082528101610bcf81610ea1565b60208082528101610bcf81610f00565b60208082528101610bcf81610f39565b60405181810167ffffffffffffffff8111828210171561104657600080fd5b604052919050565b90815260200190565b6000610bcf8261106a565b151590565b90565b73ffffffffffffffffffffffffffffffffffffffff1690565b67ffffffffffffffff1690565b6bffffffffffffffffffffffff169056fea265627a7a723058206339e0cb3448e91b8eed83d89deb87e5ece625e108a55aef0e1e14d0d4085f336c6578706572696d656e74616cf50037",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x15180 PUSH1 0x2 SSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x80 DUP1 PUSH3 0x122E DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE PUSH3 0x47 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH3 0xBA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP6 DUP7 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP5 DUP7 AND SWAP5 DUP3 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x7 DUP1 SLOAD DUP5 AND CALLER OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 DUP5 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH3 0x143 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB3 DUP3 MLOAD PUSH3 0x124 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xDF DUP8 DUP8 PUSH3 0xA5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0xF2 DUP8 DUP3 DUP9 ADD PUSH3 0xA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x105 DUP8 DUP3 DUP9 ADD PUSH3 0xA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x118 DUP8 DUP3 DUP9 ADD PUSH3 0xA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x131 DUP3 PUSH3 0x137 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x10DB DUP1 PUSH3 0x153 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x153 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x7A9E5E4B GT PUSH2 0xCF JUMPI DUP1 PUSH4 0xD410E0C2 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xE70EADC0 GT PUSH2 0x83 JUMPI DUP1 PUSH4 0xE70EADC0 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xFF54A8E0 EQ PUSH2 0x280 JUMPI PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH4 0xD410E0C2 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xD9ED29AA EQ PUSH2 0x25D JUMPI PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x7FA36E40 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xA6C9C443 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x242 JUMPI PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH4 0x42A86D65 GT PUSH2 0x126 JUMPI DUP1 PUSH4 0x6FB70C76 GT PUSH2 0x10B JUMPI DUP1 PUSH4 0x6FB70C76 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x74BAB550 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x7802815C EQ PUSH2 0x201 JUMPI PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH4 0x42A86D65 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x6AC91666 EQ PUSH2 0x1C6 JUMPI PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH4 0x20E0CDB EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xF3A9F65 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x1A88BC66 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x3EDD80C3 EQ PUSH2 0x19E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC3 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x188 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xF72 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x4E6 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xF9B JUMP JUMPDEST PUSH2 0x16B PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x16B PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0xABA JUMP JUMPDEST PUSH2 0x188 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xAD6 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0xB96 JUMP JUMPDEST PUSH2 0x188 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0x188 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0xDCB7A3E000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 SWAP1 PUSH4 0xDCB7A3E0 SWAP1 PUSH2 0x33A SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x38A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xCFD JUMP JUMPDEST ISZERO ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH3 0x15180 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x455 JUMPI POP PUSH4 0x1E13380 DUP2 GT ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x48D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0xFF7 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x4E1 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x4E1 JUMPI POP PUSH1 0x1 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x573 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 LT ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP4 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xC4D8F23700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0xC4D8F237 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x82F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0x1E13380 PUSH1 0x2 SLOAD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3E4AD732 DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x890 SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x8E0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL DUP2 ISZERO ISZERO PUSH2 0x8FC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x939 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 TIMESTAMP PUSH1 0x2 DUP1 DUP4 ADD DUP3 SWAP1 SSTORE SLOAD ADD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 ADD DUP2 SSTORE SWAP2 SLOAD PUSH1 0x7 SLOAD SWAP2 MLOAD PUSH32 0x79C6506800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x64 PUSH1 0x5 DUP11 MUL DIV SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND SWAP4 DUP5 SWAP4 PUSH4 0x79C65068 SWAP4 PUSH2 0x9C6 SWAP4 SWAP2 SWAP1 SWAP3 AND SWAP2 DUP8 SWAP2 ADD PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP4 POP PUSH4 0x79C65068 SWAP3 POP AND PUSH2 0xA25 DUP11 DUP7 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5E SWAP3 SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xB4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xBCA JUMPI INVALID JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP3 CALLDATALOAD PUSH2 0x1057 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP3 MLOAD PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP3 MLOAD PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP3 CALLDATALOAD PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC28 PUSH1 0x60 PUSH2 0x1027 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC36 DUP5 DUP5 PUSH2 0xC67 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0xC47 DUP5 DUP5 DUP4 ADD PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xC5B DUP5 DUP3 DUP6 ADD PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP3 MLOAD PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP3 MLOAD PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC9D DUP5 DUP5 PUSH2 0xBD5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC9D DUP5 DUP5 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCE2 DUP6 DUP6 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF3 DUP6 DUP3 DUP7 ADD PUSH2 0xC00 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC9D DUP5 DUP5 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC9D DUP5 DUP5 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCE2 DUP6 DUP6 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC9D DUP5 DUP5 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xD7F DUP2 PUSH2 0x1057 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD7F DUP2 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0xD7F DUP2 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 PUSH1 0x19 DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH32 0x4F4E4C595F50524F4F465F4F465F504552464F524D414E434500000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD PUSH1 0x1B DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH32 0x4D494E494D554D5F4752475F42454C4F575F3130305F4552524F520000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE16 PUSH1 0x2E DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH32 0x5245574152445F48494745525F5448414E5F5354414B455F524542415345445F DUP2 MSTORE PUSH32 0x4F4E5F45504F43485F4552524F52000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE75 PUSH1 0x16 DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH32 0x4E4F545F415050524F5645445F415554484F5249545900000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAE PUSH1 0x22 DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH32 0x504552494F445F544F4F5F4C4F4E475F4F525F544F4F5F53484F52545F455252 DUP2 MSTORE PUSH32 0x4F52000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0D PUSH1 0xF DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH32 0x54494D455F4E4F545F454E4F5547480000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF46 PUSH1 0x12 DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xBCF DUP3 DUP5 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xF8E DUP3 DUP6 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0xBE1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xBCF DUP3 DUP5 PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xBCF DUP3 DUP5 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xBCF DUP2 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xBCF DUP2 PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xBCF DUP2 PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xBCF DUP2 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xBCF DUP2 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xBCF DUP2 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xBCF DUP2 PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1046 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCF DUP3 PUSH2 0x106A JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH4 0x39E0CB34 0x48 0xe9 SHL DUP15 0xed DUP4 0xd8 SWAP14 0xeb DUP8 0xe5 0xec 0xe6 0x25 0xe1 ADDMOD 0xa5 GAS 0xef 0xe 0x1e EQ 0xd0 0xd4 ADDMOD 0x5f CALLER PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ",
				"sourceMap": "2306:6661:1:-;;;2466:6;2442:30;;2506:12;2478:40;;3711:382;8:9:-1;5:2;;;30:1;27;20:12;5:2;3711:382:1;;;;;;;;;;;;;;;;;;;;;;3887:16;:36;;-1:-1:-1;;;;;3887:36:1;;;-1:-1:-1;;;;;;3887:36:1;;;;;;;;3933;;;;;;;;;;;;;;;3979:12;:25;;;;3994:10;3979:25;;;4014:18;:40;;;;;;;;;;;;;;;4064:9;:22;;;;;;;;;;;2306:6661;;5:122:-1;;83:39;114:6;108:13;83:39;;;74:48;68:59;-1:-1;;;68:59;134:672;;;;;300:3;288:9;279:7;275:23;271:33;268:2;;;317:1;314;307:12;268:2;352:1;369:64;425:7;405:9;369:64;;;359:74;;331:108;470:2;488:64;544:7;535:6;524:9;520:22;488:64;;;478:74;;449:109;589:2;607:64;663:7;654:6;643:9;639:22;607:64;;;597:74;;568:109;708:2;726:64;782:7;773:6;762:9;758:22;726:64;;;716:74;;687:109;262:544;;;;;;;;813:105;;882:31;907:5;882:31;;;871:42;865:53;-1:-1;;865:53;925:128;-1:-1;;;;;994:54;;977:76;;2306:6661:1;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x153 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x7A9E5E4B GT PUSH2 0xCF JUMPI DUP1 PUSH4 0xD410E0C2 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xE70EADC0 GT PUSH2 0x83 JUMPI DUP1 PUSH4 0xE70EADC0 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xFF54A8E0 EQ PUSH2 0x280 JUMPI PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH4 0xD410E0C2 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xD9ED29AA EQ PUSH2 0x25D JUMPI PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x7FA36E40 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xA6C9C443 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x242 JUMPI PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH4 0x42A86D65 GT PUSH2 0x126 JUMPI DUP1 PUSH4 0x6FB70C76 GT PUSH2 0x10B JUMPI DUP1 PUSH4 0x6FB70C76 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x74BAB550 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x7802815C EQ PUSH2 0x201 JUMPI PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH4 0x42A86D65 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x6AC91666 EQ PUSH2 0x1C6 JUMPI PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH4 0x20E0CDB EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xF3A9F65 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x1A88BC66 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x3EDD80C3 EQ PUSH2 0x19E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC3 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x188 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xF72 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x4E6 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xF9B JUMP JUMPDEST PUSH2 0x16B PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x16B PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0xABA JUMP JUMPDEST PUSH2 0x188 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xAD6 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0xB96 JUMP JUMPDEST PUSH2 0x188 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0x188 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0xDCB7A3E000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 SWAP1 PUSH4 0xDCB7A3E0 SWAP1 PUSH2 0x33A SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x38A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xCFD JUMP JUMPDEST ISZERO ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH3 0x15180 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x455 JUMPI POP PUSH4 0x1E13380 DUP2 GT ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x48D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0xFF7 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x4E1 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x4E1 JUMPI POP PUSH1 0x1 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x573 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 LT ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP4 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xC4D8F23700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0xC4D8F237 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x82F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0x1E13380 PUSH1 0x2 SLOAD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3E4AD732 DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x890 SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x8E0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL DUP2 ISZERO ISZERO PUSH2 0x8FC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x939 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 TIMESTAMP PUSH1 0x2 DUP1 DUP4 ADD DUP3 SWAP1 SSTORE SLOAD ADD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 ADD DUP2 SSTORE SWAP2 SLOAD PUSH1 0x7 SLOAD SWAP2 MLOAD PUSH32 0x79C6506800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x64 PUSH1 0x5 DUP11 MUL DIV SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND SWAP4 DUP5 SWAP4 PUSH4 0x79C65068 SWAP4 PUSH2 0x9C6 SWAP4 SWAP2 SWAP1 SWAP3 AND SWAP2 DUP8 SWAP2 ADD PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP4 POP PUSH4 0x79C65068 SWAP3 POP AND PUSH2 0xA25 DUP11 DUP7 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5E SWAP3 SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xB4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xBCA JUMPI INVALID JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP3 CALLDATALOAD PUSH2 0x1057 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP3 MLOAD PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP3 MLOAD PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP3 CALLDATALOAD PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC28 PUSH1 0x60 PUSH2 0x1027 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC36 DUP5 DUP5 PUSH2 0xC67 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0xC47 DUP5 DUP5 DUP4 ADD PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xC5B DUP5 DUP3 DUP6 ADD PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP3 MLOAD PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP3 MLOAD PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC9D DUP5 DUP5 PUSH2 0xBD5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC9D DUP5 DUP5 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCE2 DUP6 DUP6 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF3 DUP6 DUP3 DUP7 ADD PUSH2 0xC00 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC9D DUP5 DUP5 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC9D DUP5 DUP5 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCE2 DUP6 DUP6 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC9D DUP5 DUP5 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xD7F DUP2 PUSH2 0x1057 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD7F DUP2 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0xD7F DUP2 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 PUSH1 0x19 DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH32 0x4F4E4C595F50524F4F465F4F465F504552464F524D414E434500000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD PUSH1 0x1B DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH32 0x4D494E494D554D5F4752475F42454C4F575F3130305F4552524F520000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE16 PUSH1 0x2E DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH32 0x5245574152445F48494745525F5448414E5F5354414B455F524542415345445F DUP2 MSTORE PUSH32 0x4F4E5F45504F43485F4552524F52000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE75 PUSH1 0x16 DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH32 0x4E4F545F415050524F5645445F415554484F5249545900000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAE PUSH1 0x22 DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH32 0x504552494F445F544F4F5F4C4F4E475F4F525F544F4F5F53484F52545F455252 DUP2 MSTORE PUSH32 0x4F52000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0D PUSH1 0xF DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH32 0x54494D455F4E4F545F454E4F5547480000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF46 PUSH1 0x12 DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xBCF DUP3 DUP5 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xF8E DUP3 DUP6 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0xBE1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xBCF DUP3 DUP5 PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xBCF DUP3 DUP5 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xBCF DUP2 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xBCF DUP2 PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xBCF DUP2 PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xBCF DUP2 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xBCF DUP2 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xBCF DUP2 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xBCF DUP2 PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1046 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCF DUP3 PUSH2 0x106A JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH4 0x39E0CB34 0x48 0xe9 SHL DUP15 0xed DUP4 0xd8 SWAP14 0xeb DUP8 0xe5 0xec 0xe6 0x25 0xe1 ADDMOD 0xa5 GAS 0xef 0xe 0x1e EQ 0xd0 0xd4 ADDMOD 0x5f CALLER PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ",
				"sourceMap": "2306:6661:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2306:6661:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5900:228;;;;;;;;;:::i;:::-;;7555:254;;;;;;;;;:::i;2524:19::-;;;:::i;:::-;;;;;;;;;;;;;;;;2618:27;;;:::i;:::-;;;;;;;;8401:247;;;;;;;;;:::i;2403:32::-;;;:::i;8032:211::-;;;;;;;;;:::i;:::-;;;;;;;;6263:231;;;;;;;;;:::i;6630:154::-;;;;;;;;;:::i;6907:139::-;;;;;;;;;:::i;4361:1341::-;;;;;;;;;:::i;2366:31::-;;;:::i;2588:24::-;;;:::i;8799:166::-;;;;;;;;;:::i;7190:145::-;;;;;;;;;:::i;2549:33::-;;;:::i;2442:30::-;;;:::i;2478:40::-;;;:::i;5900:228::-;3039:12;;;;3025:10;:26;3004:91;;;;;;;;;;;;;;;;;;;;;;3371:9;;3412:35;;;;;6043:12;;3371:9;;;;;3412:25;;:35;;6043:12;;3412:35;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3412:35:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3412:35:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3412:35:1;;;;;;;;;3391:104;;;;;;;;;;;;;;;;-1:-1:-1;;6071:20:1;;;;;;;;:6;:20;;;;;:50;5900:228::o;7555:254::-;3039:12;;;;3025:10;:26;3004:91;;;;;;;;;;;;;;7683:6;7670:9;:19;;:44;;;;;7706:8;7693:9;:21;;7670:44;7649:125;;;;;;;;;;;;;;;;7784:6;:18;7555:254::o;2524:19::-;;;;:::o;2618:27::-;;;;;;:::o;8401:247::-;8495:7;8540:25;;;:10;:25;;;;;:33;;;8522:15;:51;8518:124;;;-1:-1:-1;8597:25:1;;;;:10;:25;;;;;:33;;;8518:124;8401:247;;;:::o;2403:32::-;;;;;;:::o;8032:211::-;8123:4;8166:25;;;:10;:25;;;;;:33;;;8147:15;:52;8143:94;;-1:-1:-1;8222:4:1;8215:11;;6263:231;3039:12;;;;3025:10;:26;3004:91;;;;;;;;;;;;;;6392:12;6381:23;;;6360:97;;;;;;;;;;;;;;6467:10;:20;6263:231::o;6630:154::-;3039:12;;;;3025:10;:26;3004:91;;;;;;;;;;;;;;6740:12;:37;;;;;;;;;;;;;;;6630:154::o;6907:139::-;3039:12;;;;3025:10;:26;3004:91;;;;;;;;;;;;;;7011:9;:28;;;;;;;;;;;;;;;6907:139::o;4361:1341::-;3196:18;;4523:4;;3196:18;;3182:10;:32;3161:104;;;;;;;;;;;;;;3613:25;;;;:10;:25;;;;;:33;;;4491:13;;3594:15;:52;;3573:114;;;;;;;;;;;;;;4706:17;;4697:49;;;;;;;;4667:27;;4706:17;;;4697:47;;:49;;;;;;;;;;;;;;4706:17;4697:49;;;5:2:-1;;;;30:1;27;20:12;5:2;4697:49:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4697:49:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4697:49:1;;;;;;;;;4667:79;;4756:22;4894:8;4885:6;;4797:19;4789:57;;;4847:13;4789:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4789:72:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4789:72:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4789:72:1;;;;;;;;;:92;;;4781:101;;:110;:121;;;;;;;;;-1:-1:-1;5037:24:1;;;;5016:117;;;;;;;;;;;;;;5143:25;;;;:10;:25;;;;;;5181:15;5143:35;;;;:53;;;5260:6;5242:24;5206:33;;;;:60;5278:4;5276:6;;;;;;5409:16;;5556:12;;5536:53;;;;;5334:3;5330:1;5321:10;;:16;;5409;;;;;;;5536:19;;:53;;5556:12;;;;;5321:16;;5536:53;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5536:53:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5619:17:1;;5599:19;;;;;-1:-1:-1;5599:19:1;;-1:-1:-1;5619:17:1;5638:35;5646:6;5654:18;5638:7;:35::i;:::-;5599:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5599:75:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;5691:4:1;;4361:1341;-1:-1:-1;;;;;;;;;;;4361:1341:1:o;2366:31::-;;;;;;:::o;2588:24::-;;;;;;:::o;8799:166::-;8926:20;;8896:7;8926:20;;;:6;:20;;;;;:32;;8799:166::o;7190:145::-;3039:12;;;;3025:10;:26;3004:91;;;;;;;;;;;;;;7297:18;:31;;;;;;;;;;;;;;;7190:145::o;2549:33::-;;;;;;:::o;2442:30::-;;;;:::o;2478:40::-;;;;:::o;414:124:8:-;476:7;502:6;;;;495:14;;;;-1:-1:-1;526:5:8;;;414:124;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;130:122;;208:39;239:6;233:13;208:39;;259:116;;334:36;362:6;356:13;334:36;;382:118;;449:46;487:6;474:20;449:46;;543:691;;673:4;661:9;656:3;652:19;648:30;645:2;;;691:1;688;681:12;645:2;709:20;724:4;709:20;;;700:29;-1:-1;787:1;818:59;873:3;853:9;818:59;;;794:84;;-1:-1;954:2;987:59;1042:3;1018:22;;;987:59;;;980:4;973:5;969:16;962:85;899:159;1120:2;1153:59;1208:3;1199:6;1188:9;1184:22;1153:59;;;1146:4;1139:5;1135:16;1128:85;1068:156;639:595;;;;;1366:120;;1443:38;1473:6;1467:13;1443:38;;1493:120;;1570:38;1600:6;1594:13;1570:38;;1620:241;;1724:2;1712:9;1703:7;1699:23;1695:32;1692:2;;;1740:1;1737;1730:12;1692:2;1775:1;1792:53;1837:7;1817:9;1792:53;;;1782:63;1686:175;-1:-1;;;;1686:175;1868:263;;1983:2;1971:9;1962:7;1958:23;1954:32;1951:2;;;1999:1;1996;1989:12;1951:2;2034:1;2051:64;2107:7;2087:9;2051:64;;2138:366;;;2259:2;2247:9;2238:7;2234:23;2230:32;2227:2;;;2275:1;2272;2265:12;2227:2;2310:1;2327:53;2372:7;2352:9;2327:53;;;2317:63;;2289:97;2417:2;2435:53;2480:7;2471:6;2460:9;2456:22;2435:53;;;2425:63;;2396:98;2221:283;;;;;;2511:257;;2623:2;2611:9;2602:7;2598:23;2594:32;2591:2;;;2639:1;2636;2629:12;2591:2;2674:1;2691:61;2744:7;2724:9;2691:61;;2775:241;;2879:2;2867:9;2858:7;2854:23;2850:32;2847:2;;;2895:1;2892;2885:12;2847:2;2930:1;2947:53;2992:7;2972:9;2947:53;;3023:366;;;3144:2;3132:9;3123:7;3119:23;3115:32;3112:2;;;3160:1;3157;3150:12;3112:2;3195:1;3212:53;3257:7;3237:9;3212:53;;3396:323;;3541:2;3529:9;3520:7;3516:23;3512:32;3509:2;;;3557:1;3554;3547:12;3509:2;3592:1;3609:94;3695:7;3675:9;3609:94;;3974:120;4057:31;4082:5;4057:31;;;4052:3;4045:44;4039:55;;;4101:111;4178:28;4200:5;4178:28;;4219:120;4302:31;4327:5;4302:31;;4347:364;;4507:67;4571:2;4566:3;4507:67;;;4607:66;4587:87;;4702:2;4693:12;;4493:218;-1:-1;;4493:218;4720:364;;4880:67;4944:2;4939:3;4880:67;;;4980:66;4960:87;;5075:2;5066:12;;4866:218;-1:-1;;4866:218;5093:465;;5253:67;5317:2;5312:3;5253:67;;;5353:66;5333:87;;5454:66;5449:2;5440:12;;5433:88;5549:2;5540:12;;5239:319;-1:-1;;5239:319;5567:364;;5727:67;5791:2;5786:3;5727:67;;;5827:66;5807:87;;5922:2;5913:12;;5713:218;-1:-1;;5713:218;5940:465;;6100:67;6164:2;6159:3;6100:67;;;6200:66;6180:87;;6301:66;6296:2;6287:12;;6280:88;6396:2;6387:12;;6086:319;-1:-1;;6086:319;6414:364;;6574:67;6638:2;6633:3;6574:67;;;6674:66;6654:87;;6769:2;6760:12;;6560:218;-1:-1;;6560:218;6787:364;;6947:67;7011:2;7006:3;6947:67;;;7047:66;7027:87;;7142:2;7133:12;;6933:218;-1:-1;;6933:218;7286:213;7404:2;7389:18;;7418:71;7393:9;7462:6;7418:71;;7506:324;7652:2;7637:18;;7666:71;7641:9;7710:6;7666:71;;;7748:72;7816:2;7805:9;7801:18;7792:6;7748:72;;7837:201;7949:2;7934:18;;7963:65;7938:9;8001:6;7963:65;;8045:213;8163:2;8148:18;;8177:71;8152:9;8221:6;8177:71;;8265:407;8456:2;8470:47;;;8441:18;;8531:131;8441:18;8531:131;;8679:407;8870:2;8884:47;;;8855:18;;8945:131;8855:18;8945:131;;9093:407;9284:2;9298:47;;;9269:18;;9359:131;9269:18;9359:131;;9507:407;9698:2;9712:47;;;9683:18;;9773:131;9683:18;9773:131;;9921:407;10112:2;10126:47;;;10097:18;;10187:131;10097:18;10187:131;;10335:407;10526:2;10540:47;;;10511:18;;10601:131;10511:18;10601:131;;10749:407;10940:2;10954:47;;;10925:18;;11015:131;10925:18;11015:131;;11383:256;11445:2;11439:9;11471:17;;;11546:18;11531:34;;11567:22;;;11528:62;11525:2;;;11603:1;11600;11593:12;11525:2;11619;11612:22;11423:216;;-1:-1;11423:216;11647:163;11750:19;;;11799:4;11790:14;;11743:67;11818:105;;11887:31;11912:5;11887:31;;11930:92;12003:13;11996:21;;11979:43;12029:79;12098:5;12081:27;12115:128;12195:42;12184:54;;12167:76;12854:103;12933:18;12922:30;;12905:52;12964:111;13043:26;13032:38;;13015:60"
			}
		}
	},
	"sourceTreeHashHex": "0x548d1e8c34deb9f6249ab301ea14ef5583aa1e939cbcccc58916920fc76a7d13",
	"sources": {
		"./Inflation.sol": {
			"id": 1
		},
		"../../utils/Owned/Owned.sol": {
			"id": 5
		},
		"../../protocol/authorities/Authority/AuthorityFace.sol": {
			"id": 0
		},
		"../../utils/SafeMath/SafeMath.sol": {
			"id": 8
		},
		"./InflationFace.sol": {
			"id": 2
		}
	},
	"sourceCodes": {
		"./Inflation.sol": "/*\n\n Copyright 2017-2019 RigoBlock, Rigo Investment Sagl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\npragma solidity 0.5.4;\npragma experimental ABIEncoderV2;\n\nimport { Owned } from \"../../utils/Owned/Owned.sol\";\nimport { AuthorityFace as Authority } from \"../../protocol/authorities/Authority/AuthorityFace.sol\";\nimport { SafeMath } from \"../../utils/SafeMath/SafeMath.sol\";\nimport { InflationFace } from \"./InflationFace.sol\";\n\n\ninterface RigoToken {\n\n    function mintToken(address _recipient, uint256 _amount) external;\n    function changeMintingAddress(address _newAddress) external;\n    function changeRigoblockAddress(address _newAddress) external;\n\n    function balanceOf(address _who) external view returns (uint256);\n}\n\ninterface IStructs {\n    /// @dev Encapsulates a balance for the current and next epochs.\n    /// Note that these balances may be stale if the current epoch\n    /// is greater than `currentEpoch`.\n    /// @param currentEpoch The current epoch\n    /// @param currentEpochBalance Balance in the current epoch.\n    /// @param nextEpochBalance Balance in `currentEpoch+1`.\n    struct StoredBalance {\n        uint64 currentEpoch;\n        uint96 currentEpochBalance;\n        uint96 nextEpochBalance;\n    }\n}\n\ninterface Staking {\n\n    /// @dev Returns the total stake delegated to a specific staking pool,\n    ///      across all members.\n    /// @param poolId Unique Id of pool.\n    /// @return balance Total stake delegated to pool.\n    function getTotalStakeDelegatedToPool(bytes32 poolId)\n        external\n        view\n        returns (IStructs.StoredBalance memory balance);\n}\n\ncontract GrgVault {\n    address public stakingProxyAddress;\n}\n\n/// @title Inflation - Allows ProofOfPerformance to mint tokens.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n// solhint-disable-next-line\ncontract Inflation is\n    SafeMath,\n    InflationFace\n{\n    address public RIGOTOKENADDRESS;\n    address public GRG_VAULT_ADDRESS;\n\n    uint256 public period = 1 days;\n    uint256 public minimumGRG = 100 * 10**18;\n    uint256 public slot;\n    address public proofOfPerformance;\n    address public authority;\n    address public rigoblockDao;\n\n    mapping(bytes32 => Performer) performers;\n    mapping(address => Group) groups;\n\n    struct Performer {\n        uint256 claimedTokens;\n        mapping(uint256 => bool) claim;\n        uint256 startTime;\n        uint256 endTime;\n        uint256 epoch;\n    }\n\n    struct Group {\n        uint256 epochReward;\n    }\n\n    modifier onlyRigoblockDao {\n        require(\n            msg.sender == rigoblockDao,\n            \"ONLY_RIGOBLOCK_DAO\"\n        );\n        _;\n    }\n\n    modifier onlyProofOfPerformance {\n        require(\n            msg.sender == proofOfPerformance,\n            \"ONLY_PROOF_OF_PERFORMANCE\"\n        );\n        _;\n    }\n\n    modifier isApprovedFactory(address _factory) {\n        Authority auth = Authority(authority);\n        require(\n            auth.isWhitelistedFactory(_factory),\n            \"NOT_APPROVED_AUTHORITY\"\n        );\n        _;\n    }\n\n    modifier timeAtLeast(bytes32 stakingPoolId) {\n        require(\n            block.timestamp >= performers[stakingPoolId].endTime,\n            \"TIME_NOT_ENOUGH\"\n        );\n        _;\n    }\n\n    constructor(\n        address _rigoTokenAddress,\n        address _grgVaultAddress,\n        address _proofOfPerformance,\n        address _authority)\n        public\n    {\n        RIGOTOKENADDRESS = _rigoTokenAddress;\n        GRG_VAULT_ADDRESS = _grgVaultAddress;\n        rigoblockDao = msg.sender;\n        proofOfPerformance = _proofOfPerformance;\n        authority = _authority;\n    }\n\n    /*\n     * CORE FUNCTIONS\n     */\n    /// @dev Allows ProofOfPerformance to mint rewards.\n    /// @param stakingPoolId String of the staking pool.\n    /// @param reward Number of reward in Rigo tokens.\n    /// @return Bool the transaction executed correctly.\n    function mintInflation(bytes32 stakingPoolId, uint256 reward)\n        external\n        onlyProofOfPerformance\n        timeAtLeast(stakingPoolId)\n        returns (bool)\n    {\n        //TODO: test\n        // reject any reward higher than amount of GRG staked to a staking pool divided by epoch legth\n        address stakingProxyAddress = GrgVault(GRG_VAULT_ADDRESS).stakingProxyAddress();\n        uint256 maxEpochReward = uint256(Staking(stakingProxyAddress).getTotalStakeDelegatedToPool(stakingPoolId).currentEpochBalance) * period / 365 days;\n\n        // final integrity check, should the value overflow in some of the passages, but it shouldn't.\n        require(\n            reward <= maxEpochReward,\n            \"REWARD_HIGER_THAN_STAKE_REBASED_ON_EPOCH_ERROR\"\n        );\n        performers[stakingPoolId].startTime = block.timestamp;\n        performers[stakingPoolId].endTime = block.timestamp + period;\n        ++slot;\n        uint256 rigoblockDaoReward = reward * 5 / 100; //5% royalty to rigoblock dao\n        RigoToken rigoToken = RigoToken(RIGOTOKENADDRESS);\n        // TODO: test and check whether we can move 5% royalty to stakingproxy (will save some gas)\n        rigoToken.mintToken(rigoblockDao, rigoblockDaoReward);\n        rigoToken.mintToken(GRG_VAULT_ADDRESS, safeSub(reward, rigoblockDaoReward));\n        return true;\n    }\n\n    /// @dev Allows rigoblock dao to set the inflation factor for a group.\n    /// @param groupAddress Address of the group/factory.\n    /// @param inflationFactor Value of the reward factor.\n    function setInflationFactor(address groupAddress, uint256 inflationFactor)\n        external\n        onlyRigoblockDao\n        isApprovedFactory(groupAddress)\n    {\n        groups[groupAddress].epochReward = inflationFactor;\n    }\n\n    /// @dev Allows rigoblock dao to set the minimum number of required tokens.\n    /// @param minimum Number of minimum tokens.\n    function setMinimumRigo(uint256 minimum)\n        external\n        onlyRigoblockDao\n    {\n        require(\n            minimum >= 100 * 10**18,\n            \"MINIMUM_GRG_BELOW_100_ERROR\"\n        );\n        minimumGRG = minimum;\n    }\n\n    /// @dev Allows rigoblock dao to upgrade its address.\n    /// @param newRigoblockDaoAddress Address of the new rigoblock dao.\n    function setRigoblock(address newRigoblockDaoAddress)\n        external\n        onlyRigoblockDao\n    {\n        rigoblockDao = newRigoblockDaoAddress;\n    }\n\n    /// @dev Allows rigoblock dao to update the authority.\n    /// @param authorityAddress Address of the authority.\n    function setAuthority(address authorityAddress)\n        external\n        onlyRigoblockDao\n    {\n        authority = authorityAddress;\n    }\n\n    /// @dev Allows rigoblock dao to update proof of performance.\n    /// @param popAddress Address of the Proof of Performance contract.\n    function setProofOfPerformance(address popAddress)\n        external\n        onlyRigoblockDao\n    {\n        proofOfPerformance = popAddress;\n    }\n\n    /// @dev Allows rigoblock dao to set the minimum time between reward collection.\n    /// @param newPeriod Number of seconds between 2 rewards.\n    /// @notice set period on shorter subsets of time for testing.\n    function setPeriod(uint256 newPeriod)\n        external\n        onlyRigoblockDao\n    {\n        require(\n            newPeriod >= 1 days && newPeriod <= 365 days,\n            \"PERIOD_TOO_LONG_OR_TOO_SHORT_ERROR\"\n        );\n        period = newPeriod;\n    }\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    /// @dev Returns whether a staking pool's reward can be claimed.\n    /// @param stakingPoolId Address of the target pool.\n    /// @return Bool the wizard can claim.\n    function canWithdraw(bytes32 stakingPoolId)\n        external\n        view\n        returns (bool)\n    {\n        if (block.timestamp >= performers[stakingPoolId].endTime) {\n            return true;\n        }\n    }\n\n    /// @dev Returns how much time needed until next claim.\n    /// @param stakingPoolId Address of the target pool.\n    /// @return Number in seconds.\n    function timeUntilClaim(bytes32 stakingPoolId)\n        external\n        view\n        returns (uint256)\n    {\n        if (block.timestamp < performers[stakingPoolId].endTime) {\n            return (performers[stakingPoolId].endTime);\n        }\n    }\n\n    /// @dev Return the reward factor for a group.\n    /// @param groupAddress Address of the group.\n    /// @return Value of the reward factor.\n    function getInflationFactor(address groupAddress)\n        external\n        view\n        returns (uint256)\n    {\n        return groups[groupAddress].epochReward;\n    }\n}\n",
		"../../utils/Owned/Owned.sol": "pragma solidity >=0.4.22 <0.6.0;\n\ncontract Owned {\n\n    address public owner;\n\n    event NewOwner(address indexed old, address indexed current);\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function setOwner(address _new)\n        public\n        onlyOwner\n    {\n        require(_new != address(0));\n        owner = _new;\n        emit NewOwner(owner, _new);\n    }\n}\n",
		"../../protocol/authorities/Authority/AuthorityFace.sol": "/*\n\n Copyright 2017-2018 RigoBlock, Rigo Investment Sagl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\npragma solidity >=0.4.22 <0.6.0;\n\n/// @title Authority Interface - Allows interaction with the Authority contract.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n// solhint-disable-next-line\ninterface AuthorityFace {\n\n    /*\n     * EVENTS\n     */\n    event AuthoritySet(address indexed authority);\n    event WhitelisterSet(address indexed whitelister);\n    event WhitelistedUser(address indexed target, bool approved);\n    event WhitelistedRegistry(address indexed registry, bool approved);\n    event WhitelistedFactory(address indexed factory, bool approved);\n    event WhitelistedVault(address indexed vault, bool approved);\n    event WhitelistedDrago(address indexed drago, bool isWhitelisted);\n    event NewDragoEventful(address indexed dragoEventful);\n    event NewVaultEventful(address indexed vaultEventful);\n    event NewNavVerifier(address indexed navVerifier);\n    event NewExchangesAuthority(address indexed exchangesAuthority);\n\n    /*\n     * CORE FUNCTIONS\n     */\n    function setAuthority(address _authority, bool _isWhitelisted) external;\n    function setWhitelister(address _whitelister, bool _isWhitelisted) external;\n    function whitelistUser(address _target, bool _isWhitelisted) external;\n    function whitelistDrago(address _drago, bool _isWhitelisted) external;\n    function whitelistVault(address _vault, bool _isWhitelisted) external;\n    function whitelistRegistry(address _registry, bool _isWhitelisted) external;\n    function whitelistFactory(address _factory, bool _isWhitelisted) external;\n    function setDragoEventful(address _dragoEventful) external;\n    function setVaultEventful(address _vaultEventful) external;\n    function setNavVerifier(address _navVerifier) external;\n    function setExchangesAuthority(address _exchangesAuthority) external;\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    function isWhitelistedUser(address _target) external view returns (bool);\n    function isAuthority(address _authority) external view returns (bool);\n    function isWhitelistedRegistry(address _registry) external view returns (bool);\n    function isWhitelistedDrago(address _drago) external view returns (bool);\n    function isWhitelistedVault(address _vault) external view returns (bool);\n    function isWhitelistedFactory(address _factory) external view returns (bool);\n    function getDragoEventful() external view returns (address);\n    function getVaultEventful() external view returns (address);\n    function getNavVerifier() external view returns (address);\n    function getExchangesAuthority() external view returns (address);\n}\n",
		"../../utils/SafeMath/SafeMath.sol": "pragma solidity >=0.4.22 <0.6.0;\n\ncontract SafeMath {\n\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b > 0);\n        uint256 c = a / b;\n        assert(a == b * c + a % b);\n        return c;\n    }\n\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c>=a && c>=b);\n        return c;\n    }\n\n    function max64(uint64 a, uint64 b) internal pure returns (uint64) {\n        return a >= b ? a : b;\n    }\n\n    function min64(uint64 a, uint64 b) internal pure returns (uint64) {\n        return a < b ? a : b;\n    }\n\n    function max256(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    function min256(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}\n",
		"./InflationFace.sol": "/*\n\n Copyright 2017-2019 RigoBlock, Rigo Investment Sagl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\npragma solidity >=0.4.22 <0.6.0;\n\n/// @title Inflation Interface - Allows interaction with the Inflation contract.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n// solhint-disable-next-line\ninterface InflationFace {\n\n    function period() external;\n\n    /*\n     * CORE FUNCTIONS\n     */\n    function mintInflation(bytes32 poolId, uint256 reward) external returns (bool);\n    function setInflationFactor(address groupAddress, uint256 inflationFactor) external;\n    function setMinimumRigo(uint256 minimum) external;\n    function setRigoblock(address newRigoblockDaoAddress) external;\n    function setAuthority(address authorityAddress) external;\n    function setProofOfPerformance(address popAddress) external;\n    function setPeriod(uint256 newPeriod) external;\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    function canWithdraw(bytes32 stakingPoolId) external view returns (bool);\n    function timeUntilClaim(bytes32 stakingPoolId) external view returns (uint256);\n    function getInflationFactor(address groupAddress) external view returns (uint256);\n}\n"
	},
	"compiler": {
		"name": "solc",
		"version": "0.5.4+commit.9549d8ff",
		"settings": {
			"remappings": [],
			"optimizer": {
				"enabled": true,
				"runs": 1000000
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap"
					]
				}
			}
		}
	},
	"chains": {}
}