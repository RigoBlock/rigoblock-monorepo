{
	"schemaVersion": "2.0.0",
	"contractName": "Inflation",
	"compilerOutput": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"name": "_group",
						"type": "address"
					},
					{
						"name": "_inflationFactor",
						"type": "uint256"
					}
				],
				"name": "setInflationFactor",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_newPeriod",
						"type": "uint256"
					}
				],
				"name": "setPeriod",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_thePool",
						"type": "address"
					}
				],
				"name": "canWithdraw",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "rigoblockDao",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_minimum",
						"type": "uint256"
					}
				],
				"name": "setMinimumRigo",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_newRigoblock",
						"type": "address"
					}
				],
				"name": "setRigoblock",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_authority",
						"type": "address"
					}
				],
				"name": "setAuthority",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "RIGOTOKENADDRESS",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_thePool",
						"type": "address"
					},
					{
						"name": "_reward",
						"type": "uint256"
					}
				],
				"name": "mintInflation",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "authority",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_thePool",
						"type": "address"
					}
				],
				"name": "timeUntilClaim",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_group",
						"type": "address"
					}
				],
				"name": "getInflationFactor",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_pop",
						"type": "address"
					}
				],
				"name": "setProofOfPerformance",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "proofOfPerformance",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "period",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "minimumGRG",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"name": "_rigoTokenAddress",
						"type": "address"
					},
					{
						"name": "_proofOfPerformance",
						"type": "address"
					},
					{
						"name": "_authority",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			}
		],
		"devdoc": {
			"author": "Gabriele Rigo - <gab@rigoblock.com>",
			"methods": {
				"canWithdraw(address)": {
					"details": "Returns whether a wizard can claim reward tokens",
					"params": {
						"_thePool": "Address of the target pool"
					},
					"return": "Bool the wizard can claim"
				},
				"getInflationFactor(address)": {
					"details": "Return the reward factor for a group",
					"params": {
						"_group": "Address of the group"
					},
					"return": "Value of the reward factor"
				},
				"mintInflation(address,uint256)": {
					"details": "Allows ProofOfPerformance to mint rewards",
					"params": {
						"_reward": "Number of reward in Rigo tokens",
						"_thePool": "Address of the target pool"
					},
					"return": "Bool the transaction executed correctly"
				},
				"setAuthority(address)": {
					"details": "Allows rigoblock dao to update the authority",
					"params": {
						"_authority": "Address of the authority"
					}
				},
				"setInflationFactor(address,uint256)": {
					"details": "Allows rigoblock dao to set the inflation factor for a group",
					"params": {
						"_group": "Address of the group/factory",
						"_inflationFactor": "Value of the reward factor"
					}
				},
				"setMinimumRigo(uint256)": {
					"details": "Allows rigoblock dao to set the minimum number of required tokens",
					"params": {
						"_minimum": "Number of minimum tokens"
					}
				},
				"setPeriod(uint256)": {
					"details": "Allows rigoblock dao to set the minimum time between reward collection",
					"params": {
						"_newPeriod": "Number of seconds between 2 rewards"
					}
				},
				"setProofOfPerformance(address)": {
					"details": "Allows rigoblock dao to update proof of performance",
					"params": {
						"_pop": "Address of the Proof of Performance contract"
					}
				},
				"setRigoblock(address)": {
					"details": "Allows rigoblock dao to upgrade its address",
					"params": {
						"_newRigoblock": "Address of the new rigoblock dao"
					}
				},
				"timeUntilClaim(address)": {
					"details": "Returns how much time needed until next claim",
					"params": {
						"_thePool": "Address of the target pool"
					},
					"return": "Number in seconds"
				}
			},
			"title": "Inflation - Allows ProofOfPerformance to mint tokens."
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x60806040526201518060015568056bc75e2d6310000060025534801561002457600080fd5b506040516060806110a98339810180604052606081101561004457600080fd5b508051602082015160409092015160008054600160a060020a03938416600160a060020a031991821617909155600580548216331790556003805494841694821694909417909355600480549290911691909216179055610fff806100aa6000396000f3fe608060405234801561001057600080fd5b506004361061011d576000357c010000000000000000000000000000000000000000000000000000000090048063be5ddb99116100b4578063d9ed29aa11610083578063d9ed29aa14610336578063e70eadc014610369578063ef78d4fd14610371578063ff54a8e0146103795761011d565b8063be5ddb991461027d578063bf7e214f146102b6578063c8fb7426146102be578063d410e0c2146103035761011d565b806374bab550116100f057806374bab550146101f25780637802815c1461020f5780637a9e5e4b14610242578063a6c9c443146102755761011d565b8063020e0cdb146101225780630f3a9f651461015d57806319262d301461017a5780633edd80c3146101c1575b600080fd5b61015b6004803603604081101561013857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610381565b005b61015b6004803603602081101561017357600080fd5b5035610544565b6101ad6004803603602081101561019057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661063d565b604080519115158252519081900360200190f35b6101c9610675565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61015b6004803603602081101561020857600080fd5b5035610691565b61015b6004803603602081101561022557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610794565b61015b6004803603602081101561025857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610861565b6101c961092e565b6101ad6004803603604081101561029357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561094a565b6101c9610d71565b6102f1600480360360208110156102d457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610d8d565b60408051918252519081900360200190f35b6102f16004803603602081101561031957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610dec565b61015b6004803603602081101561034c57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610e14565b6101c9610ee1565b6102f1610efd565b6102f1610f03565b60055473ffffffffffffffffffffffffffffffffffffffff16331461040757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b60048054604080517fdcb7a3e000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808716948201949094529051859390921691829163dcb7a3e0916024808301926020929190829003018186803b15801561048057600080fd5b505afa158015610494573d6000803e3d6000fd5b505050506040513d60208110156104aa57600080fd5b5051151561051957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e4f545f415050524f5645445f415554484f5249545900000000000000000000604482015290519081900360640190fd5b505073ffffffffffffffffffffffffffffffffffffffff909116600090815260076020526040902055565b60055473ffffffffffffffffffffffffffffffffffffffff1633146105ca57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b6201518081101580156105e157506301e133808111155b1515610638576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fb26022913960400191505060405180910390fd5b600155565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600660205260408120600301544210610670575060015b919050565b60055473ffffffffffffffffffffffffffffffffffffffff1681565b60055473ffffffffffffffffffffffffffffffffffffffff16331461071757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b68056bc75e2d6310000081101561078f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4d494e494d554d5f4752475f42454c4f575f3130305f4552524f520000000000604482015290519081900360640190fd5b600255565b60055473ffffffffffffffffffffffffffffffffffffffff16331461081a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60055473ffffffffffffffffffffffffffffffffffffffff1633146108e757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60035460009073ffffffffffffffffffffffffffffffffffffffff1633146109d357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4f4e4c595f504f505f434f4e5452414354000000000000000000000000000000604482015290519081900360640190fd5b600054600254849173ffffffffffffffffffffffffffffffffffffffff1690816370a08231610a0185610f09565b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610a7d57600080fd5b505afa158015610a91573d6000803e3d6000fd5b505050506040513d6020811015610aa757600080fd5b50511015610b1657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f42454c4f575f4d494e494d554d5f475247000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff85166000908152600660205260409020600301548590421015610baf57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f54494d455f4e4f545f454e4f5547480000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8616600090815260066020526040812042600282018190556001805490910160038301556004909101805490910190556064605f87020490610c068783610f9f565b60005490915073ffffffffffffffffffffffffffffffffffffffff16806379c65068610c318b610f09565b856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015610cb757600080fd5b505af1158015610ccb573d6000803e3d6000fd5b5050600554604080517f79c6506800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015260248101879052905191851693506379c65068925060448082019260009290919082900301818387803b158015610d4a57600080fd5b505af1158015610d5e573d6000803e3d6000fd5b5060019c9b505050505050505050505050565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260066020526040812060030154421015610670575073ffffffffffffffffffffffffffffffffffffffff8116600090815260066020526040902060030154610670565b73ffffffffffffffffffffffffffffffffffffffff1660009081526007602052604090205490565b60055473ffffffffffffffffffffffffffffffffffffffff163314610e9a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60025481565b60008173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610f6d57600080fd5b505afa158015610f81573d6000803e3d6000fd5b505050506040513d6020811015610f9757600080fd5b505192915050565b600082821115610fab57fe5b5090039056fe504552494f445f544f4f5f4c4f4e475f4f525f544f4f5f53484f52545f4552524f52a165627a7a72305820202106a82867c1f456272a3f1c44c4f93a8f6719e033d67910d2b264c6b5b1380029",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x15180 PUSH1 0x1 SSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x60 DUP1 PUSH2 0x10A9 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 SWAP1 SWAP3 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP5 DUP5 AND SWAP5 DUP3 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0xFFF DUP1 PUSH2 0xAA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0xBE5DDB99 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xD9ED29AA GT PUSH2 0x83 JUMPI DUP1 PUSH4 0xD9ED29AA EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xE70EADC0 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xFF54A8E0 EQ PUSH2 0x379 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0xBE5DDB99 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xC8FB7426 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xD410E0C2 EQ PUSH2 0x303 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x74BAB550 GT PUSH2 0xF0 JUMPI DUP1 PUSH4 0x74BAB550 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x7802815C EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0xA6C9C443 EQ PUSH2 0x275 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x20E0CDB EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0xF3A9F65 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x19262D30 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x3EDD80C3 EQ PUSH2 0x1C1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x381 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x544 JUMP JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x63D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x691 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x794 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x861 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0x92E JUMP JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x94A JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0xD71 JUMP JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE14 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x407 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xDCB7A3E000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 MLOAD DUP6 SWAP4 SWAP1 SWAP3 AND SWAP2 DUP3 SWAP2 PUSH4 0xDCB7A3E0 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x494 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO ISZERO PUSH2 0x519 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F415050524F5645445F415554484F5249545900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x5CA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x15180 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x5E1 JUMPI POP PUSH4 0x1E13380 DUP2 GT ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFB2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x670 JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x717 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 LT ISZERO PUSH2 0x78F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D494E494D554D5F4752475F42454C4F575F3130305F4552524F520000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x81A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x8E7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x9D3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F504F505F434F4E5452414354000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x2 SLOAD DUP5 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH4 0x70A08231 PUSH2 0xA01 DUP6 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0xB16 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42454C4F575F4D494E494D554D5F475247000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP6 SWAP1 TIMESTAMP LT ISZERO PUSH2 0xBAF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54494D455F4E4F545F454E4F5547480000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x64 PUSH1 0x5F DUP8 MUL DIV SWAP1 PUSH2 0xC06 DUP8 DUP4 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH4 0x79C65068 PUSH2 0xC31 DUP12 PUSH2 0xF09 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x79C6506800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 MLOAD SWAP2 DUP6 AND SWAP4 POP PUSH4 0x79C65068 SWAP3 POP PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x670 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x670 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xE9A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xFAB JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP INVALID POP GASLIMIT MSTORE 0x49 0x4f DIFFICULTY 0x5f SLOAD 0x4f 0x4f 0x5f 0x4c 0x4f 0x4e 0x47 0x5f 0x4f MSTORE 0x5f SLOAD 0x4f 0x4f 0x5f MSTORE8 0x48 0x4f MSTORE SLOAD 0x5f GASLIMIT MSTORE MSTORE 0x4f MSTORE LOG1 PUSH6 0x627A7A723058 KECCAK256 KECCAK256 0x21 MOD 0xa8 0x28 PUSH8 0xC1F456272A3F1C44 0xc4 0xf9 GASPRICE DUP16 PUSH8 0x19E033D67910D2B2 PUSH5 0xC6B5B13800 0x29 ",
				"sourceMap": "1332:6425:1:-;;;1454:6;1430:30;;1494:12;1466:40;;2987:302;8:9:-1;5:2;;;30:1;27;20:12;5:2;2987:302:1;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2987:302:1;;;;;;;;;;;3129:16;:36;;-1:-1:-1;;;;;3129:36:1;;;-1:-1:-1;;;;;;3129:36:1;;;;;;;3175:12;:25;;;;3190:10;3175:25;;;3210:18;:40;;;;;;;;;;;;;;;3260:9;:22;;;;;;;;;;;;;1332:6425;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b506004361061011d576000357c010000000000000000000000000000000000000000000000000000000090048063be5ddb99116100b4578063d9ed29aa11610083578063d9ed29aa14610336578063e70eadc014610369578063ef78d4fd14610371578063ff54a8e0146103795761011d565b8063be5ddb991461027d578063bf7e214f146102b6578063c8fb7426146102be578063d410e0c2146103035761011d565b806374bab550116100f057806374bab550146101f25780637802815c1461020f5780637a9e5e4b14610242578063a6c9c443146102755761011d565b8063020e0cdb146101225780630f3a9f651461015d57806319262d301461017a5780633edd80c3146101c1575b600080fd5b61015b6004803603604081101561013857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610381565b005b61015b6004803603602081101561017357600080fd5b5035610544565b6101ad6004803603602081101561019057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661063d565b604080519115158252519081900360200190f35b6101c9610675565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61015b6004803603602081101561020857600080fd5b5035610691565b61015b6004803603602081101561022557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610794565b61015b6004803603602081101561025857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610861565b6101c961092e565b6101ad6004803603604081101561029357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561094a565b6101c9610d71565b6102f1600480360360208110156102d457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610d8d565b60408051918252519081900360200190f35b6102f16004803603602081101561031957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610dec565b61015b6004803603602081101561034c57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610e14565b6101c9610ee1565b6102f1610efd565b6102f1610f03565b60055473ffffffffffffffffffffffffffffffffffffffff16331461040757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b60048054604080517fdcb7a3e000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808716948201949094529051859390921691829163dcb7a3e0916024808301926020929190829003018186803b15801561048057600080fd5b505afa158015610494573d6000803e3d6000fd5b505050506040513d60208110156104aa57600080fd5b5051151561051957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e4f545f415050524f5645445f415554484f5249545900000000000000000000604482015290519081900360640190fd5b505073ffffffffffffffffffffffffffffffffffffffff909116600090815260076020526040902055565b60055473ffffffffffffffffffffffffffffffffffffffff1633146105ca57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b6201518081101580156105e157506301e133808111155b1515610638576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fb26022913960400191505060405180910390fd5b600155565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600660205260408120600301544210610670575060015b919050565b60055473ffffffffffffffffffffffffffffffffffffffff1681565b60055473ffffffffffffffffffffffffffffffffffffffff16331461071757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b68056bc75e2d6310000081101561078f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4d494e494d554d5f4752475f42454c4f575f3130305f4552524f520000000000604482015290519081900360640190fd5b600255565b60055473ffffffffffffffffffffffffffffffffffffffff16331461081a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60055473ffffffffffffffffffffffffffffffffffffffff1633146108e757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60035460009073ffffffffffffffffffffffffffffffffffffffff1633146109d357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4f4e4c595f504f505f434f4e5452414354000000000000000000000000000000604482015290519081900360640190fd5b600054600254849173ffffffffffffffffffffffffffffffffffffffff1690816370a08231610a0185610f09565b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610a7d57600080fd5b505afa158015610a91573d6000803e3d6000fd5b505050506040513d6020811015610aa757600080fd5b50511015610b1657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f42454c4f575f4d494e494d554d5f475247000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff85166000908152600660205260409020600301548590421015610baf57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f54494d455f4e4f545f454e4f5547480000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8616600090815260066020526040812042600282018190556001805490910160038301556004909101805490910190556064605f87020490610c068783610f9f565b60005490915073ffffffffffffffffffffffffffffffffffffffff16806379c65068610c318b610f09565b856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015610cb757600080fd5b505af1158015610ccb573d6000803e3d6000fd5b5050600554604080517f79c6506800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015260248101879052905191851693506379c65068925060448082019260009290919082900301818387803b158015610d4a57600080fd5b505af1158015610d5e573d6000803e3d6000fd5b5060019c9b505050505050505050505050565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260066020526040812060030154421015610670575073ffffffffffffffffffffffffffffffffffffffff8116600090815260066020526040902060030154610670565b73ffffffffffffffffffffffffffffffffffffffff1660009081526007602052604090205490565b60055473ffffffffffffffffffffffffffffffffffffffff163314610e9a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f5249474f424c4f434b5f44414f0000000000000000000000000000604482015290519081900360640190fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60025481565b60008173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610f6d57600080fd5b505afa158015610f81573d6000803e3d6000fd5b505050506040513d6020811015610f9757600080fd5b505192915050565b600082821115610fab57fe5b5090039056fe504552494f445f544f4f5f4c4f4e475f4f525f544f4f5f53484f52545f4552524f52a165627a7a72305820202106a82867c1f456272a3f1c44c4f93a8f6719e033d67910d2b264c6b5b1380029",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0xBE5DDB99 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xD9ED29AA GT PUSH2 0x83 JUMPI DUP1 PUSH4 0xD9ED29AA EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xE70EADC0 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xFF54A8E0 EQ PUSH2 0x379 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0xBE5DDB99 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xC8FB7426 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xD410E0C2 EQ PUSH2 0x303 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x74BAB550 GT PUSH2 0xF0 JUMPI DUP1 PUSH4 0x74BAB550 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x7802815C EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0xA6C9C443 EQ PUSH2 0x275 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x20E0CDB EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0xF3A9F65 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x19262D30 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x3EDD80C3 EQ PUSH2 0x1C1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x381 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x544 JUMP JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x63D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x691 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x794 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x861 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0x92E JUMP JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x94A JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0xD71 JUMP JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE14 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x407 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xDCB7A3E000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 MLOAD DUP6 SWAP4 SWAP1 SWAP3 AND SWAP2 DUP3 SWAP2 PUSH4 0xDCB7A3E0 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x494 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO ISZERO PUSH2 0x519 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F415050524F5645445F415554484F5249545900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x5CA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x15180 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x5E1 JUMPI POP PUSH4 0x1E13380 DUP2 GT ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFB2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x670 JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x717 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 LT ISZERO PUSH2 0x78F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D494E494D554D5F4752475F42454C4F575F3130305F4552524F520000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x81A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x8E7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x9D3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F504F505F434F4E5452414354000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x2 SLOAD DUP5 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH4 0x70A08231 PUSH2 0xA01 DUP6 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0xB16 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42454C4F575F4D494E494D554D5F475247000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP6 SWAP1 TIMESTAMP LT ISZERO PUSH2 0xBAF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54494D455F4E4F545F454E4F5547480000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x64 PUSH1 0x5F DUP8 MUL DIV SWAP1 PUSH2 0xC06 DUP8 DUP4 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH4 0x79C65068 PUSH2 0xC31 DUP12 PUSH2 0xF09 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x79C6506800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 MLOAD SWAP2 DUP6 AND SWAP4 POP PUSH4 0x79C65068 SWAP3 POP PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x670 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x670 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xE9A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F5249474F424C4F434B5F44414F0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xFAB JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP INVALID POP GASLIMIT MSTORE 0x49 0x4f DIFFICULTY 0x5f SLOAD 0x4f 0x4f 0x5f 0x4c 0x4f 0x4e 0x47 0x5f 0x4f MSTORE 0x5f SLOAD 0x4f 0x4f 0x5f MSTORE8 0x48 0x4f MSTORE SLOAD 0x5f GASLIMIT MSTORE MSTORE 0x4f MSTORE LOG1 PUSH6 0x627A7A723058 KECCAK256 KECCAK256 0x21 MOD 0xa8 0x28 PUSH8 0xC1F456272A3F1C44 0xc4 0xf9 GASPRICE DUP16 PUSH8 0x19E033D67910D2B2 PUSH5 0xC6B5B13800 0x29 ",
				"sourceMap": "1332:6425:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1332:6425:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4501:212;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4501:212:1;;;;;;;;;:::i;:::-;;6071:258;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6071:258:1;;:::i;6538:201::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6538:201:1;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1581:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4847:234;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4847:234:1;;:::i;5206:136::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5206:136:1;;;;:::i;5457:127::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5457:127:1;;;;:::i;1392:31::-;;;:::i;3549:762::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3549:762:1;;;;;;;;;:::i;1551:24::-;;;:::i;6889:232::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6889:232:1;;;;:::i;:::-;;;;;;;;;;;;;;;;7263:154;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7263:154:1;;;;:::i;5720:133::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5720:133:1;;;;:::i;1512:33::-;;;:::i;1430:30::-;;;:::i;1466:40::-;;;:::i;4501:212::-;2333:12;;;;2319:10;:26;2298:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2657:9;;;2698:35;;;;;;2657:9;2698:35;;;;;;;;;;;;4639:6;;2657:9;;;;;;2698:25;;:35;;;;;;;;;;;;;;2657:9;2698:35;;;5:2:-1;;;;30:1;27;20:12;5:2;2698:35:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2698:35:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2698:35:1;2677:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4661:14:1;;;;;;;;:6;:14;;;;;:45;4501:212::o;6071:258::-;2333:12;;;;2319:10;:26;2298:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6201:6;6187:10;:20;;:46;;;;;6225:8;6211:10;:22;;6187:46;6166:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6303:6;:19;6071:258::o;6538:201::-;6667:20;;;6624:4;6667:20;;;:10;:20;;;;;:28;;;6648:15;:47;6644:89;;-1:-1:-1;6718:4:1;6644:89;6538:201;;;:::o;1581:27::-;;;;;;:::o;4847:234::-;2333:12;;;;2319:10;:26;2298:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4978:12;4966:24;;;4945:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5053:10;:21;4847:234::o;5206:136::-;2333:12;;;;2319:10;:26;2298:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5307:12;:28;;;;;;;;;;;;;;;5206:136::o;5457:127::-;2333:12;;;;2319:10;:26;2298:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5555:9;:22;;;;;;;;;;;;;;;5457:127::o;1392:31::-;;;;;;:::o;3549:762::-;2490:18;;3732:4;;2490:18;;2476:10;:32;2455:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2059:19;2091:16;2185:10;;3675:8;;2091:16;;;;2139:19;2159:21;3675:8;2159:12;:21::i;:::-;2139:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2139:42:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2139:42:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2139:42:1;:56;;2118:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2894:20;;;;;;;:10;:20;;;;;:28;;;3705:8;;2875:15;:47;;2854:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3752:20;;;;;;;:10;:20;;;;;3785:15;3752:30;;;:48;;;3859:6;;;3841:24;;;3810:28;;;:55;3877:26;;;;3875:28;;;;;;;3945:3;3940:2;3930:12;;:18;;4014:24;3930:12;:18;4014:7;:24::i;:::-;4048:19;4080:16;3988:50;;-1:-1:-1;4080:16:1;;;4172:19;4192:22;4205:8;4192:12;:22::i;:::-;4216:6;4172:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4172:51:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4253:12:1;;4233:50;;;;;;:19;4253:12;;;4233:50;;;;;;;;;;;;:19;;;;-1:-1:-1;4233:19:1;;-1:-1:-1;4233:50:1;;;;;4253:12;;4233:50;;;;;;;;4253:12;4233:19;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;4233:50:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;4300:4:1;;3549:762;-1:-1:-1;;;;;;;;;;;;3549:762:1:o;1551:24::-;;;;;;:::o;6889:232::-;7023:20;;;6978:7;7023:20;;;:10;:20;;;;;:28;;;7005:15;:46;7001:114;;;-1:-1:-1;7075:20:1;;;;;;;:10;:20;;;;;:28;;;7067:37;;7263:154;7384:14;;7354:7;7384:14;;;:6;:14;;;;;:26;;7263:154::o;5720:133::-;2333:12;;;;2319:10;:26;2298:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5821:18;:25;;;;;;;;;;;;;;;5720:133::o;1512:33::-;;;;;;:::o;1430:30::-;;;;:::o;1466:40::-;;;;:::o;7610:145::-;7696:7;7732;7726:20;;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7726:22:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7726:22:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7726:22:1;;7610:145;-1:-1:-1;;7610:145:1:o;414:124:8:-;476:7;502:6;;;;495:14;;;;-1:-1:-1;526:5:8;;;414:124::o"
			}
		}
	},
	"sourceTreeHashHex": "0x94c1513452ce98696ae654b10a24c7c330ce9be411487ed689bbc58ccddb0ecf",
	"sources": {
		"./Inflation.sol": {
			"id": 1
		},
		"../../utils/Owned/Owned.sol": {
			"id": 5
		},
		"../../protocol/authorities/Authority/AuthorityFace.sol": {
			"id": 0
		},
		"../../utils/SafeMath/SafeMath.sol": {
			"id": 8
		},
		"./InflationFace.sol": {
			"id": 2
		}
	},
	"sourceCodes": {
		"./Inflation.sol": "/*\n\n Copyright 2017-2019 RigoBlock, Rigo Investment Sagl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\npragma solidity 0.5.4;\n\nimport { Owned } from \"../../utils/Owned/Owned.sol\";\nimport { AuthorityFace as Authority } from \"../../protocol/authorities/Authority/AuthorityFace.sol\";\nimport { SafeMath } from \"../../utils/SafeMath/SafeMath.sol\";\nimport { InflationFace } from \"./InflationFace.sol\";\n\ninterface RigoToken {\n\n    function mintToken(address _recipient, uint256 _amount) external;\n    function changeMintingAddress(address _newAddress) external;\n    function changeRigoblockAddress(address _newAddress) external;\n\n    function balanceOf(address _who) external view returns (uint256);\n}\n\n/// @title Inflation - Allows ProofOfPerformance to mint tokens.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n// solhint-disable-next-line\ncontract Inflation is\n    SafeMath,\n    InflationFace\n{\n    address public RIGOTOKENADDRESS;\n\n    uint256 public period = 1 days;\n    uint256 public minimumGRG = 100 * 10**18;\n    address public proofOfPerformance;\n    address public authority;\n    address public rigoblockDao;\n\n    mapping(address => Performer) performers;\n    mapping(address => Group) groups;\n\n    struct Performer {\n        uint256 claimedTokens;\n        mapping(uint256 => bool) claim;\n        uint256 startTime;\n        uint256 endTime;\n        uint256 epoch;\n    }\n\n    struct Group {\n        uint256 epochReward;\n    }\n\n    /// @notice in order to qualify for PoP user has to hold minimum rigo token\n    modifier minimumRigo(address _ofPool) {\n        RigoToken rigoToken = RigoToken(RIGOTOKENADDRESS);\n        require(\n            rigoToken.balanceOf(getPoolOwner(_ofPool)) >= minimumGRG,\n            \"BELOW_MINIMUM_GRG\"\n        );\n        _;\n    }\n\n    modifier onlyRigoblockDao {\n        require(\n            msg.sender == rigoblockDao,\n            \"ONLY_RIGOBLOCK_DAO\"\n        );\n        _;\n    }\n\n    modifier onlyProofOfPerformance {\n        require(\n            msg.sender == proofOfPerformance,\n            \"ONLY_POP_CONTRACT\"\n        );\n        _;\n    }\n\n    modifier isApprovedFactory(address _factory) {\n        Authority auth = Authority(authority);\n        require(\n            auth.isWhitelistedFactory(_factory),\n            \"NOT_APPROVED_AUTHORITY\"\n        );\n        _;\n    }\n\n    modifier timeAtLeast(address _thePool) {\n        require(\n            block.timestamp >= performers[_thePool].endTime,\n            \"TIME_NOT_ENOUGH\"\n        );\n        _;\n    }\n\n    constructor(\n        address _rigoTokenAddress,\n        address _proofOfPerformance,\n        address _authority)\n        public\n    {\n        RIGOTOKENADDRESS = _rigoTokenAddress;\n        rigoblockDao = msg.sender;\n        proofOfPerformance = _proofOfPerformance;\n        authority = _authority;\n    }\n\n    /*\n     * CORE FUNCTIONS\n     */\n    /// @dev Allows ProofOfPerformance to mint rewards\n    /// @param _thePool Address of the target pool\n    /// @param _reward Number of reward in Rigo tokens\n    /// @return Bool the transaction executed correctly\n    function mintInflation(address _thePool, uint256 _reward)\n        external\n        onlyProofOfPerformance\n        minimumRigo(_thePool)\n        timeAtLeast(_thePool)\n        returns (bool)\n    {\n        performers[_thePool].startTime = block.timestamp;\n        performers[_thePool].endTime = block.timestamp + period;\n        ++performers[_thePool].epoch;\n        uint256 reward = _reward * 95 / 100; //5% royalty to rigoblock dao\n        uint256 rigoblockReward = safeSub(_reward, reward);\n        RigoToken rigoToken = RigoToken(RIGOTOKENADDRESS);\n        // TODO: amend logic as staking contract receives reward\n        rigoToken.mintToken(getPoolOwner(_thePool), reward);\n        rigoToken.mintToken(rigoblockDao, rigoblockReward);\n        return true;\n    }\n\n    /// @dev Allows rigoblock dao to set the inflation factor for a group\n    /// @param _group Address of the group/factory\n    /// @param _inflationFactor Value of the reward factor\n    function setInflationFactor(address _group, uint256 _inflationFactor)\n        external\n        onlyRigoblockDao\n        isApprovedFactory(_group)\n    {\n        groups[_group].epochReward = _inflationFactor;\n    }\n\n    /// @dev Allows rigoblock dao to set the minimum number of required tokens\n    /// @param _minimum Number of minimum tokens\n    function setMinimumRigo(uint256 _minimum)\n        external\n        onlyRigoblockDao\n    {\n        require(\n            _minimum >= 100 * 10**18,\n            \"MINIMUM_GRG_BELOW_100_ERROR\"\n        );\n        minimumGRG = _minimum;\n    }\n\n    /// @dev Allows rigoblock dao to upgrade its address\n    /// @param _newRigoblock Address of the new rigoblock dao\n    function setRigoblock(address _newRigoblock)\n        external\n        onlyRigoblockDao\n    {\n        rigoblockDao = _newRigoblock;\n    }\n\n    /// @dev Allows rigoblock dao to update the authority\n    /// @param _authority Address of the authority\n    function setAuthority(address _authority)\n        external\n        onlyRigoblockDao\n    {\n        authority = _authority;\n    }\n\n    /// @dev Allows rigoblock dao to update proof of performance\n    /// @param _pop Address of the Proof of Performance contract\n    function setProofOfPerformance(address _pop)\n        external\n        onlyRigoblockDao\n    {\n        proofOfPerformance = _pop;\n    }\n\n    /// @dev Allows rigoblock dao to set the minimum time between reward collection\n    /// @param _newPeriod Number of seconds between 2 rewards\n    /// @notice set period on shorter subsets of time for testing\n    function setPeriod(uint256 _newPeriod)\n        external\n        onlyRigoblockDao\n    {\n        require(\n            _newPeriod >= 1 days && _newPeriod <= 365 days,\n            \"PERIOD_TOO_LONG_OR_TOO_SHORT_ERROR\"\n        );\n        period = _newPeriod;\n    }\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    /// @dev Returns whether a wizard can claim reward tokens\n    /// @param _thePool Address of the target pool\n    /// @return Bool the wizard can claim\n    function canWithdraw(address _thePool)\n        external\n        view\n        returns (bool)\n    {\n        if (block.timestamp >= performers[_thePool].endTime) {\n            return true;\n        }\n    }\n\n    /// @dev Returns how much time needed until next claim\n    /// @param _thePool Address of the target pool\n    /// @return Number in seconds\n    function timeUntilClaim(address _thePool)\n        external\n        view\n        returns (uint256)\n    {\n        if (block.timestamp < performers[_thePool].endTime) {\n            return (performers[_thePool].endTime);\n        }\n    }\n\n    /// @dev Return the reward factor for a group\n    /// @param _group Address of the group\n    /// @return Value of the reward factor\n    function getInflationFactor(address _group)\n        external\n        view\n        returns (uint256)\n    {\n        return groups[_group].epochReward;\n    }\n\n    /*\n     * INTERNAL FUNCTIONS\n     */\n    /// @dev Returns the address of the pool owner\n    /// @param _ofPool Number of the registered pool\n    /// @return Address of the pool owner\n    function getPoolOwner(address _ofPool)\n        internal\n        view\n        returns (address)\n    {\n        return Owned(_ofPool).owner();\n    }\n}\n",
		"../../utils/Owned/Owned.sol": "pragma solidity >=0.4.22 <0.6.0;\n\ncontract Owned {\n\n    address public owner;\n\n    event NewOwner(address indexed old, address indexed current);\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function setOwner(address _new)\n        public\n        onlyOwner\n    {\n        require(_new != address(0));\n        owner = _new;\n        emit NewOwner(owner, _new);\n    }\n}\n",
		"../../protocol/authorities/Authority/AuthorityFace.sol": "/*\n\n Copyright 2017-2018 RigoBlock, Rigo Investment Sagl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\npragma solidity >=0.4.22 <0.6.0;\n\n/// @title Authority Interface - Allows interaction with the Authority contract.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n// solhint-disable-next-line\ninterface AuthorityFace {\n\n    /*\n     * EVENTS\n     */\n    event AuthoritySet(address indexed authority);\n    event WhitelisterSet(address indexed whitelister);\n    event WhitelistedUser(address indexed target, bool approved);\n    event WhitelistedRegistry(address indexed registry, bool approved);\n    event WhitelistedFactory(address indexed factory, bool approved);\n    event WhitelistedVault(address indexed vault, bool approved);\n    event WhitelistedDrago(address indexed drago, bool isWhitelisted);\n    event NewDragoEventful(address indexed dragoEventful);\n    event NewVaultEventful(address indexed vaultEventful);\n    event NewNavVerifier(address indexed navVerifier);\n    event NewExchangesAuthority(address indexed exchangesAuthority);\n\n    /*\n     * CORE FUNCTIONS\n     */\n    function setAuthority(address _authority, bool _isWhitelisted) external;\n    function setWhitelister(address _whitelister, bool _isWhitelisted) external;\n    function whitelistUser(address _target, bool _isWhitelisted) external;\n    function whitelistDrago(address _drago, bool _isWhitelisted) external;\n    function whitelistVault(address _vault, bool _isWhitelisted) external;\n    function whitelistRegistry(address _registry, bool _isWhitelisted) external;\n    function whitelistFactory(address _factory, bool _isWhitelisted) external;\n    function setDragoEventful(address _dragoEventful) external;\n    function setVaultEventful(address _vaultEventful) external;\n    function setNavVerifier(address _navVerifier) external;\n    function setExchangesAuthority(address _exchangesAuthority) external;\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    function isWhitelistedUser(address _target) external view returns (bool);\n    function isAuthority(address _authority) external view returns (bool);\n    function isWhitelistedRegistry(address _registry) external view returns (bool);\n    function isWhitelistedDrago(address _drago) external view returns (bool);\n    function isWhitelistedVault(address _vault) external view returns (bool);\n    function isWhitelistedFactory(address _factory) external view returns (bool);\n    function getDragoEventful() external view returns (address);\n    function getVaultEventful() external view returns (address);\n    function getNavVerifier() external view returns (address);\n    function getExchangesAuthority() external view returns (address);\n}\n",
		"../../utils/SafeMath/SafeMath.sol": "pragma solidity >=0.4.22 <0.6.0;\n\ncontract SafeMath {\n\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b > 0);\n        uint256 c = a / b;\n        assert(a == b * c + a % b);\n        return c;\n    }\n\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c>=a && c>=b);\n        return c;\n    }\n\n    function max64(uint64 a, uint64 b) internal pure returns (uint64) {\n        return a >= b ? a : b;\n    }\n\n    function min64(uint64 a, uint64 b) internal pure returns (uint64) {\n        return a < b ? a : b;\n    }\n\n    function max256(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    function min256(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}\n",
		"./InflationFace.sol": "/*\n\n Copyright 2017-2019 RigoBlock, Rigo Investment Sagl.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n*/\n\npragma solidity >=0.4.22 <0.6.0;\n\n/// @title Inflation Interface - Allows interaction with the Inflation contract.\n/// @author Gabriele Rigo - <gab@rigoblock.com>\n// solhint-disable-next-line\ninterface InflationFace {\n\n    /*\n     * CORE FUNCTIONS\n     */\n    function mintInflation(address _thePool, uint256 _reward) external returns (bool);\n    function setInflationFactor(address _group, uint256 _inflationFactor) external;\n    function setMinimumRigo(uint256 _minimum) external;\n    function setRigoblock(address _newRigoblock) external;\n    function setAuthority(address _authority) external;\n    function setProofOfPerformance(address _pop) external;\n    function setPeriod(uint256 _newPeriod) external;\n\n    /*\n     * CONSTANT PUBLIC FUNCTIONS\n     */\n    function canWithdraw(address _thePool) external view returns (bool);\n    function timeUntilClaim(address _thePool) external view returns (uint256);\n    function getInflationFactor(address _group) external view returns (uint256);\n}\n"
	},
	"compiler": {
		"name": "solc",
		"version": "0.5.4+commit.9549d8ff",
		"settings": {
			"remappings": [],
			"optimizer": {
				"enabled": true,
				"runs": 1000000
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap"
					]
				}
			}
		}
	},
	"chains": {}
}