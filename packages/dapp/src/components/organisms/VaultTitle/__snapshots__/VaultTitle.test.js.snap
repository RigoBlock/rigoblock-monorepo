// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VaultTitle component renders correctly 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [Function],
      "subscribe": [MockFunction],
    }
  }
>
  <Connect(VaultTitle)
    vaultAddress="0x86a1ba4d485ce346bded508e2426798f825558be"
  >
    <VaultTitle
      dispatch={[MockFunction]}
      vaultAddress="0x86a1ba4d485ce346bded508e2426798f825558be"
      vaults={
        Object {
          "0x421e1cef6e85e78da2470e54af64a626f45afb85": Object {
            "group": "0x7ce6e371085cb611fb46d5065397223ef2f952ff",
            "id": "1",
            "name": "Third Vault",
            "owner": "0x7328ef1d7ab7583eb9968b2f4a9c900f8a2e2d6d",
            "symbol": "das",
            "totalSupply": "21343170000000000000",
          },
          "0x86a1ba4d485ce346bded508e2426798f825558be": Object {
            "group": "0x7ce6e371085cb611fb46d5065397223ef2f952ff",
            "id": "0",
            "name": "First Vault",
            "owner": "0x242b2dd21e7e1a2b2516d0a3a06b58e2d9bf9196",
            "symbol": "asd",
            "totalSupply": "28640000000000000000",
          },
        }
      }
    >
      <div
        className="vault-title"
      >
        <div
          className="vault-title-header"
        >
          <Title
            className={null}
            size="large"
          >
            <div
              className="title large"
            >
              asd
            </div>
          </Title>
          <CallToAction>
            <div
              className="call-to-action"
            >
              <Button
                appearance="primary"
                onClick={[Function]}
                type="button"
              >
                <withInk(withTooltip(Button))
                  className="base-button"
                  flat={true}
                  inkTransitionEnterTimeout={450}
                  inkTransitionLeaveTimeout={300}
                  inkTransitionOverlap={150}
                  onClick={[Function]}
                  primary={true}
                  swapTheming={false}
                  type="button"
                >
                  <withTooltip(Button)
                    className="base-button"
                    flat={true}
                    ink={
                      <InkContainer
                        className={undefined}
                        disabledInteractions={undefined}
                        inkClassName={undefined}
                        inkStyle={undefined}
                        pulse={undefined}
                        style={undefined}
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}
                        waitForInkTransition={undefined}
                      />
                    }
                    onClick={[Function]}
                    primary={true}
                    swapTheming={false}
                    type="button"
                  >
                    <Button
                      className="base-button"
                      fixedPosition="br"
                      flat={true}
                      iconBefore={true}
                      ink={
                        <InkContainer
                          className={undefined}
                          disabledInteractions={undefined}
                          inkClassName={undefined}
                          inkStyle={undefined}
                          pulse={undefined}
                          style={undefined}
                          transitionEnterTimeout={450}
                          transitionLeaveTimeout={300}
                          transitionOverlap={150}
                          waitForInkTransition={undefined}
                        />
                      }
                      onClick={[Function]}
                      primary={true}
                      swapTheming={false}
                      type="button"
                    >
                      <button
                        className="md-btn md-btn--flat md-btn--text md-pointer--hover md-text--theme-primary md-ink--primary md-inline-block base-button"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchStart={[Function]}
                        type="button"
                      >
                        <InkContainer
                          key="ink-container"
                          transitionEnterTimeout={450}
                          transitionLeaveTimeout={300}
                          transitionOverlap={150}
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            className="md-ink-container"
                            component="div"
                          >
                            <div
                              className="md-ink-container"
                            />
                          </TransitionGroup>
                        </InkContainer>
                        Deposit
                      </button>
                    </Button>
                  </withTooltip(Button)>
                </withInk(withTooltip(Button))>
              </Button>
              <Button
                appearance="primary"
                onClick={[Function]}
                type="button"
              >
                <withInk(withTooltip(Button))
                  className="base-button"
                  flat={true}
                  inkTransitionEnterTimeout={450}
                  inkTransitionLeaveTimeout={300}
                  inkTransitionOverlap={150}
                  onClick={[Function]}
                  primary={true}
                  swapTheming={false}
                  type="button"
                >
                  <withTooltip(Button)
                    className="base-button"
                    flat={true}
                    ink={
                      <InkContainer
                        className={undefined}
                        disabledInteractions={undefined}
                        inkClassName={undefined}
                        inkStyle={undefined}
                        pulse={undefined}
                        style={undefined}
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}
                        waitForInkTransition={undefined}
                      />
                    }
                    onClick={[Function]}
                    primary={true}
                    swapTheming={false}
                    type="button"
                  >
                    <Button
                      className="base-button"
                      fixedPosition="br"
                      flat={true}
                      iconBefore={true}
                      ink={
                        <InkContainer
                          className={undefined}
                          disabledInteractions={undefined}
                          inkClassName={undefined}
                          inkStyle={undefined}
                          pulse={undefined}
                          style={undefined}
                          transitionEnterTimeout={450}
                          transitionLeaveTimeout={300}
                          transitionOverlap={150}
                          waitForInkTransition={undefined}
                        />
                      }
                      onClick={[Function]}
                      primary={true}
                      swapTheming={false}
                      type="button"
                    >
                      <button
                        className="md-btn md-btn--flat md-btn--text md-pointer--hover md-text--theme-primary md-ink--primary md-inline-block base-button"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchStart={[Function]}
                        type="button"
                      >
                        <InkContainer
                          key="ink-container"
                          transitionEnterTimeout={450}
                          transitionLeaveTimeout={300}
                          transitionOverlap={150}
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            className="md-ink-container"
                            component="div"
                          >
                            <div
                              className="md-ink-container"
                            />
                          </TransitionGroup>
                        </InkContainer>
                        Withdraw
                      </button>
                    </Button>
                  </withTooltip(Button)>
                </withInk(withTooltip(Button))>
              </Button>
            </div>
          </CallToAction>
        </div>
        <div
          className="amount-wrapper"
        >
          <Amount
            symbol="ETH"
            symbolSize="small"
            value={"28.64"}
            valueSize="large"
          >
            <div
              className="amount"
            >
              <div
                className="amount-symbol small"
              >
                ETH
              </div>
              <ItemValue
                currency="ETH"
                currencyGrowth={null}
                growth={null}
                itemValue={"28.64"}
                precision={2}
                valueSize="large"
              >
                <div
                  className="no-events"
                >
                  <span
                    className="item-value large"
                  >
                    28.64
                  </span>
                </div>
              </ItemValue>
            </div>
          </Amount>
        </div>
      </div>
    </VaultTitle>
  </Connect(VaultTitle)>
</Provider>
`;
