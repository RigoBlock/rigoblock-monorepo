/* GENERATED BY TYPECHAIN VER. 0.1.5 */
/* tslint:disable */

import { BigNumber } from "bignumber.js";
import {
  TypeChainContract,
  promisify,
  ITxParams,
  IPayableTxParams,
  DeferredTransactionWrapper
} from "./typechain-runtime";

export class DragoEventful extends TypeChainContract {
  public readonly rawWeb3Contract: any;

  public constructor(web3: any, address: string | BigNumber) {
    const abi = [
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_cfdExchange", type: "address" },
          { name: "_cfd", type: "address" },
          { name: "_is_stable", type: "bool" },
          { name: "_adjustment", type: "uint32" },
          { name: "_stake", type: "uint128" }
        ],
        name: "placeOrderCFDExchange",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_exchange", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_tokenGet", type: "address" },
          { name: "_amountGet", type: "uint256" },
          { name: "_tokenGive", type: "address" },
          { name: "_amountGive", type: "uint256" },
          { name: "_expires", type: "uint256" }
        ],
        name: "placeOrderExchange",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_dragoDao", type: "address" }
        ],
        name: "changeDragoDao",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_value", type: "uint256" },
          { name: "_amount", type: "uint256" },
          { name: "_name", type: "bytes" },
          { name: "_symbol", type: "bytes" }
        ],
        name: "buyDrago",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_amount", type: "uint256" },
          { name: "_revenue", type: "uint256" },
          { name: "_name", type: "bytes" },
          { name: "_symbol", type: "bytes" }
        ],
        name: "sellDrago",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_newDrago", type: "address" },
          { name: "_name", type: "string" },
          { name: "_symbol", type: "string" },
          { name: "_dragoId", type: "uint256" }
        ],
        name: "createDrago",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_exchange", type: "address" },
          { name: "_tokenGet", type: "address" },
          { name: "_amountGet", type: "uint256" },
          { name: "_tokenGive", type: "address" },
          { name: "_amountGive", type: "uint256" },
          { name: "_expires", type: "uint256" },
          { name: "_user", type: "address" },
          { name: "_amount", type: "uint256" }
        ],
        name: "placeTradeExchange",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_exchange", type: "address" },
          { name: "_token", type: "address" },
          { name: "_value", type: "uint256" }
        ],
        name: "withdrawFromExchange",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_cfdExchange", type: "address" },
          { name: "_cfd", type: "address" },
          { name: "_id", type: "uint32" }
        ],
        name: "cancelOrderCFDExchange",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_sellPrice", type: "uint256" },
          { name: "_buyPrice", type: "uint256" }
        ],
        name: "setDragoPrice",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: true,
        inputs: [],
        name: "AUTHORITY",
        outputs: [{ name: "", type: "address" }],
        payable: false,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_ratio", type: "uint256" }
        ],
        name: "changeRatio",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_exchange", type: "address" },
          { name: "_cfd", type: "address" },
          { name: "_id", type: "uint24" }
        ],
        name: "finalizeDealCFDExchange",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_transactionFee", type: "uint256" }
        ],
        name: "setTransactionFee",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_feeCollector", type: "address" }
        ],
        name: "changeFeeCollector",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_exchange", type: "address" },
          { name: "_token", type: "address" },
          { name: "_value", type: "uint256" }
        ],
        name: "depositToExchange",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: false,
        inputs: [
          { name: "_who", type: "address" },
          { name: "_targetDrago", type: "address" },
          { name: "_exchange", type: "address" },
          { name: "_tokenGet", type: "address" },
          { name: "_amountGet", type: "uint256" },
          { name: "_tokenGive", type: "address" },
          { name: "_amountGive", type: "uint256" },
          { name: "_expires", type: "uint256" }
        ],
        name: "cancelOrderExchange",
        outputs: [{ name: "success", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: true,
        inputs: [],
        name: "VERSION",
        outputs: [{ name: "", type: "string" }],
        payable: false,
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [{ name: "_authority", type: "address" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "drago", type: "address" },
          { indexed: true, name: "from", type: "address" },
          { indexed: true, name: "to", type: "address" },
          { indexed: false, name: "amount", type: "uint256" },
          { indexed: false, name: "revenue", type: "uint256" },
          { indexed: false, name: "name", type: "bytes" },
          { indexed: false, name: "symbol", type: "bytes" }
        ],
        name: "BuyDrago",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "drago", type: "address" },
          { indexed: true, name: "from", type: "address" },
          { indexed: true, name: "to", type: "address" },
          { indexed: false, name: "amount", type: "uint256" },
          { indexed: false, name: "revenue", type: "uint256" },
          { indexed: false, name: "name", type: "bytes" },
          { indexed: false, name: "symbol", type: "bytes" }
        ],
        name: "SellDrago",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "drago", type: "address" },
          { indexed: true, name: "from", type: "address" },
          { indexed: false, name: "newRatio", type: "uint256" }
        ],
        name: "NewRatio",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "drago", type: "address" },
          { indexed: true, name: "from", type: "address" },
          { indexed: true, name: "to", type: "address" },
          { indexed: false, name: "sellPrice", type: "uint256" },
          { indexed: false, name: "buyPrice", type: "uint256" }
        ],
        name: "NewNAV",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "targetDrago", type: "address" },
          { indexed: true, name: "group", type: "address" },
          { indexed: true, name: "who", type: "address" },
          { indexed: false, name: "transactionFee", type: "uint256" }
        ],
        name: "NewFee",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "targetDrago", type: "address" },
          { indexed: true, name: "group", type: "address" },
          { indexed: true, name: "who", type: "address" },
          { indexed: false, name: "feeCollector", type: "address" }
        ],
        name: "NewCollector",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "drago", type: "address" },
          { indexed: true, name: "from", type: "address" },
          { indexed: true, name: "to", type: "address" },
          { indexed: false, name: "dragoDao", type: "address" }
        ],
        name: "DragoDao",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "drago", type: "address" },
          { indexed: true, name: "exchange", type: "address" },
          { indexed: true, name: "token", type: "address" },
          { indexed: false, name: "value", type: "uint256" },
          { indexed: false, name: "amount", type: "uint256" }
        ],
        name: "DepositExchange",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "drago", type: "address" },
          { indexed: true, name: "exchange", type: "address" },
          { indexed: true, name: "token", type: "address" },
          { indexed: false, name: "value", type: "uint256" },
          { indexed: false, name: "amount", type: "uint256" }
        ],
        name: "WithdrawExchange",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "drago", type: "address" },
          { indexed: true, name: "exchange", type: "address" },
          { indexed: true, name: "cfd", type: "address" },
          { indexed: false, name: "value", type: "uint256" },
          { indexed: false, name: "revenue", type: "uint256" }
        ],
        name: "OrderExchange",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "drago", type: "address" },
          { indexed: true, name: "exchange", type: "address" },
          { indexed: false, name: "tokenGet", type: "address" },
          { indexed: false, name: "tokenGive", type: "address" },
          { indexed: false, name: "amountGet", type: "uint256" },
          { indexed: false, name: "amountGive", type: "uint256" },
          { indexed: false, name: "get", type: "address" }
        ],
        name: "TradeExchange",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "drago", type: "address" },
          { indexed: true, name: "exchange", type: "address" },
          { indexed: true, name: "cfd", type: "address" },
          { indexed: false, name: "value", type: "uint256" },
          { indexed: false, name: "id", type: "uint256" }
        ],
        name: "CancelOrder",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "drago", type: "address" },
          { indexed: true, name: "exchange", type: "address" },
          { indexed: true, name: "cfd", type: "address" },
          { indexed: false, name: "value", type: "uint256" },
          { indexed: false, name: "id", type: "uint256" }
        ],
        name: "DealFinalized",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "drago", type: "address" },
          { indexed: true, name: "group", type: "address" },
          { indexed: true, name: "owner", type: "address" },
          { indexed: false, name: "dragoId", type: "uint256" },
          { indexed: false, name: "name", type: "string" },
          { indexed: false, name: "symbol", type: "string" }
        ],
        name: "DragoCreated",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          { indexed: true, name: "drago", type: "address" },
          { indexed: true, name: "exchange", type: "address" },
          { indexed: false, name: "tokenGet", type: "address" },
          { indexed: false, name: "tokenGive", type: "address" },
          { indexed: false, name: "amountGet", type: "uint256" },
          { indexed: false, name: "amountGive", type: "uint256" },
          { indexed: false, name: "get", type: "address" },
          { indexed: false, name: "give", type: "address" }
        ],
        name: "TradeExchange",
        type: "event"
      }
    ];
    super(web3, address, abi);
  }

  static async createAndValidate(
    web3: any,
    address: string | BigNumber
  ): Promise<DragoEventful> {
    const contract = new DragoEventful(web3, address);
    const code = await promisify(web3.eth.getCode, [address]);
    if (code === "0x0") {
      throw new Error(`Contract at ${address} doesn't exist!`);
    }
    return contract;
  }

  public get AUTHORITY(): Promise<string> {
    return promisify(this.rawWeb3Contract.AUTHORITY, []);
  }
  public get VERSION(): Promise<string> {
    return promisify(this.rawWeb3Contract.VERSION, []);
  }

  public placeOrderCFDExchangeTx(
    _who: BigNumber | string,
    _targetDrago: BigNumber | string,
    _cfdExchange: BigNumber | string,
    _cfd: BigNumber | string,
    _is_stable: boolean,
    _adjustment: BigNumber | number,
    _stake: BigNumber | number
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(
      this,
      "placeOrderCFDExchange",
      [
        _who.toString(),
        _targetDrago.toString(),
        _cfdExchange.toString(),
        _cfd.toString(),
        _is_stable.toString(),
        _adjustment.toString(),
        _stake.toString()
      ]
    );
  }
  public placeOrderExchangeTx(
    _who: BigNumber | string,
    _exchange: BigNumber | string,
    _targetDrago: BigNumber | string,
    _tokenGet: BigNumber | string,
    _amountGet: BigNumber | number,
    _tokenGive: BigNumber | string,
    _amountGive: BigNumber | number,
    _expires: BigNumber | number
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(
      this,
      "placeOrderExchange",
      [
        _who.toString(),
        _exchange.toString(),
        _targetDrago.toString(),
        _tokenGet.toString(),
        _amountGet.toString(),
        _tokenGive.toString(),
        _amountGive.toString(),
        _expires.toString()
      ]
    );
  }
  public changeDragoDaoTx(
    _who: BigNumber | string,
    _targetDrago: BigNumber | string,
    _dragoDao: BigNumber | string
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(this, "changeDragoDao", [
      _who.toString(),
      _targetDrago.toString(),
      _dragoDao.toString()
    ]);
  }
  public buyDragoTx(
    _who: BigNumber | string,
    _targetDrago: BigNumber | string,
    _value: BigNumber | number,
    _amount: BigNumber | number,
    _name: BigNumber[],
    _symbol: BigNumber[]
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(this, "buyDrago", [
      _who.toString(),
      _targetDrago.toString(),
      _value.toString(),
      _amount.toString(),
      _name.map(val => val.toString()),
      _symbol.map(val => val.toString())
    ]);
  }
  public sellDragoTx(
    _who: BigNumber | string,
    _targetDrago: BigNumber | string,
    _amount: BigNumber | number,
    _revenue: BigNumber | number,
    _name: BigNumber[],
    _symbol: BigNumber[]
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(this, "sellDrago", [
      _who.toString(),
      _targetDrago.toString(),
      _amount.toString(),
      _revenue.toString(),
      _name.map(val => val.toString()),
      _symbol.map(val => val.toString())
    ]);
  }
  public createDragoTx(
    _who: BigNumber | string,
    _newDrago: BigNumber | string,
    _name: string,
    _symbol: string,
    _dragoId: BigNumber | number
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(this, "createDrago", [
      _who.toString(),
      _newDrago.toString(),
      _name.toString(),
      _symbol.toString(),
      _dragoId.toString()
    ]);
  }
  public placeTradeExchangeTx(
    _who: BigNumber | string,
    _targetDrago: BigNumber | string,
    _exchange: BigNumber | string,
    _tokenGet: BigNumber | string,
    _amountGet: BigNumber | number,
    _tokenGive: BigNumber | string,
    _amountGive: BigNumber | number,
    _expires: BigNumber | number,
    _user: BigNumber | string,
    _amount: BigNumber | number
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(
      this,
      "placeTradeExchange",
      [
        _who.toString(),
        _targetDrago.toString(),
        _exchange.toString(),
        _tokenGet.toString(),
        _amountGet.toString(),
        _tokenGive.toString(),
        _amountGive.toString(),
        _expires.toString(),
        _user.toString(),
        _amount.toString()
      ]
    );
  }
  public withdrawFromExchangeTx(
    _who: BigNumber | string,
    _targetDrago: BigNumber | string,
    _exchange: BigNumber | string,
    _token: BigNumber | string,
    _value: BigNumber | number
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(
      this,
      "withdrawFromExchange",
      [
        _who.toString(),
        _targetDrago.toString(),
        _exchange.toString(),
        _token.toString(),
        _value.toString()
      ]
    );
  }
  public cancelOrderCFDExchangeTx(
    _who: BigNumber | string,
    _targetDrago: BigNumber | string,
    _cfdExchange: BigNumber | string,
    _cfd: BigNumber | string,
    _id: BigNumber | number
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(
      this,
      "cancelOrderCFDExchange",
      [
        _who.toString(),
        _targetDrago.toString(),
        _cfdExchange.toString(),
        _cfd.toString(),
        _id.toString()
      ]
    );
  }
  public setDragoPriceTx(
    _who: BigNumber | string,
    _targetDrago: BigNumber | string,
    _sellPrice: BigNumber | number,
    _buyPrice: BigNumber | number
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(this, "setDragoPrice", [
      _who.toString(),
      _targetDrago.toString(),
      _sellPrice.toString(),
      _buyPrice.toString()
    ]);
  }
  public changeRatioTx(
    _who: BigNumber | string,
    _targetDrago: BigNumber | string,
    _ratio: BigNumber | number
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(this, "changeRatio", [
      _who.toString(),
      _targetDrago.toString(),
      _ratio.toString()
    ]);
  }
  public finalizeDealCFDExchangeTx(
    _who: BigNumber | string,
    _targetDrago: BigNumber | string,
    _exchange: BigNumber | string,
    _cfd: BigNumber | string,
    _id: BigNumber | number
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(
      this,
      "finalizeDealCFDExchange",
      [
        _who.toString(),
        _targetDrago.toString(),
        _exchange.toString(),
        _cfd.toString(),
        _id.toString()
      ]
    );
  }
  public setTransactionFeeTx(
    _who: BigNumber | string,
    _targetDrago: BigNumber | string,
    _transactionFee: BigNumber | number
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(
      this,
      "setTransactionFee",
      [_who.toString(), _targetDrago.toString(), _transactionFee.toString()]
    );
  }
  public changeFeeCollectorTx(
    _who: BigNumber | string,
    _targetDrago: BigNumber | string,
    _feeCollector: BigNumber | string
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(
      this,
      "changeFeeCollector",
      [_who.toString(), _targetDrago.toString(), _feeCollector.toString()]
    );
  }
  public depositToExchangeTx(
    _who: BigNumber | string,
    _targetDrago: BigNumber | string,
    _exchange: BigNumber | string,
    _token: BigNumber | string,
    _value: BigNumber | number
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(
      this,
      "depositToExchange",
      [
        _who.toString(),
        _targetDrago.toString(),
        _exchange.toString(),
        _token.toString(),
        _value.toString()
      ]
    );
  }
  public cancelOrderExchangeTx(
    _who: BigNumber | string,
    _targetDrago: BigNumber | string,
    _exchange: BigNumber | string,
    _tokenGet: BigNumber | string,
    _amountGet: BigNumber | number,
    _tokenGive: BigNumber | string,
    _amountGive: BigNumber | number,
    _expires: BigNumber | number
  ): DeferredTransactionWrapper<ITxParams> {
    return new DeferredTransactionWrapper<ITxParams>(
      this,
      "cancelOrderExchange",
      [
        _who.toString(),
        _targetDrago.toString(),
        _exchange.toString(),
        _tokenGet.toString(),
        _amountGet.toString(),
        _tokenGive.toString(),
        _amountGive.toString(),
        _expires.toString()
      ]
    );
  }
}
